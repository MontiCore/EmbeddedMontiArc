import Weather.*;
import SI.*;

classdiagram Simulation{

  public interface ASTSimulationNode;

  public class ASTSimulation{
    protected String name;
    protected Optional<Simulation.ASTSimulationRenderFrequency> simulationRenderFrequency;
    protected Optional<Simulation.ASTSimulationLoopFrequency> simulationLoopFrequency;
    protected Optional<Simulation.ASTSimulationDuration> simulationDuration;
    protected Optional<Simulation.ASTSimulationType> simulationType;
    protected Optional<Simulation.ASTWeather> weather;
    protected Optional<Simulation.ASTTime> time;
    protected Optional<Simulation.ASTMapPath> mapPath;
    protected Simulation.ASTMapName mapName;
    protected Optional<Simulation.ASTMapHeight> mapHeight;
    protected Optional<Simulation.ASTMapOverlap> mapOverlap;
    protected Optional<Simulation.ASTMapSectorWidth> mapSectorWidth;
    protected Optional<Simulation.ASTMapSectorHeight> mapSectorHeight;
    protected Optional<Simulation.ASTMaxSectorUsers> maxSectorUsers;
    protected Optional<Simulation.ASTTimeout> timeout;
    protected Optional<Simulation.ASTPedestrians> pedestrians;
    protected Optional<Simulation.ASTPedestrianDensity> pedestrianDensity;
    protected Optional<Simulation.ASTVehicles> vehicles;
  }

  public class ASTSimulationRenderFrequency{
    protected SI.ASTUnitNumber simRenderFreq;
  }

  public class ASTSimulationLoopFrequency{
    protected SI.ASTUnitNumber simLoopFreq;
  }

  public class ASTSimulationDuration{
    protected SI.ASTUnitNumber simDuration;
  }

  public class ASTSimulationType;

  public class ASTWeatherObj{
    protected Weather.ASTTemperature temperature;
    protected Weather.ASTClouding clouding;
    protected Weather.ASTSight sight;
    protected Weather.ASTPrecipitationtype precipitationtype;
    protected Optional<Weather.ASTHumidity> humidity;
    protected Optional<Weather.ASTPressure> pressure;
    protected Optional<Weather.ASTWindstrength> windstrength;
    protected Optional<Weather.ASTWinddirection> winddirection;
    protected Optional<Weather.ASTPrecipitationamount> precipitationamount;
    protected java.util.List<Weather.ASTWeatherPhenomena> weatherPhenomenas;
    protected java.util.List<Weather.ASTOpticalPhenomena> opticalPhenomenas;
    protected java.util.List<Weather.ASTArtificialPhenomena> artificialPhenomenas;
  }

  public class ASTWeather{
    protected Optional<Simulation.ASTFixedWeather> fixedWeather;
    protected Optional<Simulation.ASTSequenceWeather> sequenceWeather;
    protected Optional<Simulation.ASTRandomWeather> randomWeather;
    protected Optional<Simulation.ASTForecast> forecast;
  }

  public class ASTFixedWeather{
    protected Simulation.ASTWeatherObj fixedWeatherObj;
  }

  public class ASTSequenceWeather{
    protected java.util.List<Simulation.ASTWeatherObj> randomWeatherObj;
    protected Optional<SI.ASTUnitNumber> sequenceDuration;
  }

  public class ASTRandomWeather{
    protected SI.ASTUnitNumber randomDuration;
  }

  public class ASTForecast{
    protected Simulation.ASTWeatherObj forecastWeatherObj;
    protected SI.ASTUnitNumber forecastDuration;
  }

  public class ASTTime{
    protected Optional<SI.ASTUnitNumber> unitNumber;
    protected Optional<String> timeHours;
    protected Optional<String> timeMinutes;
    protected Optional<String> timeSeconds;
    protected Optional<String> timeMilliseconds;
  }

  public class ASTMapPath{
    protected String mapPath;
  }

  public class ASTMapName{
    protected String mapName;
  }

  public class ASTMapHeight{
    protected Optional<String> heightMap;
  }

  public class ASTMapOverlap{
    protected String mapOverlap;
  }

  public class ASTMapSectorWidth{
    protected String sectorWidth;
  }

  public class ASTMapSectorHeight{
    protected String sectorHeight;
  }

  public class ASTMaxSectorUsers{
    protected String maxSectorUsers;
  }

  public class ASTTimeout{
    protected SI.ASTUnitNumber timeout;
  }

  public class ASTPedestrians{
    protected java.util.List<SI.ASTUnitNumber> startX;
    protected java.util.List<SI.ASTUnitNumber> startY;
    protected java.util.List<SI.ASTUnitNumber> endX;
    protected java.util.List<SI.ASTUnitNumber> endY;
    protected java.util.List<SI.ASTUnitNumber> endZ;
  }

  public class ASTPedestrianDensity{
    protected SI.ASTUnitNumber pedestrianDensity;
  }

  public class ASTVehicles{
    protected java.util.List<Simulation.ASTExplicitVehicle> explicitVehicles;
    protected java.util.List<Simulation.ASTPathedVehicle> pathedVehicles;
    protected java.util.List<Simulation.ASTRandomVehicle> randomVehicles;
  }

  public class ASTExplicitVehicle{
    protected String vehicle;
    protected SI.ASTUnitNumber startX;
    protected SI.ASTUnitNumber startY;
    protected SI.ASTUnitNumber startRot;
    protected SI.ASTUnitNumber destX;
    protected SI.ASTUnitNumber destY;
    protected SI.ASTUnitNumber destZ;
  }

  public class ASTPathedVehicle{
    protected SI.ASTUnitNumber spawnX;
    protected SI.ASTUnitNumber spawnY;
    protected SI.ASTUnitNumber spawnRadius;
    protected SI.ASTUnitNumber destX;
    protected SI.ASTUnitNumber destY;
    protected SI.ASTUnitNumber destRadius;
    protected Optional<String> amount;
  }

  public class ASTRandomVehicle{
    protected String amount;
    protected Optional<SI.ASTUnitNumber> startX;
    protected Optional<SI.ASTUnitNumber> startY;
    protected Optional<SI.ASTUnitNumber> destX;
    protected Optional<SI.ASTUnitNumber> destY;
  }

  enum SimulationLiterals;

}
