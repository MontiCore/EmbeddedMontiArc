/* generated from model SI*/
/* generated by template ast.Class*/
// Class declaration
/* generated by template ast_emf.AstNodeFactory*/



package si._ast;

import java.util.ArrayList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.plugin.EcorePlugin;
import org.eclipse.emf.ecore.impl.EFactoryImpl;
import de.se_rwth.commons.logging.Log;



public class SINodeFactory extends EFactoryImpl {
  
  // Creates the default factory implementation.
  public static SINodeFactory getFactory() {
    try {
      SINodeFactory eFactory = (SINodeFactory)EPackage.Registry.INSTANCE.getEFactory("http://SI/1.0"); 
      if (eFactory != null) {
        return eFactory;
     }
    }
    catch (Exception exception) {
      EcorePlugin.INSTANCE.log(exception);
    }
    if (factory == null) {
      factory = new SINodeFactory();
    }
    return factory;
  }

  
  protected static SINodeFactory factory = null;
  
  @Override
  public EObject create(EClass eClass) {
    switch (eClass.getClassifierID()) {
      case SIPackage.ASTNumber: return SINodeFactory.createASTNumber();
      case SIPackage.ASTFloatPointUnitNumber: return SINodeFactory.createASTFloatPointUnitNumber();
      case SIPackage.ASTHexUnitNumber: return SINodeFactory.createASTHexUnitNumber();
      case SIPackage.ASTUnitNumber: return SINodeFactory.createASTUnitNumber();
      case SIPackage.ASTComplexNumber: return SINodeFactory.createASTComplexNumber();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }
  
  // Returns the package supported by this factory.
  SIPackage getSIPackage() {
    return (SIPackage)getEPackage();
  }
    
  /* generated by template ast.Attribute*/
  
   protected  static  SINodeFactory factoryASTNumber = null;

  /* generated by template ast.Attribute*/
  
   protected  static  SINodeFactory factoryASTFloatPointUnitNumber = null;

  /* generated by template ast.Attribute*/
  
   protected  static  SINodeFactory factoryASTHexUnitNumber = null;

  /* generated by template ast.Attribute*/
  
   protected  static  SINodeFactory factoryASTUnitNumber = null;

  /* generated by template ast.Attribute*/
  
   protected  static  SINodeFactory factoryASTComplexNumber = null;


  protected SINodeFactory () {}

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTNumber createASTNumber()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTNumber == null) {
      factoryASTNumber = getFactory();
    }
    return factoryASTNumber.doCreateASTNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTNumber doCreateASTNumber()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTNumber createASTNumber(si._ast.ASTFloatPointUnitNumber floatPointUnitNumber,si._ast.ASTHexUnitNumber hexUnitNumber,si._ast.ASTComplexNumber complexNumber,si._ast.ASTUnitNumber unitNumber)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTNumber == null) {
      factoryASTNumber = getFactory();
    }
    return factoryASTNumber.doCreateASTNumber(floatPointUnitNumber, hexUnitNumber, complexNumber, unitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTNumber doCreateASTNumber(si._ast.ASTFloatPointUnitNumber floatPointUnitNumber,si._ast.ASTHexUnitNumber hexUnitNumber,si._ast.ASTComplexNumber complexNumber,si._ast.ASTUnitNumber unitNumber)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTNumber(floatPointUnitNumber, hexUnitNumber, complexNumber, unitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTFloatPointUnitNumber createASTFloatPointUnitNumber()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTFloatPointUnitNumber == null) {
      factoryASTFloatPointUnitNumber = getFactory();
    }
    return factoryASTFloatPointUnitNumber.doCreateASTFloatPointUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTFloatPointUnitNumber doCreateASTFloatPointUnitNumber()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTFloatPointUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTFloatPointUnitNumber createASTFloatPointUnitNumber(String tFloatPointUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tFloatPointUnitNumber, "0xA7006_842 Parameter 'tFloatPointUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTFloatPointUnitNumber == null) {
      factoryASTFloatPointUnitNumber = getFactory();
    }
    return factoryASTFloatPointUnitNumber.doCreateASTFloatPointUnitNumber(tFloatPointUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTFloatPointUnitNumber doCreateASTFloatPointUnitNumber(String tFloatPointUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tFloatPointUnitNumber, "0xA7006_931 Parameter 'tFloatPointUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTFloatPointUnitNumber(tFloatPointUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTHexUnitNumber createASTHexUnitNumber()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTHexUnitNumber == null) {
      factoryASTHexUnitNumber = getFactory();
    }
    return factoryASTHexUnitNumber.doCreateASTHexUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTHexUnitNumber doCreateASTHexUnitNumber()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTHexUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTHexUnitNumber createASTHexUnitNumber(String tHexUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tHexUnitNumber, "0xA7006_076 Parameter 'tHexUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTHexUnitNumber == null) {
      factoryASTHexUnitNumber = getFactory();
    }
    return factoryASTHexUnitNumber.doCreateASTHexUnitNumber(tHexUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTHexUnitNumber doCreateASTHexUnitNumber(String tHexUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tHexUnitNumber, "0xA7006_964 Parameter 'tHexUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTHexUnitNumber(tHexUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTUnitNumber createASTUnitNumber()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTUnitNumber == null) {
      factoryASTUnitNumber = getFactory();
    }
    return factoryASTUnitNumber.doCreateASTUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTUnitNumber doCreateASTUnitNumber()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTUnitNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTUnitNumber createASTUnitNumber(String tUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tUnitNumber, "0xA7006_242 Parameter 'tUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTUnitNumber == null) {
      factoryASTUnitNumber = getFactory();
    }
    return factoryASTUnitNumber.doCreateASTUnitNumber(tUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTUnitNumber doCreateASTUnitNumber(String tUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tUnitNumber, "0xA7006_947 Parameter 'tUnitNumber' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTUnitNumber(tUnitNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTComplexNumber createASTComplexNumber()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTComplexNumber == null) {
      factoryASTComplexNumber = getFactory();
    }
    return factoryASTComplexNumber.doCreateASTComplexNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTComplexNumber doCreateASTComplexNumber()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTComplexNumber();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTComplexNumber createASTComplexNumber(String tComplexNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tComplexNumber, "0xA7006_078 Parameter 'tComplexNumber' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTComplexNumber == null) {
      factoryASTComplexNumber = getFactory();
    }
    return factoryASTComplexNumber.doCreateASTComplexNumber(tComplexNumber);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTComplexNumber doCreateASTComplexNumber(String tComplexNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tComplexNumber, "0xA7006_073 Parameter 'tComplexNumber' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTComplexNumber(tComplexNumber);
  }

  } 


}

