/* generated from model SI*/
/* generated by template ast.AstClass*/

package si._ast;

/* generated by template ast_emf.AstEImports*/
import java.util.Optional;
import java.util.Iterator;
import de.se_rwth.commons.logging.Log;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;

 public  class ASTHexUnitNumber extends /* generated by template ast.AstSuperTypes*/
de.monticore.emf._ast.ASTECNode implements  ASTSINode
 {
  /* generated by template ast.Attribute*/
  
   protected  String tHexUnitNumber;

    /* generated by template ast.Constructor*/
  
   protected  ASTHexUnitNumber (/* generated by template ast.ParametersDeclaration*/
    // Parameters declaration
 
    )  
  /* generated by template ast.EmptyMethodBody*/

  { // empty body 
  }


    /* generated by template ast.Constructor*/
  
   protected  ASTHexUnitNumber (/* generated by template ast.ConstructorParametersDeclaration*/
     String tHexUnitNumber 
 
    )  
  /* generated by template ast.ConstructorAttributesSetter*/
  {
    setTHexUnitNumber(tHexUnitNumber);
  }


  
    /* generated by template ast.ClassMethod*/
  
   public  void accept(si._visitor.SIVisitor visitor)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(visitor, "0xA7006_085 Parameter 'visitor' must not be null.");

     /* generated by template ast.additionalmethods.Accept*/

      visitor.handle(this);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEquals(Object o,boolean forceSameOrder)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_213 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.DeepEqualsWithOrder*/

      ASTHexUnitNumber comp;
    if ((o instanceof ASTHexUnitNumber)) {
      comp = (ASTHexUnitNumber) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    return true;     


  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEquals(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_351 Parameter 'o' must not be null.");

     return deepEquals(o, true);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEqualsWithComments(Object o,boolean forceSameOrder)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_287 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.DeepEqualsWithComments*/

      ASTHexUnitNumber comp;
    if ((o instanceof ASTHexUnitNumber)) {
      comp = (ASTHexUnitNumber) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    return true;     

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEqualsWithComments(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_686 Parameter 'o' must not be null.");

     return deepEqualsWithComments(o, true);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean equalAttributes(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_829 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.EqualAttributes*/

      ASTHexUnitNumber comp;
    if ((o instanceof ASTHexUnitNumber)) {
      comp = (ASTHexUnitNumber) o;
    } else {
      return false;
    }
	// comparing tHexUnitNumber 
    if ( (this.tHexUnitNumber == null && comp.tHexUnitNumber != null) 
      || (this.tHexUnitNumber != null && !this.tHexUnitNumber.equals(comp.tHexUnitNumber)) ) {
      return false;
    }
    return true;     


  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean equalsWithComments(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_592 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.EqualsWithComments*/

      ASTHexUnitNumber comp;
    if ((o instanceof ASTHexUnitNumber)) {
      comp = (ASTHexUnitNumber) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreComments().size() == comp.get_PreComments().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreComments().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreComments().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostComments().size() == comp.get_PostComments().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostComments().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostComments().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  java.util.Collection<de.monticore.ast.ASTNode> get_Children()   { 
     
     /* generated by template ast.additionalmethods.GetChildren*/

    java.util.LinkedList<de.monticore.ast.ASTNode> result = new java.util.LinkedList<de.monticore.ast.ASTNode>();
    return result;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void remove_Child(de.monticore.ast.ASTNode child)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(child, "0xA7006_458 Parameter 'child' must not be null.");

     /* generated by template ast.additionalmethods.RemoveChild*/


  } 

    /* generated by template ast.ClassMethod*/
  
   public  static  Builder getBuilder()   { 
     
     return new Builder();

  } 

    /* generated by template ast.ClassMethod*/
  
   public  ASTHexUnitNumber deepClone()   { 
     
     return deepClone(_construct());

  } 

    /* generated by template ast.ClassMethod*/
  
   public  ASTHexUnitNumber deepClone(ASTHexUnitNumber result)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(result, "0xA7006_042 Parameter 'result' must not be null.");

     /* generated by template ast.additionalmethods.DeepCloneWithParameters*/
  
    super.deepClone(result);
    
    result.tHexUnitNumber = this.tHexUnitNumber;
    
    return result;

  } 

    /* generated by template ast.ClassMethod*/
  
   protected  ASTHexUnitNumber _construct()   { 
     
     return new ASTHexUnitNumber();

  } 

    /* generated by template ast.ClassMethod*/
  
   public  String getTHexUnitNumber()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.tHexUnitNumber;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setTHexUnitNumber(String tHexUnitNumber)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(tHexUnitNumber, "0xA7006_126 Parameter 'tHexUnitNumber' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    String oldTHexUnitNumber = this.tHexUnitNumber;
    this.tHexUnitNumber = tHexUnitNumber;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SIPackage.ASTHexUnitNumber_THexUnitNumber, oldTHexUnitNumber, tHexUnitNumber));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  Object eGet(int featureID,boolean resolve,boolean coreType)   { 
     
     /* generated by template ast_emf.additionalmethods.EGet*/
  
    switch (featureID) {
      case SIPackage.ASTHexUnitNumber_THexUnitNumber:
         return getTHexUnitNumber();
    }
    return eDynamicGet(featureID, resolve, coreType);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  void eSet(int featureID,Object newValue)   { 
     
     /* generated by template ast_emf.additionalmethods.ESet*/
  
    switch (featureID) {
      case SIPackage.ASTHexUnitNumber_THexUnitNumber:
        setTHexUnitNumber((String)newValue);
        return;
    }
    eDynamicSet(featureID, newValue);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  void eUnset(int featureID)   { 
     
     /* generated by template ast_emf.additionalmethods.EUnset*/
 
    switch (featureID) {
      case SIPackage.ASTHexUnitNumber_THexUnitNumber:
        setTHexUnitNumber(null);
      return;
    }
    eDynamicUnset(featureID);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean eIsSet(int featureID)   { 
     
     /* generated by template ast_emf.additionalmethods.EIsSet*/
 
    switch (featureID) {
      case SIPackage.ASTHexUnitNumber_THexUnitNumber:
        return getTHexUnitNumber() != null;
    }
    return eDynamicIsSet(featureID);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  int eBaseStructuralFeatureID(int featureID,Class<?> baseClass)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(baseClass, "0xA7006_130 Parameter 'baseClass' must not be null.");

     /* generated by template ast_emf.additionalmethods.EStructuralFeature*/
  
    return super.eBaseStructuralFeatureID(featureID, baseClass);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  int eDerivedStructuralFeatureID(int featureID,Class<?> baseClass)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(baseClass, "0xA7006_216 Parameter 'baseClass' must not be null.");

     /* generated by template ast_emf.additionalmethods.EStructuralFeature*/
  
    return super.eDerivedStructuralFeatureID(featureID, baseClass);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  String toString()   { 
     
     /* generated by template ast_emf.additionalmethods.EToString*/
  
    if (eIsProxy()) {
      return super.toString();
    }
    StringBuffer result = new StringBuffer(getClass().getSimpleName());
    result.append(" THexUnitNumber: ");
    result.append(tHexUnitNumber);
    return result.toString();
  } 

    /* generated by template ast.ClassMethod*/
  
   protected  EClass eStaticClass()   { 
     
     return SIPackage.Literals.ASTHexUnitNumber;
  } 

   
  /* generated by template ast.ClassContent*/
  // Class content

    /* generated by template ast.AstBuilder*/

 /**
   * Builder for {@link ASTHexUnitNumber}.
   */
  public static class Builder  {
    /* generated by template ast.BuilderAttribute*/
     protected  String tHexUnitNumber;

    public ASTHexUnitNumber build() {
      return new ASTHexUnitNumber (/* generated by template ast.BuilderConstructorParametersDeclaration*/
  
        this.tHexUnitNumber 

      );
    }
    /* generated by template ast.AstBuilderAttributeSetter*/
    public Builder tHexUnitNumber(String tHexUnitNumber) {
      this.tHexUnitNumber = tHexUnitNumber;
      return this;
    }

  }    

  
}
