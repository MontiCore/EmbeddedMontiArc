/* generated by template symboltable.ModelingLanguage*/




package simulation._symboltable;

import java.util.Optional;
import simulation._parser.SimulationParser;
import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolvingConfiguration;

public abstract class SimulationLanguage extends de.monticore.CommonModelingLanguage {

  public SimulationLanguage(String langName, String fileEnding) {
    super(langName, fileEnding);

    initResolvingFilters();
    setModelNameCalculator(new SimulationModelNameCalculator());
  }

  @Override
  public SimulationParser getParser() {
    return new SimulationParser();
  }

  @Override
  public Optional<SimulationSymbolTableCreator> getSymbolTableCreator(
      ResolvingConfiguration resolvingConfiguration, MutableScope enclosingScope) {
    return Optional.of(new SimulationSymbolTableCreator(resolvingConfiguration, enclosingScope));
  }

  @Override
  public SimulationModelLoader getModelLoader() {
    return (SimulationModelLoader) super.getModelLoader();
  }

  
  @Override
  protected SimulationModelLoader provideModelLoader() {
    return new SimulationModelLoader(this);
  }
  

  protected void initResolvingFilters() {
    addResolvingFilter(new SimulationResolvingFilter());
  }
}
