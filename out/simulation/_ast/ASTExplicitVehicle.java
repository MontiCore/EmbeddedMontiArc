/* generated from model Simulation*/
/* generated by template ast.AstClass*/

package simulation._ast;

/* generated by template ast_emf.AstEImports*/
import java.util.Optional;
import java.util.Iterator;
import de.se_rwth.commons.logging.Log;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;

 public  class ASTExplicitVehicle extends /* generated by template ast.AstSuperTypes*/
de.monticore.emf._ast.ASTECNode implements  ASTSimulationNode
 {
  /* generated by template ast.Attribute*/
  
   protected  String vehicle;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber startX;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber startY;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber startRot;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber destX;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber destY;

  /* generated by template ast.Attribute*/
  
   protected  si._ast.ASTUnitNumber destZ;

    /* generated by template ast.Constructor*/
  
   protected  ASTExplicitVehicle (/* generated by template ast.ParametersDeclaration*/
    // Parameters declaration
 
    )  
  /* generated by template ast.EmptyMethodBody*/

  { // empty body 
  }


    /* generated by template ast.Constructor*/
  
   protected  ASTExplicitVehicle (/* generated by template ast.ConstructorParametersDeclaration*/
     String vehicle 
    ,
     si._ast.ASTUnitNumber startX 
    ,
     si._ast.ASTUnitNumber startY 
    ,
     si._ast.ASTUnitNumber startRot 
    ,
     si._ast.ASTUnitNumber destX 
    ,
     si._ast.ASTUnitNumber destY 
    ,
     si._ast.ASTUnitNumber destZ 
 
    )  
  /* generated by template ast.ConstructorAttributesSetter*/
  {
    setVehicle(vehicle);
    setStartX(startX);
    setStartY(startY);
    setStartRot(startRot);
    setDestX(destX);
    setDestY(destY);
    setDestZ(destZ);
  }


  
    /* generated by template ast.ClassMethod*/
  
   public  void accept(simulation._visitor.SimulationVisitor visitor)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(visitor, "0xA7006_338 Parameter 'visitor' must not be null.");

     /* generated by template ast.additionalmethods.Accept*/

      visitor.handle(this);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void accept(weather._visitor.WeatherVisitor visitor)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(visitor, "0xA7006_406 Parameter 'visitor' must not be null.");

     /* generated by template ast.additionalmethods.AcceptSuper*/

    if (visitor instanceof simulation._visitor.SimulationVisitor) {
      accept((simulation._visitor.SimulationVisitor) visitor);      
    } else {
      de.se_rwth.commons.logging.Log.error("0xA7000_799AST node type ASTExplicitVehicle of the sub language Simulation expected a visitor of type simulation._visitor.SimulationVisitor, but got weather._visitor.WeatherVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
    }

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void accept(si._visitor.SIVisitor visitor)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(visitor, "0xA7006_890 Parameter 'visitor' must not be null.");

     /* generated by template ast.additionalmethods.AcceptSuper*/

    if (visitor instanceof simulation._visitor.SimulationVisitor) {
      accept((simulation._visitor.SimulationVisitor) visitor);      
    } else {
      de.se_rwth.commons.logging.Log.error("0xA7000_712AST node type ASTExplicitVehicle of the sub language Simulation expected a visitor of type simulation._visitor.SimulationVisitor, but got si._visitor.SIVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
    }

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEquals(Object o,boolean forceSameOrder)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_951 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.DeepEqualsWithOrder*/

      ASTExplicitVehicle comp;
    if ((o instanceof ASTExplicitVehicle)) {
      comp = (ASTExplicitVehicle) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing startX
    if ( (this.startX == null && comp.startX != null) || 
      (this.startX != null && !this.startX.deepEquals(comp.startX)) ) {
      return false;
    }
    // comparing startY
    if ( (this.startY == null && comp.startY != null) || 
      (this.startY != null && !this.startY.deepEquals(comp.startY)) ) {
      return false;
    }
    // comparing startRot
    if ( (this.startRot == null && comp.startRot != null) || 
      (this.startRot != null && !this.startRot.deepEquals(comp.startRot)) ) {
      return false;
    }
    // comparing destX
    if ( (this.destX == null && comp.destX != null) || 
      (this.destX != null && !this.destX.deepEquals(comp.destX)) ) {
      return false;
    }
    // comparing destY
    if ( (this.destY == null && comp.destY != null) || 
      (this.destY != null && !this.destY.deepEquals(comp.destY)) ) {
      return false;
    }
    // comparing destZ
    if ( (this.destZ == null && comp.destZ != null) || 
      (this.destZ != null && !this.destZ.deepEquals(comp.destZ)) ) {
      return false;
    }
    return true;     


  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEquals(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_786 Parameter 'o' must not be null.");

     return deepEquals(o, true);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEqualsWithComments(Object o,boolean forceSameOrder)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_095 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.DeepEqualsWithComments*/

      ASTExplicitVehicle comp;
    if ((o instanceof ASTExplicitVehicle)) {
      comp = (ASTExplicitVehicle) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing startX
    if ( (this.startX == null && comp.startX != null) || 
      (this.startX != null && !this.startX.deepEqualsWithComments(comp.startX)) ) {
      return false;
    }
    // comparing startY
    if ( (this.startY == null && comp.startY != null) || 
      (this.startY != null && !this.startY.deepEqualsWithComments(comp.startY)) ) {
      return false;
    }
    // comparing startRot
    if ( (this.startRot == null && comp.startRot != null) || 
      (this.startRot != null && !this.startRot.deepEqualsWithComments(comp.startRot)) ) {
      return false;
    }
    // comparing destX
    if ( (this.destX == null && comp.destX != null) || 
      (this.destX != null && !this.destX.deepEqualsWithComments(comp.destX)) ) {
      return false;
    }
    // comparing destY
    if ( (this.destY == null && comp.destY != null) || 
      (this.destY != null && !this.destY.deepEqualsWithComments(comp.destY)) ) {
      return false;
    }
    // comparing destZ
    if ( (this.destZ == null && comp.destZ != null) || 
      (this.destZ != null && !this.destZ.deepEqualsWithComments(comp.destZ)) ) {
      return false;
    }
    return true;     

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean deepEqualsWithComments(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_850 Parameter 'o' must not be null.");

     return deepEqualsWithComments(o, true);

  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean equalAttributes(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_445 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.EqualAttributes*/

      ASTExplicitVehicle comp;
    if ((o instanceof ASTExplicitVehicle)) {
      comp = (ASTExplicitVehicle) o;
    } else {
      return false;
    }
	// comparing vehicle 
    if ( (this.vehicle == null && comp.vehicle != null) 
      || (this.vehicle != null && !this.vehicle.equals(comp.vehicle)) ) {
      return false;
    }
    return true;     


  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean equalsWithComments(Object o)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(o, "0xA7006_812 Parameter 'o' must not be null.");

     /* generated by template ast.additionalmethods.EqualsWithComments*/

      ASTExplicitVehicle comp;
    if ((o instanceof ASTExplicitVehicle)) {
      comp = (ASTExplicitVehicle) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreComments().size() == comp.get_PreComments().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreComments().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreComments().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostComments().size() == comp.get_PostComments().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostComments().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostComments().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  java.util.Collection<de.monticore.ast.ASTNode> get_Children()   { 
     
     /* generated by template ast.additionalmethods.GetChildren*/

    java.util.LinkedList<de.monticore.ast.ASTNode> result = new java.util.LinkedList<de.monticore.ast.ASTNode>();
        if ( getStartX() != null ) {
          result.add(getStartX());
        }
        if ( getStartY() != null ) {
          result.add(getStartY());
        }
        if ( getStartRot() != null ) {
          result.add(getStartRot());
        }
        if ( getDestX() != null ) {
          result.add(getDestX());
        }
        if ( getDestY() != null ) {
          result.add(getDestY());
        }
        if ( getDestZ() != null ) {
          result.add(getDestZ());
        }
    return result;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void remove_Child(de.monticore.ast.ASTNode child)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(child, "0xA7006_485 Parameter 'child' must not be null.");

     /* generated by template ast.additionalmethods.RemoveChild*/

      if (getStartX() == child) {
        setStartX(null);
      }
      if (getStartY() == child) {
        setStartY(null);
      }
      if (getStartRot() == child) {
        setStartRot(null);
      }
      if (getDestX() == child) {
        setDestX(null);
      }
      if (getDestY() == child) {
        setDestY(null);
      }
      if (getDestZ() == child) {
        setDestZ(null);
      }

  } 

    /* generated by template ast.ClassMethod*/
  
   public  static  Builder getBuilder()   { 
     
     return new Builder();

  } 

    /* generated by template ast.ClassMethod*/
  
   public  ASTExplicitVehicle deepClone()   { 
     
     return deepClone(_construct());

  } 

    /* generated by template ast.ClassMethod*/
  
   public  ASTExplicitVehicle deepClone(ASTExplicitVehicle result)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(result, "0xA7006_034 Parameter 'result' must not be null.");

     /* generated by template ast.additionalmethods.DeepCloneWithParameters*/
  
    super.deepClone(result);
    
    result.vehicle = this.vehicle;
    result.setStartX((si._ast.ASTUnitNumber) this.startX.deepClone());
    result.setStartY((si._ast.ASTUnitNumber) this.startY.deepClone());
    result.setStartRot((si._ast.ASTUnitNumber) this.startRot.deepClone());
    result.setDestX((si._ast.ASTUnitNumber) this.destX.deepClone());
    result.setDestY((si._ast.ASTUnitNumber) this.destY.deepClone());
    result.setDestZ((si._ast.ASTUnitNumber) this.destZ.deepClone());
    
    return result;

  } 

    /* generated by template ast.ClassMethod*/
  
   protected  ASTExplicitVehicle _construct()   { 
     
     return new ASTExplicitVehicle();

  } 

    /* generated by template ast.ClassMethod*/
  
   public  String getVehicle()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.vehicle;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getStartX()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.startX;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getStartY()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.startY;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getStartRot()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.startRot;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getDestX()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.destX;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getDestY()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.destY;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  si._ast.ASTUnitNumber getDestZ()   { 
     
     /* generated by template ast.additionalmethods.Get*/

    return  this.destZ;

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setDestX(si._ast.ASTUnitNumber destX)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(destX, "0xA7006_451 Parameter 'destX' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldDestX = this.destX;
    this.destX = destX;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_DestX, oldDestX, destX));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setDestY(si._ast.ASTUnitNumber destY)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(destY, "0xA7006_495 Parameter 'destY' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldDestY = this.destY;
    this.destY = destY;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_DestY, oldDestY, destY));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setDestZ(si._ast.ASTUnitNumber destZ)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(destZ, "0xA7006_546 Parameter 'destZ' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldDestZ = this.destZ;
    this.destZ = destZ;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_DestZ, oldDestZ, destZ));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setStartRot(si._ast.ASTUnitNumber startRot)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(startRot, "0xA7006_069 Parameter 'startRot' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldStartRot = this.startRot;
    this.startRot = startRot;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_StartRot, oldStartRot, startRot));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setStartX(si._ast.ASTUnitNumber startX)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(startX, "0xA7006_925 Parameter 'startX' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldStartX = this.startX;
    this.startX = startX;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_StartX, oldStartX, startX));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setStartY(si._ast.ASTUnitNumber startY)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(startY, "0xA7006_116 Parameter 'startY' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    si._ast.ASTUnitNumber oldStartY = this.startY;
    this.startY = startY;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_StartY, oldStartY, startY));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  void setVehicle(String vehicle)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(vehicle, "0xA7006_839 Parameter 'vehicle' must not be null.");

     /* generated by template ast_emf.additionalmethods.Set*/

    String oldVehicle = this.vehicle;
    this.vehicle = vehicle;
    if (eNotificationRequired()) {
      eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.ASTExplicitVehicle_Vehicle, oldVehicle, vehicle));
    }  

  } 

    /* generated by template ast.ClassMethod*/
  
   public  Object eGet(int featureID,boolean resolve,boolean coreType)   { 
     
     /* generated by template ast_emf.additionalmethods.EGet*/
  
    switch (featureID) {
      case SimulationPackage.ASTExplicitVehicle_Vehicle:
         return getVehicle();
      case SimulationPackage.ASTExplicitVehicle_StartX:
         return getStartX();
      case SimulationPackage.ASTExplicitVehicle_StartY:
         return getStartY();
      case SimulationPackage.ASTExplicitVehicle_StartRot:
         return getStartRot();
      case SimulationPackage.ASTExplicitVehicle_DestX:
         return getDestX();
      case SimulationPackage.ASTExplicitVehicle_DestY:
         return getDestY();
      case SimulationPackage.ASTExplicitVehicle_DestZ:
         return getDestZ();
    }
    return eDynamicGet(featureID, resolve, coreType);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  void eSet(int featureID,Object newValue)   { 
     
     /* generated by template ast_emf.additionalmethods.ESet*/
  
    switch (featureID) {
      case SimulationPackage.ASTExplicitVehicle_Vehicle:
        setVehicle((String)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_StartX:
        setStartX((si._ast.ASTUnitNumber)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_StartY:
        setStartY((si._ast.ASTUnitNumber)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_StartRot:
        setStartRot((si._ast.ASTUnitNumber)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_DestX:
        setDestX((si._ast.ASTUnitNumber)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_DestY:
        setDestY((si._ast.ASTUnitNumber)newValue);
        return;
      case SimulationPackage.ASTExplicitVehicle_DestZ:
        setDestZ((si._ast.ASTUnitNumber)newValue);
        return;
    }
    eDynamicSet(featureID, newValue);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  void eUnset(int featureID)   { 
     
     /* generated by template ast_emf.additionalmethods.EUnset*/
 
    switch (featureID) {
      case SimulationPackage.ASTExplicitVehicle_Vehicle:
        setVehicle(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_StartX:
        setStartX(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_StartY:
        setStartY(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_StartRot:
        setStartRot(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_DestX:
        setDestX(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_DestY:
        setDestY(null);
      return;
      case SimulationPackage.ASTExplicitVehicle_DestZ:
        setDestZ(null);
      return;
    }
    eDynamicUnset(featureID);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  boolean eIsSet(int featureID)   { 
     
     /* generated by template ast_emf.additionalmethods.EIsSet*/
 
    switch (featureID) {
      case SimulationPackage.ASTExplicitVehicle_Vehicle:
        return getVehicle() != null;
      case SimulationPackage.ASTExplicitVehicle_StartX:
        return getStartX() != null;
      case SimulationPackage.ASTExplicitVehicle_StartY:
        return getStartY() != null;
      case SimulationPackage.ASTExplicitVehicle_StartRot:
        return getStartRot() != null;
      case SimulationPackage.ASTExplicitVehicle_DestX:
        return getDestX() != null;
      case SimulationPackage.ASTExplicitVehicle_DestY:
        return getDestY() != null;
      case SimulationPackage.ASTExplicitVehicle_DestZ:
        return getDestZ() != null;
    }
    return eDynamicIsSet(featureID);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  int eBaseStructuralFeatureID(int featureID,Class<?> baseClass)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(baseClass, "0xA7006_365 Parameter 'baseClass' must not be null.");

     /* generated by template ast_emf.additionalmethods.EStructuralFeature*/
  
    return super.eBaseStructuralFeatureID(featureID, baseClass);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  int eDerivedStructuralFeatureID(int featureID,Class<?> baseClass)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(baseClass, "0xA7006_786 Parameter 'baseClass' must not be null.");

     /* generated by template ast_emf.additionalmethods.EStructuralFeature*/
  
    return super.eDerivedStructuralFeatureID(featureID, baseClass);
  } 

    /* generated by template ast.ClassMethod*/
  
   public  String toString()   { 
     
     /* generated by template ast_emf.additionalmethods.EToString*/
  
    if (eIsProxy()) {
      return super.toString();
    }
    StringBuffer result = new StringBuffer(getClass().getSimpleName());
    result.append(" DestX: ");
    result.append(destX);
    result.append(" DestY: ");
    result.append(destY);
    result.append(" DestZ: ");
    result.append(destZ);
    result.append(" StartRot: ");
    result.append(startRot);
    result.append(" StartX: ");
    result.append(startX);
    result.append(" StartY: ");
    result.append(startY);
    result.append(" Vehicle: ");
    result.append(vehicle);
    return result.toString();
  } 

    /* generated by template ast.ClassMethod*/
  
   protected  EClass eStaticClass()   { 
     
     return SimulationPackage.Literals.ASTExplicitVehicle;
  } 

   
  /* generated by template ast.ClassContent*/
  // Class content

    /* generated by template ast.AstBuilder*/

 /**
   * Builder for {@link ASTExplicitVehicle}.
   */
  public static class Builder  {
    /* generated by template ast.BuilderAttribute*/
     protected  String vehicle;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber startX;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber startY;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber startRot;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber destX;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber destY;

    /* generated by template ast.BuilderAttribute*/
     protected  si._ast.ASTUnitNumber destZ;

    public ASTExplicitVehicle build() {
      return new ASTExplicitVehicle (/* generated by template ast.BuilderConstructorParametersDeclaration*/
  
        this.vehicle 
       ,
       this.startX 
       ,
       this.startY 
       ,
       this.startRot 
       ,
       this.destX 
       ,
       this.destY 
       ,
       this.destZ 

      );
    }
    /* generated by template ast.AstBuilderAttributeSetter*/
    public Builder vehicle(String vehicle) {
      this.vehicle = vehicle;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder startX(si._ast.ASTUnitNumber startX) {
      this.startX = startX;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder startY(si._ast.ASTUnitNumber startY) {
      this.startY = startY;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder startRot(si._ast.ASTUnitNumber startRot) {
      this.startRot = startRot;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder destX(si._ast.ASTUnitNumber destX) {
      this.destX = destX;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder destY(si._ast.ASTUnitNumber destY) {
      this.destY = destY;
      return this;
    }
/* generated by template ast.AstBuilderAttributeSetter*/
    public Builder destZ(si._ast.ASTUnitNumber destZ) {
      this.destZ = destZ;
      return this;
    }

  }    

  
}
