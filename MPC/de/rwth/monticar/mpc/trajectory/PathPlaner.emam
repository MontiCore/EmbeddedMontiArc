// PathPlaner:
// - First trims path to current progress
// - Then creates low level reference state vector for mpc controller
// @author Christoph Richter

package de.rwth.monticar.mpc.trajectory;

component PathPlaner<Q dt = 0.05>
{
    ports
        // state vector z
        in Q                                        x,
        in Q                                        y,
        in Q                                        yaw,
        in Q (0.0 m/s : 0.01 m/s : oo m/s)          v,

        // planned trajectory
        in  Z (0 : 100)                             trajectory_length,
        in  Q (-oo m : 0.01 m : oo m) ^ {1,100}     trajectory_x,
        in  Q (-oo m : 0.01 m : oo m) ^ {1,100}     trajectory_y,

        // reference trajectory for prediction horizon
        out Q^{4, 5}                                   z_ref;

    

    // creates a low lever reference path for the prediction horizon
    instance ReferencePathCreator referencePathCreator;

    // velocity controller
    instance VelocityController velocityController;

    
    // connect referencePathCreator
    connect x -> referencePathCreator.inputx;
    connect y -> referencePathCreator.inputy;
    connect velocityController.desiredVelocity -> referencePathCreator.desiredVelocity;
	connect yaw -> referencePathCreator.yaw;
	connect trajectory_length -> referencePathCreator.trajectory_length;
	connect trajectory_x -> referencePathCreator.inputtrajectory_x;
	connect trajectory_y -> referencePathCreator.inputtrajectory_y;


    // connect output
    connect referencePathCreator.z_ref -> z_ref;
}