/* generated from model null*/
/* generated by template symboltable.ModelNameCalculator*/

package de.monticore.lang.montisim.simlang._symboltable;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import de.monticore.symboltable.Symbol;
import de.monticore.symboltable.SymbolKind;

import de.se_rwth.commons.Joiners;
import de.se_rwth.commons.Splitters;

public class SimLangModelNameCalculator extends SimLangModelNameCalculatorTOP {
  @Override
  public Set<String> calculateModelNames(final String name, final SymbolKind kind) {
    /*System.out.println("calcing model names, got: "+name+" and "+kind.getName());
    final Set<String> calculatedModelNames = new LinkedHashSet<>();

    if (SimulationSymbol.KIND.isKindOf(kind)) {
      calculatedModelNames.addAll(calculateModelNamesForSimulation(name));
    }

    return calculatedModelNames;*/
    List<String> parts = Splitters.DOT.splitToList(name);
    /*if (parts.size() < 2) {
      return Collections.emptySet();
    }*/
    String modelName = Joiners.DOT.join(parts.subList(0, parts.size() - 1));
    HashSet<String> result = new HashSet<>();
    result.add(modelName);
    return result;
  }
}
