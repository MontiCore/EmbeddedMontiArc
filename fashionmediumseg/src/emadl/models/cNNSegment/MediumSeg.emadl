/* (c) https://github.com/MontiCore/monticore */
package cNNSegment;

component MediumSeg<Z(2:oo) classes = 10>{
    ports in Z(0:255)^{1, 56, 56} data,
         out Q(0:1)^{classes, 56, 56} softmax;

        implementation CNN {

            def conv(filter, channels){
                Convolution(kernel=(filter,filter), channels=channels) ->
                Relu()
            }

            data ->
            conv(filter=3, channels=32) ->
            Pooling(pool_type="max", kernel=(2,2), stride=(1,1)) ->
            conv(filter=3, channels=64) ->
            Pooling(pool_type="max", kernel=(2,2), stride=(1,1)) ->
            conv(filter=3, channels=128) ->
            Pooling(pool_type="max", kernel=(2,2), stride=(1,1)) ->
            conv(filter=3, channels=256) ->
            Pooling(pool_type="max", kernel=(2,2), stride=(1,1)) ->

            conv(filter=1, channels=500) ->
            Dropout(p=0.25) ->
            Convolution(kernel=(1,1), channels=10) ->
            //TransConv(kernel=(6,6), channels=classes, stride=(2,2)) ->

            Softmax() ->
            softmax;
        }
  }
