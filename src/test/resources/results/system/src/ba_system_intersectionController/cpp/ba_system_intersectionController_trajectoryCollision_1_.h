#ifndef BA_SYSTEM_INTERSECTIONCONTROLLER_TRAJECTORYCOLLISION_1_
#define BA_SYSTEM_INTERSECTIONCONTROLLER_TRAJECTORYCOLLISION_1_
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
#include "armadillo.h"
#include "ba_system_intersectionController_trajectoryCollision_1__trajectoryToLinesA.h"
#include "ba_system_intersectionController_trajectoryCollision_1__trajectoryToLinesB.h"
#include "ba_system_intersectionController_trajectoryCollision_1__dualSetCompare.h"
#include "ba_system_intersectionController_trajectoryCollision_1__lineIntersection_1_.h"
#include "ba_system_intersectionController_trajectoryCollision_1__firstLineIntersection.h"
#include "ba_system_intersectionController_trajectoryCollision_1__timeCutoffFilter.h"
using namespace arma;
class ba_system_intersectionController_trajectoryCollision_1_{
const int m = 10;
const int m1 = 9;
const int m2 = 45;
public:
mat trajectoryA;
mat trajectoryB;
double cutoffTime;
bool collision;
bool aIsFasterOut;
ba_system_intersectionController_trajectoryCollision_1__trajectoryToLinesA trajectoryToLinesA;
ba_system_intersectionController_trajectoryCollision_1__trajectoryToLinesB trajectoryToLinesB;
ba_system_intersectionController_trajectoryCollision_1__dualSetCompare dualSetCompare;
ba_system_intersectionController_trajectoryCollision_1__lineIntersection_1_ lineIntersection[45];
ba_system_intersectionController_trajectoryCollision_1__firstLineIntersection firstLineIntersection;
ba_system_intersectionController_trajectoryCollision_1__timeCutoffFilter timeCutoffFilter;
void init()
{
trajectoryA=mat(3,m);
trajectoryB=mat(3,m);
trajectoryToLinesA.init();
trajectoryToLinesB.init();
dualSetCompare.init();
lineIntersection[0].init();
lineIntersection[1].init();
lineIntersection[2].init();
lineIntersection[3].init();
lineIntersection[4].init();
lineIntersection[5].init();
lineIntersection[6].init();
lineIntersection[7].init();
lineIntersection[8].init();
lineIntersection[9].init();
lineIntersection[10].init();
lineIntersection[11].init();
lineIntersection[12].init();
lineIntersection[13].init();
lineIntersection[14].init();
lineIntersection[15].init();
lineIntersection[16].init();
lineIntersection[17].init();
lineIntersection[18].init();
lineIntersection[19].init();
lineIntersection[20].init();
lineIntersection[21].init();
lineIntersection[22].init();
lineIntersection[23].init();
lineIntersection[24].init();
lineIntersection[25].init();
lineIntersection[26].init();
lineIntersection[27].init();
lineIntersection[28].init();
lineIntersection[29].init();
lineIntersection[30].init();
lineIntersection[31].init();
lineIntersection[32].init();
lineIntersection[33].init();
lineIntersection[34].init();
lineIntersection[35].init();
lineIntersection[36].init();
lineIntersection[37].init();
lineIntersection[38].init();
lineIntersection[39].init();
lineIntersection[40].init();
lineIntersection[41].init();
lineIntersection[42].init();
lineIntersection[43].init();
lineIntersection[44].init();
firstLineIntersection.init();
timeCutoffFilter.init(2);
}
void execute()
{
timeCutoffFilter.collisionIn = firstLineIntersection.collisionOut;
timeCutoffFilter.indexInA = firstLineIntersection.lIndexA;
timeCutoffFilter.indexInB = firstLineIntersection.lIndexB;
timeCutoffFilter.colPosIn = firstLineIntersection.pos;
timeCutoffFilter.trajectoryInA = trajectoryA;
timeCutoffFilter.trajectoryInB = trajectoryB;
timeCutoffFilter.timeCutoff = cutoffTime;
timeCutoffFilter.execute();
trajectoryToLinesA.trajectoryIn = trajectoryA;
trajectoryToLinesA.execute();
trajectoryToLinesB.trajectoryIn = trajectoryB;
trajectoryToLinesB.execute();
dualSetCompare.setInA[0] = trajectoryToLinesA.lineOut[0];
dualSetCompare.setInA[1] = trajectoryToLinesA.lineOut[1];
dualSetCompare.setInA[2] = trajectoryToLinesA.lineOut[2];
dualSetCompare.setInA[3] = trajectoryToLinesA.lineOut[3];
dualSetCompare.setInA[4] = trajectoryToLinesA.lineOut[4];
dualSetCompare.setInA[5] = trajectoryToLinesA.lineOut[5];
dualSetCompare.setInA[6] = trajectoryToLinesA.lineOut[6];
dualSetCompare.setInA[7] = trajectoryToLinesA.lineOut[7];
dualSetCompare.setInA[8] = trajectoryToLinesA.lineOut[8];
dualSetCompare.setInB[0] = trajectoryToLinesB.lineOut[0];
dualSetCompare.setInB[1] = trajectoryToLinesB.lineOut[1];
dualSetCompare.setInB[2] = trajectoryToLinesB.lineOut[2];
dualSetCompare.setInB[3] = trajectoryToLinesB.lineOut[3];
dualSetCompare.setInB[4] = trajectoryToLinesB.lineOut[4];
dualSetCompare.setInB[5] = trajectoryToLinesB.lineOut[5];
dualSetCompare.setInB[6] = trajectoryToLinesB.lineOut[6];
dualSetCompare.setInB[7] = trajectoryToLinesB.lineOut[7];
dualSetCompare.setInB[8] = trajectoryToLinesB.lineOut[8];
dualSetCompare.execute();
lineIntersection[0].lineA = dualSetCompare.outA[0];
lineIntersection[0].lineB = dualSetCompare.outB[0];
lineIntersection[0].execute();
lineIntersection[1].lineA = dualSetCompare.outA[1];
lineIntersection[1].lineB = dualSetCompare.outB[1];
lineIntersection[1].execute();
lineIntersection[2].lineA = dualSetCompare.outA[2];
lineIntersection[2].lineB = dualSetCompare.outB[2];
lineIntersection[2].execute();
lineIntersection[3].lineA = dualSetCompare.outA[3];
lineIntersection[3].lineB = dualSetCompare.outB[3];
lineIntersection[3].execute();
lineIntersection[4].lineA = dualSetCompare.outA[4];
lineIntersection[4].lineB = dualSetCompare.outB[4];
lineIntersection[4].execute();
lineIntersection[5].lineA = dualSetCompare.outA[5];
lineIntersection[5].lineB = dualSetCompare.outB[5];
lineIntersection[5].execute();
lineIntersection[6].lineA = dualSetCompare.outA[6];
lineIntersection[6].lineB = dualSetCompare.outB[6];
lineIntersection[6].execute();
lineIntersection[7].lineA = dualSetCompare.outA[7];
lineIntersection[7].lineB = dualSetCompare.outB[7];
lineIntersection[7].execute();
lineIntersection[8].lineA = dualSetCompare.outA[8];
lineIntersection[8].lineB = dualSetCompare.outB[8];
lineIntersection[8].execute();
lineIntersection[9].lineA = dualSetCompare.outA[9];
lineIntersection[9].lineB = dualSetCompare.outB[9];
lineIntersection[9].execute();
lineIntersection[10].lineA = dualSetCompare.outA[10];
lineIntersection[10].lineB = dualSetCompare.outB[10];
lineIntersection[10].execute();
lineIntersection[11].lineA = dualSetCompare.outA[11];
lineIntersection[11].lineB = dualSetCompare.outB[11];
lineIntersection[11].execute();
lineIntersection[12].lineA = dualSetCompare.outA[12];
lineIntersection[12].lineB = dualSetCompare.outB[12];
lineIntersection[12].execute();
lineIntersection[13].lineA = dualSetCompare.outA[13];
lineIntersection[13].lineB = dualSetCompare.outB[13];
lineIntersection[13].execute();
lineIntersection[14].lineA = dualSetCompare.outA[14];
lineIntersection[14].lineB = dualSetCompare.outB[14];
lineIntersection[14].execute();
lineIntersection[15].lineA = dualSetCompare.outA[15];
lineIntersection[15].lineB = dualSetCompare.outB[15];
lineIntersection[15].execute();
lineIntersection[16].lineA = dualSetCompare.outA[16];
lineIntersection[16].lineB = dualSetCompare.outB[16];
lineIntersection[16].execute();
lineIntersection[17].lineA = dualSetCompare.outA[17];
lineIntersection[17].lineB = dualSetCompare.outB[17];
lineIntersection[17].execute();
lineIntersection[18].lineA = dualSetCompare.outA[18];
lineIntersection[18].lineB = dualSetCompare.outB[18];
lineIntersection[18].execute();
lineIntersection[19].lineA = dualSetCompare.outA[19];
lineIntersection[19].lineB = dualSetCompare.outB[19];
lineIntersection[19].execute();
lineIntersection[20].lineA = dualSetCompare.outA[20];
lineIntersection[20].lineB = dualSetCompare.outB[20];
lineIntersection[20].execute();
lineIntersection[21].lineA = dualSetCompare.outA[21];
lineIntersection[21].lineB = dualSetCompare.outB[21];
lineIntersection[21].execute();
lineIntersection[22].lineA = dualSetCompare.outA[22];
lineIntersection[22].lineB = dualSetCompare.outB[22];
lineIntersection[22].execute();
lineIntersection[23].lineA = dualSetCompare.outA[23];
lineIntersection[23].lineB = dualSetCompare.outB[23];
lineIntersection[23].execute();
lineIntersection[24].lineA = dualSetCompare.outA[24];
lineIntersection[24].lineB = dualSetCompare.outB[24];
lineIntersection[24].execute();
lineIntersection[25].lineA = dualSetCompare.outA[25];
lineIntersection[25].lineB = dualSetCompare.outB[25];
lineIntersection[25].execute();
lineIntersection[26].lineA = dualSetCompare.outA[26];
lineIntersection[26].lineB = dualSetCompare.outB[26];
lineIntersection[26].execute();
lineIntersection[27].lineA = dualSetCompare.outA[27];
lineIntersection[27].lineB = dualSetCompare.outB[27];
lineIntersection[27].execute();
lineIntersection[28].lineA = dualSetCompare.outA[28];
lineIntersection[28].lineB = dualSetCompare.outB[28];
lineIntersection[28].execute();
lineIntersection[29].lineA = dualSetCompare.outA[29];
lineIntersection[29].lineB = dualSetCompare.outB[29];
lineIntersection[29].execute();
lineIntersection[30].lineA = dualSetCompare.outA[30];
lineIntersection[30].lineB = dualSetCompare.outB[30];
lineIntersection[30].execute();
lineIntersection[31].lineA = dualSetCompare.outA[31];
lineIntersection[31].lineB = dualSetCompare.outB[31];
lineIntersection[31].execute();
lineIntersection[32].lineA = dualSetCompare.outA[32];
lineIntersection[32].lineB = dualSetCompare.outB[32];
lineIntersection[32].execute();
lineIntersection[33].lineA = dualSetCompare.outA[33];
lineIntersection[33].lineB = dualSetCompare.outB[33];
lineIntersection[33].execute();
lineIntersection[34].lineA = dualSetCompare.outA[34];
lineIntersection[34].lineB = dualSetCompare.outB[34];
lineIntersection[34].execute();
lineIntersection[35].lineA = dualSetCompare.outA[35];
lineIntersection[35].lineB = dualSetCompare.outB[35];
lineIntersection[35].execute();
lineIntersection[36].lineA = dualSetCompare.outA[36];
lineIntersection[36].lineB = dualSetCompare.outB[36];
lineIntersection[36].execute();
lineIntersection[37].lineA = dualSetCompare.outA[37];
lineIntersection[37].lineB = dualSetCompare.outB[37];
lineIntersection[37].execute();
lineIntersection[38].lineA = dualSetCompare.outA[38];
lineIntersection[38].lineB = dualSetCompare.outB[38];
lineIntersection[38].execute();
lineIntersection[39].lineA = dualSetCompare.outA[39];
lineIntersection[39].lineB = dualSetCompare.outB[39];
lineIntersection[39].execute();
lineIntersection[40].lineA = dualSetCompare.outA[40];
lineIntersection[40].lineB = dualSetCompare.outB[40];
lineIntersection[40].execute();
lineIntersection[41].lineA = dualSetCompare.outA[41];
lineIntersection[41].lineB = dualSetCompare.outB[41];
lineIntersection[41].execute();
lineIntersection[42].lineA = dualSetCompare.outA[42];
lineIntersection[42].lineB = dualSetCompare.outB[42];
lineIntersection[42].execute();
lineIntersection[43].lineA = dualSetCompare.outA[43];
lineIntersection[43].lineB = dualSetCompare.outB[43];
lineIntersection[43].execute();
lineIntersection[44].lineA = dualSetCompare.outA[44];
lineIntersection[44].lineB = dualSetCompare.outB[44];
lineIntersection[44].execute();
firstLineIntersection.collisionIn[0] = lineIntersection[0].intersects;
firstLineIntersection.collisionIn[1] = lineIntersection[1].intersects;
firstLineIntersection.collisionIn[2] = lineIntersection[2].intersects;
firstLineIntersection.collisionIn[3] = lineIntersection[3].intersects;
firstLineIntersection.collisionIn[4] = lineIntersection[4].intersects;
firstLineIntersection.collisionIn[5] = lineIntersection[5].intersects;
firstLineIntersection.collisionIn[6] = lineIntersection[6].intersects;
firstLineIntersection.collisionIn[7] = lineIntersection[7].intersects;
firstLineIntersection.collisionIn[8] = lineIntersection[8].intersects;
firstLineIntersection.collisionIn[9] = lineIntersection[9].intersects;
firstLineIntersection.collisionIn[10] = lineIntersection[10].intersects;
firstLineIntersection.collisionIn[11] = lineIntersection[11].intersects;
firstLineIntersection.collisionIn[12] = lineIntersection[12].intersects;
firstLineIntersection.collisionIn[13] = lineIntersection[13].intersects;
firstLineIntersection.collisionIn[14] = lineIntersection[14].intersects;
firstLineIntersection.collisionIn[15] = lineIntersection[15].intersects;
firstLineIntersection.collisionIn[16] = lineIntersection[16].intersects;
firstLineIntersection.collisionIn[17] = lineIntersection[17].intersects;
firstLineIntersection.collisionIn[18] = lineIntersection[18].intersects;
firstLineIntersection.collisionIn[19] = lineIntersection[19].intersects;
firstLineIntersection.collisionIn[20] = lineIntersection[20].intersects;
firstLineIntersection.collisionIn[21] = lineIntersection[21].intersects;
firstLineIntersection.collisionIn[22] = lineIntersection[22].intersects;
firstLineIntersection.collisionIn[23] = lineIntersection[23].intersects;
firstLineIntersection.collisionIn[24] = lineIntersection[24].intersects;
firstLineIntersection.collisionIn[25] = lineIntersection[25].intersects;
firstLineIntersection.collisionIn[26] = lineIntersection[26].intersects;
firstLineIntersection.collisionIn[27] = lineIntersection[27].intersects;
firstLineIntersection.collisionIn[28] = lineIntersection[28].intersects;
firstLineIntersection.collisionIn[29] = lineIntersection[29].intersects;
firstLineIntersection.collisionIn[30] = lineIntersection[30].intersects;
firstLineIntersection.collisionIn[31] = lineIntersection[31].intersects;
firstLineIntersection.collisionIn[32] = lineIntersection[32].intersects;
firstLineIntersection.collisionIn[33] = lineIntersection[33].intersects;
firstLineIntersection.collisionIn[34] = lineIntersection[34].intersects;
firstLineIntersection.collisionIn[35] = lineIntersection[35].intersects;
firstLineIntersection.collisionIn[36] = lineIntersection[36].intersects;
firstLineIntersection.collisionIn[37] = lineIntersection[37].intersects;
firstLineIntersection.collisionIn[38] = lineIntersection[38].intersects;
firstLineIntersection.collisionIn[39] = lineIntersection[39].intersects;
firstLineIntersection.collisionIn[40] = lineIntersection[40].intersects;
firstLineIntersection.collisionIn[41] = lineIntersection[41].intersects;
firstLineIntersection.collisionIn[42] = lineIntersection[42].intersects;
firstLineIntersection.collisionIn[43] = lineIntersection[43].intersects;
firstLineIntersection.collisionIn[44] = lineIntersection[44].intersects;
firstLineIntersection.pointsIn[0] = lineIntersection[0].point;
firstLineIntersection.pointsIn[1] = lineIntersection[1].point;
firstLineIntersection.pointsIn[2] = lineIntersection[2].point;
firstLineIntersection.pointsIn[3] = lineIntersection[3].point;
firstLineIntersection.pointsIn[4] = lineIntersection[4].point;
firstLineIntersection.pointsIn[5] = lineIntersection[5].point;
firstLineIntersection.pointsIn[6] = lineIntersection[6].point;
firstLineIntersection.pointsIn[7] = lineIntersection[7].point;
firstLineIntersection.pointsIn[8] = lineIntersection[8].point;
firstLineIntersection.pointsIn[9] = lineIntersection[9].point;
firstLineIntersection.pointsIn[10] = lineIntersection[10].point;
firstLineIntersection.pointsIn[11] = lineIntersection[11].point;
firstLineIntersection.pointsIn[12] = lineIntersection[12].point;
firstLineIntersection.pointsIn[13] = lineIntersection[13].point;
firstLineIntersection.pointsIn[14] = lineIntersection[14].point;
firstLineIntersection.pointsIn[15] = lineIntersection[15].point;
firstLineIntersection.pointsIn[16] = lineIntersection[16].point;
firstLineIntersection.pointsIn[17] = lineIntersection[17].point;
firstLineIntersection.pointsIn[18] = lineIntersection[18].point;
firstLineIntersection.pointsIn[19] = lineIntersection[19].point;
firstLineIntersection.pointsIn[20] = lineIntersection[20].point;
firstLineIntersection.pointsIn[21] = lineIntersection[21].point;
firstLineIntersection.pointsIn[22] = lineIntersection[22].point;
firstLineIntersection.pointsIn[23] = lineIntersection[23].point;
firstLineIntersection.pointsIn[24] = lineIntersection[24].point;
firstLineIntersection.pointsIn[25] = lineIntersection[25].point;
firstLineIntersection.pointsIn[26] = lineIntersection[26].point;
firstLineIntersection.pointsIn[27] = lineIntersection[27].point;
firstLineIntersection.pointsIn[28] = lineIntersection[28].point;
firstLineIntersection.pointsIn[29] = lineIntersection[29].point;
firstLineIntersection.pointsIn[30] = lineIntersection[30].point;
firstLineIntersection.pointsIn[31] = lineIntersection[31].point;
firstLineIntersection.pointsIn[32] = lineIntersection[32].point;
firstLineIntersection.pointsIn[33] = lineIntersection[33].point;
firstLineIntersection.pointsIn[34] = lineIntersection[34].point;
firstLineIntersection.pointsIn[35] = lineIntersection[35].point;
firstLineIntersection.pointsIn[36] = lineIntersection[36].point;
firstLineIntersection.pointsIn[37] = lineIntersection[37].point;
firstLineIntersection.pointsIn[38] = lineIntersection[38].point;
firstLineIntersection.pointsIn[39] = lineIntersection[39].point;
firstLineIntersection.pointsIn[40] = lineIntersection[40].point;
firstLineIntersection.pointsIn[41] = lineIntersection[41].point;
firstLineIntersection.pointsIn[42] = lineIntersection[42].point;
firstLineIntersection.pointsIn[43] = lineIntersection[43].point;
firstLineIntersection.pointsIn[44] = lineIntersection[44].point;
firstLineIntersection.execute();
collision = timeCutoffFilter.collisionOut;
aIsFasterOut = timeCutoffFilter.aIsFasterOut;
}

};
#endif
