architecture LeNet(img_height=28, img_width=28, img_channels=1, classes=10){
    def input Z(0:255)^{img_channels, img_height, img_width} image
    def output Q(0:1)^{classes} predictions

    image ->
    Convolution(kernel=(5,5), channels=20, padding="valid") ->
    Pooling(pool_type="max", kernel=(2,2), stride=(2,2), padding="valid") ->
    Convolution(kernel=(5,5), channels=50, padding="valid") ->
    Pooling(pool_type="max", kernel=(2,2), stride=(2,2), padding="valid") ->
    FullyConnected(units=500) ->
    Relu() ->
    FullyConnected(units=classes) ->
    Softmax() ->
    predictions
}