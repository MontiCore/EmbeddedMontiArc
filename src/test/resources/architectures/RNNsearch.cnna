architecture RNNsearch{
    def input Z(0:49999)^{30} source
    def output Z(0:49999)^{1} target[30]

    layer GRU(units=1000, bidirectional=true) encoder;
    source -> Embedding(output_dim=620) -> encoder;

    layer FullyConnected(units=1000, flatten=false) fc;
    encoder.output -> fc;

    1 -> target[0];

    layer GRU(units=1000) decoder;
    encoder.state -> SwapAxes(axes=(0, 1)) -> Split(n=2) -> [1] -> SwapAxes(axes=(0, 1)) -> decoder.state;

    timed<t> GreedySearch(max_length=30) {
        (
            (
                (
                    decoder.state ->
                    Repeat(n=30, axis=1)
                |
                    fc.output
                ) ->
                Concatenate(dim=2) ->
                FullyConnected(units=1000, flatten=false) ->
                Tanh() ->
                FullyConnected(units=30) ->
                Softmax()
            |
                fc.output
            ) ->
            Dot()
        |
            target[t-1] ->
            Embedding(output_dim=620)
        ) ->
        Concatenate() ->
        decoder ->
        FullyConnected(units=50000) ->
        Softmax() ->
        ArgMax() ->
        target[t]
    };

}