package de.rwth.monticar.carmodel;

component KinematicBicycleCarModel<Q dt = 0.1 s, Q l_f = 1 m, Q l_r = 1 m>
{
    ports
      // current vehicle state
      in Q                                     currentXPosition,
      in Q                                     currentYPosition,
      in Q                                     currentYawAngle,
      in Q                                     currentVelocity,

      // control input
      in Q (-1.5 m/s^2 : 1 m/s^2)               acceleration,
      in Q (-37° : 37°)                         steeringAngle,

      // output
      out Q                                     predictedXPosition,
      out Q                                     predictedYPosition,
      out Q                                     predictedYawAngle,
      out Q                                     predictedVelocity;

    implementation Math
    {
      // calculate state delta
      Q beta = atan((l_r/(l_f + l_r) * tan(steeringAngle)));
      Q dx = currentVelocity * cos(currentYawAngle + beta) * dt;
      Q dy = currentVelocity * sin(currentYawAngle + beta) * dt;
      Q dpsi = currentVelocity / l_r * sin(beta) * dt;
      Q dv = acceleration * dt;

      // assign output
      predictedXPosition = currentXPosition + dx;
      predictedYPosition = currentYPosition + dy;
      predictedYawAngle = currentYawAngle + dpsi;
      predictedVelocity = currentVelocity + dv;
    }
}