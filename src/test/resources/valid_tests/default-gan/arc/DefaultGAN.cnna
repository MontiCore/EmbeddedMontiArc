architecture DefaultGAN {
    def input Q(-1:1)^{100} noise
    def output Q(-1:1)^{1,64,64} data

    noise ->
    Reshape(shape=(100,1,1)) ->
    UpConvolution(kernel=(4,4), channels=512, stride=(1,1), padding="valid", no_bias=true) ->
    BatchNorm() ->
    Relu() ->
    UpConvolution(kernel=(4,4), channels=256, stride=(2,2), no_bias=true) ->
    BatchNorm() ->
    Relu() ->
    UpConvolution(kernel=(4,4), channels=128, stride=(2,2), no_bias=true) ->
    BatchNorm() ->
    Relu() ->
    UpConvolution(kernel=(4,4), channels=64, stride=(2,2), no_bias=true) ->
    BatchNorm() ->
    Relu() ->
    UpConvolution(kernel=(4,4), channels=1, stride=(2,2), no_bias=true) ->
    Tanh() ->
    data;
}
