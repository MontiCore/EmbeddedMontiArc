architecture LeNet(img_height=28, img_width=28, img_channels=3, classes=10){
    def input Z(0:255)^{img_channels, img_height, img_width} image
    def output Q(0:1)^{classes} predictions

    image ->
    Convolution(kernel=(5,5), channels=20, stride=(1,1), padding="no_loss") ->
    MaxPooling(kernel=(3,3), stride=(2,2), padding="no_loss") ->
    FullyConnected(units=64, no_bias=true) ->
    Tanh() ->
    FullyConnected(units=classes, no_bias=true) ->
    Softmax() ->
    predictions
}