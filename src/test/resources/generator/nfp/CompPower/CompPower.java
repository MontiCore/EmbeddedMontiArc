/* generated by template templates.de.monticore.lang.tagschema.TagSchema*/


package nfp.CompPower;

import de.monticore.CommonModelingLanguage;
import de.monticore.lang.tagging._symboltable.TagableModelingLanguage;
import de.monticore.symboltable.resolving.CommonResolvingFilter;

/**
 * generated by TagSchema.ftl
 */
public class CompPower {

  protected static CompPower instance = null;

  protected CompPower() {}

  protected static CompPower getInstance() {
    if (instance == null) {
      instance = new CompPower();
    }
    return instance;
  }

  protected void doRegisterTagTypes(TagableModelingLanguage modelingLanguage) {
    // all ModelingLanguage instances are actually instances of CommonModelingLanguage
    if(modelingLanguage instanceof CommonModelingLanguage) {
      CommonModelingLanguage commonModelingLanguage = (CommonModelingLanguage)modelingLanguage;

      modelingLanguage.addTagSymbolCreator(new CompPowerInstSymbolCreator());
      commonModelingLanguage.addResolver(CommonResolvingFilter.create(CompPowerInstSymbol.KIND));
      modelingLanguage.addTagSymbolCreator(new CompPowerSymbolCreator());
      commonModelingLanguage.addResolver(CommonResolvingFilter.create(CompPowerSymbol.KIND));
    }
  }

  public static void registerTagTypes(TagableModelingLanguage modelingLanguage) {
    getInstance().doRegisterTagTypes(modelingLanguage);
  }
}