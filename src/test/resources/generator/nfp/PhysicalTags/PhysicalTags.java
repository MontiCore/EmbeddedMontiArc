/* generated by template templates.de.monticore.lang.tagschema.TagSchema*/


package nfp.PhysicalTags;

import de.monticore.CommonModelingLanguage;
import de.monticore.lang.tagging._symboltable.TagableModelingLanguage;
import de.monticore.symboltable.resolving.CommonResolvingFilter;

/**
 * generated by TagSchema.ftl
 */
public class PhysicalTags {

  protected static PhysicalTags instance = null;

  protected PhysicalTags() {}

  protected static PhysicalTags getInstance() {
    if (instance == null) {
      instance = new PhysicalTags();
    }
    return instance;
  }

  protected void doRegisterTagTypes(TagableModelingLanguage modelingLanguage) {
    // all ModelingLanguage instances are actually instances of CommonModelingLanguage
    if(modelingLanguage instanceof CommonModelingLanguage) {
      CommonModelingLanguage commonModelingLanguage = (CommonModelingLanguage)modelingLanguage;

      modelingLanguage.addTagSymbolCreator(new WeightSymbolCreator());
      commonModelingLanguage.addResolvingFilter(CommonResolvingFilter.create(WeightSymbol.KIND));
      modelingLanguage.addTagSymbolCreator(new SizeSymbolCreator());
      commonModelingLanguage.addResolvingFilter(CommonResolvingFilter.create(SizeSymbol.KIND));
    }
  }

  public static void registerTagTypes(TagableModelingLanguage modelingLanguage) {
    getInstance().doRegisterTagTypes(modelingLanguage);
  }
}