/* (c) https://github.com/MontiCore/monticore */
package coverage;

dynamic component Test1 {

    ports
        dynamic in B ctrlSigIn[5:5],
        in Q(-90000:-1000) in1,
        dynamic in Q(0:0.1:90) angle[1:5],
        dynamic in Q(-90:0.1:0) angle2[1:5],
        dynamic in Q angle3[30],
        out Q(0:10) err,
        out B ctrlSigOut;

    @angle3::connect{
        connect 500 -> angle3[?];
    }

    @angle2::connect{
        connect 500 -> angle2[?];
    }


    instance SubComp scomp[100];

    connect 100 -> err;

    @angle[1]::value([<0,<0,<0]) && angle::connect{
        connect 101 -> err;
        connect 270 -> scomp[1].valuesIn3;
    }

    @angle[1]::value([>25,25,<25]) && angle[1]::value([<700,<10000,10000]){
        connect 102 -> err;
    }

    @ctrlSigIn::connect{
        connect 100 -> err;
        connect 200 -> err;
    }

    @ctrlSigIn::connect{

    }

    @angle[1]::value(>90.345){
        connect false -> ctrlSigOut;
    }

    @angle[1]::value(in1){

    }

    @angle[1]::value(<=0.3251){
        connect false -> ctrlSigOut;
    }

    @angle[1]::value(>=45) && angle[1]::value(<90) || angle[1]::value(>45){

    }

    @angle[1]::value(>80) && ctrlSigIn::connect{

    }

    @angle[1]::value(>80) && angle2::connect{

    }


}
