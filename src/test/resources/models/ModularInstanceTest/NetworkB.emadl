/* (c) https://github.com/MontiCore/monticore */
package ModularInstanceTest;
import NetworkC;
import NetworkD;

component NetworkB<Z classes = 10> (Z convChannels){
    ports in Z(0:255)^{1,28,28} data,
         out Q(0:1)^{classes} predictions;

    instance NetworkC netC;
    instance NetworkD netD;

    connect data -> netC.dataInput;
    connect netC.dataOutput -> netD.dataInput;
    connect netD.dataOutput -> predictions;

    /*
    implementation CNN {
        data ->
        Convolution(kernel=(5,5), channels=convChannels) ->
        Tanh() ->
        Pooling(pool_type="max", kernel=(2,2), stride=(2,2)) ->
        Convolution(kernel=(5,5), channels=convChannels) ->
        Tanh() ->
        Pooling(pool_type="max", kernel=(2,2), stride=(2,2)) ->
        FullyConnected(units=1000) ->
        Tanh() ->
        Dropout() ->
        FullyConnected(units=classes) ->
        Softmax() ->
        predictions;
    }
    */
}
