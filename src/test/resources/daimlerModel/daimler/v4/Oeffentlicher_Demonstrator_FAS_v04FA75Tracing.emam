/* (c) https://github.com/MontiCore/monticore */
package daimler.v4;
// The C&C model Oeffentlicher_Demonstrator_FAS_v04 satisfies the view FA75.
  component Oeffentlicher_Demonstrator_FAS_v04FA75Tracing {
    component DEMO_FAS_1 {
      port
        out Double acceleration_pc,
        in Double v_Obj_rel_kmh,
        in Double v_Vehicle_kmh;

      component DEMO_FAS_2 {
        port
          out Double _Acceleration_pc,
          in Double _V_Obj_rel_kmh,
          in Double _V_Vehicle_kmh;

        component Subsystem {
          port
            out Double _Acceleration_pc,
            in Double _V_Obj_rel_kmh,
            in Double _V_Vehicle_kmh;

          component DEMO_FAS_3 {
            port
              out Double _BrakeForce_pc,
              out Double _Acceleration_pc,
              in Double _V_Obj_rel_kmh,
              in Double _V_Vehicle_kmh;

            component DEMO_FAS_Funktion {
              port
                out Double brakeForce_pc,
                out Double acceleration_pc,
                in Double v_Obj_rel_kmh1,
                in Double v_Vehicle_kmh1,
                in Double v_Vehicle_kmh;

              component BrakeAssistant {
                port
                  in Double brakeForce_pedal_pc,
                  out Double brakeForceBoosted_pc;

                component Brake_Booster {
                  port
                    in Double brakeForce_pedal_pc,
                    out Double brakeForceBoosted_pc;

                  component SwitchBlock_1 {
                    port
                      in Double elseIn,
                      out Double brakeForceBoosted_pc;

                  }
instance SwitchBlock_1 switchBlock_1;
  connect brakeForce_pedal_pc -> switchBlock_1.elseIn;
  connect switchBlock_1.brakeForceBoosted_pc -> brakeForceBoosted_pc  ;
                }
instance Brake_Booster brake_Booster;
  connect brakeForce_pedal_pc -> brake_Booster.brakeForce_pedal_pc;
  connect brake_Booster.brakeForceBoosted_pc ->   brakeForceBoosted_pc;
              }
instance BrakeAssistant brakeAssistant;
              component VelocityControl {
                port
                  in Double brakeForceBoosted_pc,
                  out Double brakeForce_pc,
                  out Double acceleration_pc,
                  in Double brakeForce_Distronic_pc,
                  in Double brakeForce_Emergency_pc,
                  in Double v_CC_delta_kmh;

                component MinMax2 {
                  port
                    in Double in2,
                    out Double brakeForce_pc,
                    in Double in4,
                    in Double in5,
                    in Double in1;

                }
instance MinMax2 minMax2;
                component Condition_45 {
                  port
                    in Double in1,
                    out Boolean out1;

                }
instance Condition_45 condition_45;
                component SwitchBlock2_12 {
                  port
                    in Boolean condition,
                    out Double acceleration_pc;

                }
instance SwitchBlock2_12 switchBlock2_12;
                component Saturation1_2 {
                  port
                    in Double in1,
                    out Double out1;

                }
instance Saturation1_2 saturation1_2;
                component LookUpTable1_3 {
                  port
                    in Double in1,
                    out Double out1;

                }
instance LookUpTable1_3 lookUpTable1_3;
                component SwitchBlock1_18 {
                  port
                    in Double elseIn,
                    out Double out1;

                }
instance SwitchBlock1_18 switchBlock1_18;
  connect switchBlock1_18.out1 -> minMax2.in1;
  connect lookUpTable1_3.out1 -> switchBlock1_18.elseIn;
  connect saturation1_2.out1 -> lookUpTable1_3.in1;
  connect v_CC_delta_kmh -> saturation1_2.in1;
  connect minMax2.brakeForce_pc -> condition_45.in1;
  connect brakeForceBoosted_pc -> minMax2.in2;
  connect minMax2.brakeForce_pc -> brakeForce_pc;
  connect brakeForce_Distronic_pc -> minMax2.in4;
  connect brakeForce_Emergency_pc -> minMax2.in5;
  connect condition_45.out1 -> switchBlock2_12.condition;
  connect switchBlock2_12.acceleration_pc -> acceleration_pc;
              }
instance VelocityControl velocityControl;
              component FAS_Input {
                port
                  in Double v_Obj_rel_kmh2,
                  out Double v_Obj_rel_kmh,
                  in Double v_Vehicle_kmh1,
                  out Double v_Vehicle_ms2,
                  in Double v_Vehicle_kmh,
                  out Double v_Vehicle_kmh5;

                component Div_2 {
                  port
                    in Double v_Vehicle_kmh,
                    out Double v_Vehicle_ms;

                }
instance Div_2 div_2;
  connect v_Vehicle_kmh1 -> div_2.v_Vehicle_kmh;
  connect div_2.v_Vehicle_ms -> v_Vehicle_ms2;
  connect v_Obj_rel_kmh2 -> v_Obj_rel_kmh;
  connect v_Vehicle_kmh -> v_Vehicle_kmh5;
              }
instance FAS_Input fAS_Input;
              component Distronic {
                port
                  in Double v_Obj_rel_kmh,
                  out Double brakeForce_Distronic_pc;

                component Distronic_Enabled {
                  port
                    in Double v_Obj_rel_kmh,
                    out Double brakeForce_Distronic_pc;

                  component LookUpTable1_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance LookUpTable1_1 lookUpTable1_1;
                  component Mul1_2 {
                    port
                      in Double in2,
                      out Double brakeForce_Distronic_pc;

                  }
instance Mul1_2 mul1_2;
                  component SwitchBlock_2 {
                    port
                      in Double elseIn,
                      out Double brakeForce_Distronic_pc;

                  }
instance SwitchBlock_2 switchBlock_2;
  connect lookUpTable1_1.out1 -> mul1_2.in2;
  connect mul1_2.brakeForce_Distronic_pc -> switchBlock_2.elseIn;
  connect v_Obj_rel_kmh -> lookUpTable1_1.in1;
  connect switchBlock_2.brakeForce_Distronic_pc ->   brakeForce_Distronic_pc;
                }
instance Distronic_Enabled distronic_Enabled;
                component SwitchBlock_4 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock_4 switchBlock_4;
  connect distronic_Enabled.brakeForce_Distronic_pc -> switchBlock_4.ifIn;
  connect switchBlock_4.out1 -> brakeForce_Distronic_pc;
  connect v_Obj_rel_kmh -> distronic_Enabled.v_Obj_rel_kmh;
              }
instance Distronic distronic;
              component EmergencyBrake {
                port
                  in Double v_Vehicle_ms,
                  out Double brakeForce_Emergency_pc;

                component EmergencyBrake_Function {
                  port
                    in Double v_Vehicle_ms,
                    out Double brakeForce_Emergency_pc;

                  component Div_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance Div_1 div_1;
                  component RelOp1_1 {
                    port
                      in Double in2,
                      out Boolean out1;

                  }
instance RelOp1_1 relOp1_1;
                  component Condition1_2 {
                    port
                      in Boolean in1,
                      out Boolean out1;

                  }
instance Condition1_2 condition1_2;
                  component SwitchBlock1_2 {
                    port
                      in Boolean condition,
                      out Double out1;

                  }
instance SwitchBlock1_2 switchBlock1_2;
                  component MinMax_1 {
                    port
                      in Double in2,
                      out Double brakeForce_Emergency_pc;

                  }
instance MinMax_1 minMax_1;
  connect switchBlock1_2.out1 -> minMax_1.in2;
  connect minMax_1.brakeForce_Emergency_pc ->   brakeForce_Emergency_pc;
  connect div_1.out1 -> relOp1_1.in2;
  connect v_Vehicle_ms -> div_1.in1;
  connect condition1_2.out1 -> switchBlock1_2.condition;
  connect relOp1_1.out1 -> condition1_2.in1;
                }
instance EmergencyBrake_Function emergencyBrake_Function;
                component SwitchBlock_6 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock_6 switchBlock_6;
  connect emergencyBrake_Function.brakeForce_Emergency_pc -> switchBlock_6.ifIn;
  connect switchBlock_6.out1 -> brakeForce_Emergency_pc;
  connect v_Vehicle_ms -> emergencyBrake_Function.v_Vehicle_ms;
              }
instance EmergencyBrake emergencyBrake;
              component Tempomat {
                port
                  in Double v_Vehicle_kmh,
                  out Double v_CC_delta_kmh;

                component Tempomat_Function {
                  port
                    in Double v_Vehicle_kmh,
                    out Double v_CC_delta_kmh;

                  component CC_Enabled {
                    port
                      in Double v_Vehicle_kmh,
                      out Double v_CC_delta_kmh;

                    component Tempomat_Active {
                      port
                        in Double v_Vehicle_kmh,
                        out Double v_CC_delta_kmh;

                      component Sum_6 {
                        port
                          in Double in1,
                          out Double v_CC_delta_kmh;

                      }
instance Sum_6 sum_6;
  connect v_Vehicle_kmh -> sum_6.in1;
  connect sum_6.v_CC_delta_kmh -> v_CC_delta_kmh;
                    }
instance Tempomat_Active tempomat_Active;
                    component SwitchBlock_16 {
                      port
                        in Double ifIn,
                        out Double out1;

                    }
instance SwitchBlock_16 switchBlock_16;
  connect tempomat_Active.v_CC_delta_kmh -> switchBlock_16.ifIn;
  connect switchBlock_16.out1 -> v_CC_delta_kmh;
  connect v_Vehicle_kmh -> tempomat_Active.v_Vehicle_kmh;
                  }
instance CC_Enabled cC_Enabled;
  connect v_Vehicle_kmh -> cC_Enabled.v_Vehicle_kmh;
  connect cC_Enabled.v_CC_delta_kmh -> v_CC_delta_kmh;
                }
instance Tempomat_Function tempomat_Function;
                component SwitchBlock2_11 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock2_11 switchBlock2_11;
  connect tempomat_Function.v_CC_delta_kmh -> switchBlock2_11.ifIn;
  connect switchBlock2_11.out1 -> v_CC_delta_kmh;
  connect v_Vehicle_kmh -> tempomat_Function.v_Vehicle_kmh;
              }
instance Tempomat tempomat;
  connect tempomat.v_CC_delta_kmh -> velocityControl.v_CC_delta_kmh;
  connect fAS_Input.v_Vehicle_kmh5 -> tempomat.v_Vehicle_kmh;
  connect distronic.brakeForce_Distronic_pc ->   velocityControl.brakeForce_Distronic_pc;
  connect brakeAssistant.brakeForceBoosted_pc ->   velocityControl.brakeForceBoosted_pc;
  connect emergencyBrake.brakeForce_Emergency_pc ->   velocityControl.brakeForce_Emergency_pc;
  connect velocityControl.brakeForce_pc -> brakeForce_pc;
  connect velocityControl.acceleration_pc -> acceleration_pc;
  connect fAS_Input.v_Obj_rel_kmh -> distronic.v_Obj_rel_kmh;
  connect fAS_Input.v_Vehicle_ms2 -> emergencyBrake.v_Vehicle_ms;
  connect v_Obj_rel_kmh1 -> fAS_Input.v_Obj_rel_kmh2;
  connect v_Vehicle_kmh1 -> fAS_Input.v_Vehicle_kmh1;
  connect v_Vehicle_kmh -> fAS_Input.v_Vehicle_kmh;
            }
instance DEMO_FAS_Funktion dEMO_FAS_Funktion;
            component DEMO_FAS_Output {
              port
                in Double brakeForce_pc,
                out Double brakeForce_pcOut3,
                in Double acceleration_pc,
                out Double acceleration_pcOut2;

  connect brakeForce_pc -> brakeForce_pcOut3;
  connect acceleration_pc -> acceleration_pcOut2;
            }
instance DEMO_FAS_Output dEMO_FAS_Output;
            component DEMO_FAS_Input {
              port
                in Double v_Obj_rel_kmhIn12,
                out Double v_Obj_rel_kmh1,
                in Double v_Vehicle_b,
                out Double v_Vehicle_kmh1,
                out Double v_Vehicle_kmh;

  connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh1;
  connect v_Vehicle_b -> v_Vehicle_kmh1;
  connect v_Vehicle_b -> v_Vehicle_kmh;
            }
instance DEMO_FAS_Input dEMO_FAS_Input;
  connect dEMO_FAS_Input.v_Obj_rel_kmh1 -> dEMO_FAS_Funktion.v_Obj_rel_kmh1;
  connect dEMO_FAS_Input.v_Vehicle_kmh1 -> dEMO_FAS_Funktion.v_Vehicle_kmh1;
  connect dEMO_FAS_Input.v_Vehicle_kmh -> dEMO_FAS_Funktion.v_Vehicle_kmh;
  connect dEMO_FAS_Funktion.brakeForce_pc -> dEMO_FAS_Output.brakeForce_pc;
  connect dEMO_FAS_Funktion.acceleration_pc -> dEMO_FAS_Output.acceleration_pc;
  connect _V_Obj_rel_kmh -> dEMO_FAS_Input.v_Obj_rel_kmhIn12;
  connect _V_Vehicle_kmh -> dEMO_FAS_Input.v_Vehicle_b;
  connect dEMO_FAS_Output.brakeForce_pcOut3 -> _BrakeForce_pc;
  connect dEMO_FAS_Output.acceleration_pcOut2 -> _Acceleration_pc;
          }
instance DEMO_FAS_3 dEMO_FAS_3;
  connect dEMO_FAS_3._Acceleration_pc -> _Acceleration_pc;
  connect _V_Obj_rel_kmh -> dEMO_FAS_3._V_Obj_rel_kmh;
  connect _V_Vehicle_kmh -> dEMO_FAS_3._V_Vehicle_kmh;
        }
instance Subsystem subsystem;
  connect subsystem._Acceleration_pc -> _Acceleration_pc;
  connect _V_Obj_rel_kmh -> subsystem._V_Obj_rel_kmh;
  connect _V_Vehicle_kmh -> subsystem._V_Vehicle_kmh;
      }
instance DEMO_FAS_2 dEMO_FAS_2;
  connect dEMO_FAS_2._Acceleration_pc -> acceleration_pc;
  connect v_Obj_rel_kmh -> dEMO_FAS_2._V_Obj_rel_kmh;
  connect v_Vehicle_kmh -> dEMO_FAS_2._V_Vehicle_kmh;
    }
instance DEMO_FAS_1 dEMO_FAS_1;
    component Memory8 {
      port
        in Double in1,
        out Double out1;

    }
instance Memory8 memory8;
    component Umgebung {
      port
        in Double acceleration_pc,
        out Double v_Obj_rel_kmh,
        out Double v_Vehicle_kmh;

      component Vehicle {
        port
          in Double acceleration_pc,
          out Double v_Vehicle_kmh;

        component SwitchBlock_36 {
          port
            in Double elseIn,
            out Double out1;

        }
instance SwitchBlock_36 switchBlock_36;
        component DiscreteTransferFcnwithinitialstates {
          port
            in Double in1,
            out Double out1;

          component DiscreteStateSpace {
            port
              in Double in1,
              out Double out1;

          }
instance DiscreteStateSpace discreteStateSpace;
  connect in1 -> discreteStateSpace.in1;
  connect discreteStateSpace.out1 -> out1;
        }
instance DiscreteTransferFcnwithinitialstates discreteTransferFcnwithinitialstates;
        component Sum1_4 {
          port
            in Double v_Vehicle_kmh,
            out Double out1;

        }
instance Sum1_4 sum1_4;
        component Saturation_2 {
          port
            in Double in1,
            out Double v_Vehicle_kmh;

        }
instance Saturation_2 saturation_2;
  connect discreteTransferFcnwithinitialstates.out1 -> sum1_4.v_Vehicle_kmh;
  connect sum1_4.out1 -> saturation_2.in1;
  connect switchBlock_36.out1 -> discreteTransferFcnwithinitialstates.in1;
  connect acceleration_pc -> switchBlock_36.elseIn;
  connect saturation_2.v_Vehicle_kmh -> v_Vehicle_kmh;
      }
instance Vehicle vehicle;
      component Object {
        port
          in Double v_Vehicle_kmh,
          out Double v_Obj_rel_kmh;

        component Add {
          port
            in Double in1,
            out Double v_Obj_rel_kmh;

        }
instance Add add;
  connect v_Vehicle_kmh -> add.in1;
  connect add.v_Obj_rel_kmh -> v_Obj_rel_kmh;
      }
instance Object object;
  connect vehicle.v_Vehicle_kmh -> object.v_Vehicle_kmh;
  connect object.v_Obj_rel_kmh -> v_Obj_rel_kmh;
  connect acceleration_pc -> vehicle.acceleration_pc;
  connect vehicle.v_Vehicle_kmh -> v_Vehicle_kmh;
    }
instance Umgebung umgebung;
  connect memory8.out1 -> umgebung.acceleration_pc;
  connect umgebung.v_Obj_rel_kmh -> dEMO_FAS_1.v_Obj_rel_kmh;
  connect umgebung.v_Vehicle_kmh -> dEMO_FAS_1.v_Vehicle_kmh;
  connect dEMO_FAS_1.acceleration_pc -> memory8.in1;
  }
































































































































