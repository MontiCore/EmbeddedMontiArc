/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package z;

classdiagram myTypes {
  
  public class ChangeCmd {
    public static final int CLOSE = 0;
    public static final int OPEN = 1;
    protected int command;
    
    public java.lang.String toString() {
      return "ChangeCmd command = " + (command == CLOSE ? "close" : "")
        + (command == OPEN ? "open" : "");
    }
  }

  // can be extended by button commands.
  public class ButtonCmd {
    protected boolean pressed;
    
    public java.lang.String toString() {
      return "ButtonCmd pressed = " + pressed;
    }
  }
  
  public class OpenCmd extends ButtonCmd {
    public java.lang.String toString() {
      return super.toString().replace("ButtonCmd", "OpenCmd");
    }
  }
  
  public class CloseCmd extends ButtonCmd {
    public java.lang.String toString() {
      return super.toString().replace("ButtonCmd", "CloseCmd");
    }
  }
  
  public class StatusMsg {
    public static final int CLOSED = 0;
    public static final int OPENED = 1;
    public final static int PARTIAL = 2;
    public final static int ERROR = 3;
    public static final int ARMED = 4;
    
    protected int status;
    
    public java.lang.String toString() {
      return "StatusMsg status = " + (status == CLOSED ? "closed" : "")
        + (status == OPENED ? "opened" : "") + (status == ARMED ? "armed" : "")
        + (status == PARTIAL ? "partial" : "")
        + (status == ERROR ? "error" : "");
    }
  }
  
  public class DoorStat {
    public static final int CLOSED = 0;
    public static final int OPENED = 1;
    public static final int BLOCKED = 2;
    public static final int ERROR = 3;
    //...
    
    protected int status;
    
    public java.lang.String toString() {
      return "DoorStat status = " + (status == CLOSED ? "closed" : "")
        + (status == OPENED ? "opened" : "")
        + (status == BLOCKED ? "blocked" : "")
        + (status == ERROR ? "error" : "");
    }
  }
  
  public class LockStatus {
    public static final int CLOSED = 0;
    public static final int OPENED = 1;
    public static final int PARTIAL = 2;
    public static final int ERROR = 3;
    
    protected int status;
    
    public java.lang.String toString() {
      return "LockStatus status = " + (status == CLOSED ? "closed" : "")
        + (status == OPENED ? "opened" : "")
        + (status == PARTIAL ? "partial" : "")
        + (status == ERROR ? "error" : "");
    }
  }
  
  public interface SuperInterface1{}
  
  public interface SuperInterface2{}
  
  public interface SubInterface extends SuperInterface1, SuperInterface2{}
  
  public interface AnotherInterface{}
  
  public class SuperInterfaceImplementer implements SubInterface{}
  
  public class SubInterfaceImplementer extends SuperInterfaceImplementer 
    implements AnotherInterface {}

}
