/* (c) https://github.com/MontiCore/monticore */
package testing;

component Assistant {
    ports in Q(0:1:250) velocity,
          in Q(0:1:99)  brightness,
          in Q(0:1:255) lightcolor[3],
             
          out Q(0:1:1) highbeam;
		     
    component highbeamAssistant {
        ports in Q(0:1:250)      velocity,
              in Q(0:1:99)     brightness,
              in Q(0:1:255) lightcolor[3],
			 
              out Q(0:1:1) highbeam;
		     
        component calcLightEnv {
            ports in Q(0:1:99)     brightness,
                  in Q(0:1:255) lightcolor[3],
			 
                  out Q(0:1:1) light;
                     
            implementation Math {
                Z(0:1:1) avg = sum(lightcolor)/765 < 0.5 ? 1 : 0;
                Z(0:1:1) tooDark = brightness < 25 ? 1 : 0;
                Z(0:1:1) light = tooDark >= avg ? tooDark : avg;
            }
        }
		 
        component calcNecessity {
            ports in Q(0:1:250) velocity,
                  in Q(0:1:1)      light,
		 	         
                  out Q(0:1:1) highbeam;
                     
            implementation Math {
                Z(0:1:1) fastEnough = velocity > 50 ? 1 : 0;
                Z(0:1:1) highbeam = (fastEnough + light) == 2 ? 1 : 0;
            }
        }
        
        connect velocity -> calcNecessity.velocity;
        connect brightness -> calcLightEnv.brightness;
        connect lightcolor[:] -> calcLightEnv.lightcolor;
        connect calcLightEnv.light -> calcNecessity.light;
        connect calcNecessity.highbeam -> highbeam;
    }
    
    connect velocity -> highbeamAssistant.velocity;
    connect brightness -> highbeamAssistant.brightness;
    connect lightcolor -> highbeamAssistant.lightcolor;
    connect highbeamAssistant.highbeam -> highbeam;
}
