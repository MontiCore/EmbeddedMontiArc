/* (c) https://github.com/MontiCore/monticore */
package de.rwth.pacman.heithoff;

// UP    = 0
// DOWN  = 1
// LEFT  = 2
// RIGHT = 3

// Pacman.WALL    = 0;
// Pacman.BISCUIT = 1;
// Pacman.EMPTY   = 2;
// Pacman.BLOCK   = 3;
// Pacman.PILL    = 4;

component TryNewDirection {
    ports
     
        in Z(0cm: 180cm) pacManX,
        in Z(0cm: 210cm) pacManY,
        in Z^{19,22} map,
        in Z(0 : 1 : 3) tryDirection,
        
        out Z(0 : 1 : 3) newPacManDirection;
      
    implementation Math {
        Z x = pacManX * 10 + 1;
        Z y = pacManY * 10 + 1;
        Z plusX = 0;
        Z plusY = 0;
        
        if (tryDirection < 1.5)
            if (tryDirection < 0.5)
                plusY = -1;
            else
                plusY = 1;
            end
        else
            if (tryDirection < 2.5)
                plusX = -1;
            else 
                plusX = 1;
            end
        end
        
        Z nextTile = map(y + plusY, x + plusX);
        Z leftTile = map(y, x - 1);
        Z upTile = map(y - 1, x);
        if (nextTile == 0) || (nextTile == 3)
            if (tryDirection < 1.5)
                if (leftTile == 0) || (leftTile == 3)
                    newPacManDirection = 3;
                else
                    newPacManDirection = 2;
                end
            else
                if (upTile == 0) || (upTile == 3)
                    newPacManDirection = 1;
                else 
                    newPacManDirection = 0;
                end
            end
        else
            newPacManDirection = tryDirection;
        end
    }
      
}
