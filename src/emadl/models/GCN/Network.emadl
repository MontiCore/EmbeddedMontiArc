/* (c) https://github.com/MontiCore/monticore
package GCN;

component Network<Z(1:oo) nodes=1000, Z(1:oo) classes=10, Z(1:oo) feat_dim=1000, Z(1:oo) hidden=16>{
    ports in R(0:1)^{nodes, feat_dim} features,
        in R(0:1)^{nodes, nodes} adjacency,
        out R(0:1)^{nodes, classes} predictions;

    implementation CNN {
        features ->
        GraphConvolution(input_dim=nodes, output_dim=hidden, adjacency=adjacency) ->
        Relu() ->
        GraphConvolution(input_dim=hidden, output_dim=classes, adjacency=adjacency) ->
        Softmax() ->
        predictions;
    }
}
*/
/* (c) https://github.com/MontiCore/monticore */
package GCN;

component Network{
    ports in R(0:1)^{1000, 1000} features,
        in R(0:1)^{1000, 1000} adjacency,
        out R(0:1)^{1000, 1000} predictions;

    implementation CNN {
        features ->
        GraphConvolution(input_dim=1000, output_dim=1000, adjacency=1000) ->
        Relu() ->
        GraphConvolution(input_dim=1000, output_dim=1000, adjacency=1000) ->
        Softmax() ->
        predictions;
    }
}
