import rosidl_generator_cpp
import rosidl_typesupport_cpp
import os

cur_dir = os.path.dirname(os.path.abspath(__file__)).replace("\\","/")

template = None
with open(cur_dir + "/rclcpp_msg_gen.json", "r") as f:
    template = f.read()

if template == None:
    print("Could not load template file!")
    exit(1)

ros_base = os.path.dirname(os.path.abspath(rosidl_generator_cpp.__file__))
if os.name == "posix":
    ros_base = os.path.abspath(ros_base + "/../../../..")
else:
    ros_base = os.path.abspath(ros_base + "/../../..")

template = template.replace("<ros_base>",ros_base.replace("\\","/"))

template = template.replace("<cur_dir>",cur_dir.replace("\\","/"))
generator_arguments_file = cur_dir + "/rclcpp_msg_gen_filled.json"

with open(generator_arguments_file,"w") as f:
    f.write(template)

rosidl_generator_cpp.generate_cpp(generator_arguments_file)
# rosidl_typesupport_cpp.generate_cpp(generator_arguments_file, ["rosidl_typesupport_cpp", "rosidl_typesupport_introspection_cpp" ,"rosidl_typesupport_opensplice_cpp"])