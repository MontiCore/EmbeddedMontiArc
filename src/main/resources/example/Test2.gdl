// Define legal moves
(<= (legal ?player (move ?color_fig ?start_col ?start_row ?dest_col ?dest_row))
    (true (control ?player))
    (isFigureOnField ?player ?figure ?color_fig ?start_col ?start_row)
    (isLegalMove ?figure ?player ?start_col ?start_row ?dest_col ?dest_row)
)

// moves 1
(<= (isLegalMove pawn white ?start_col ?start_row ?start_col ?dest_row)
    (true (field ?start_col ?start_row white_pawn))
    (true (field ?start_col ?dest_row blank))
    (isNextRow ?start_row ?dest_row)
)
// moves 2
(<= (isLegalMove pawn white ?start_col 2 ?start_col 4)
    (true (field ?start_col 2 white_pawn))
    (true (field ?start_col 3 blank))
    (true (field ?start_col 4 blank))
)
// Player Figure occupies Field
(<= (isFigureOnField ?player ?figure ?color_fig ?col ?row)
    // get color fig for figure and player
    (isPlayer ?color_fig ?player)
    (isFigure ?color_fig ?figure)
    // figure occupies field (col, row)
    (true (field ?col ?row ?color_fig))
    (distinct ?color_fig blank)
)


// Constants
// ---------

// (isOpponent white black)
// (isOpponent black white)

// Match distinct colored figures to player and figure type

// (isPlayer black_pawn black)
// (isFigure black_pawn pawn)

// (isPlayer black_bishop black)
// (isFigure black_bishop bishop)

// (isPlayer black_knight black)
// (isFigure black_knight knight)

// (isPlayer black_rook black)
// (isFigure black_rook rook)

// (isPlayer black_queen black)
// (isFigure black_queen queen)

// (isPlayer black_king black)
// (isFigure black_king king)

(isPlayer white_pawn white)
(isFigure white_pawn pawn)

// (isPlayer white_bishop white)
// (isFigure white_bishop bishop)

(isPlayer white_knight white)
(isFigure white_knight knight)

(isPlayer white_rook white)
(isFigure white_rook rook)

// (isPlayer white_queen white)
// (isFigure white_queen queen)

// (isPlayer white_king white)
// (isFigure white_king king)

(isCoordinate 1)
(isCoordinate 2)
(isCoordinate 3)
(isCoordinate 4)
(isCoordinate a)
(isCoordinate b)

// Row Order
(isNextRow 1 2)
(isNextRow 2 3)
(isNextRow 3 4)
// (isNextRow 4 5)
// (isNextRow 5 6)
// (isNextRow 6 7)
// (isNextRow 7 8)

// Col Order
(isNextCol a b)
// (isNextCol b c)
// (isNextCol c d)
// (isNextCol d e)
// (isNextCol e f)
// (isNextCol f g)
// (isNextCol g h)

// Initial State
// ------- -----

(init (field a 1 white_rook))
(init (field b 1 white_knight))
// (init (field c 1 white_bishop))
// (init (field d 1 white_queen))
// (init (field e 1 white_king))
// (init (field f 1 white_bishop))
// (init (field g 1 white_knight))
// (init (field h 1 white_rook))

(init (field a 2 white_pawn))
(init (field b 2 white_pawn))
// (init (field c 2 white_pawn))
// (init (field d 2 white_pawn))
// (init (field e 2 white_pawn))
// (init (field f 2 white_pawn))
// (init (field g 2 white_pawn))
// (init (field h 2 white_pawn))

(init (field a 3 blank))
(init (field b 3 blank))
// (init (field c 3 blank))
// (init (field d 3 blank))
// (init (field e 3 blank))
// (init (field f 3 blank))
// (init (field g 3 blank))
// (init (field h 3 blank))

(init (field a 4 blank))
(init (field b 4 blank))
// (init (field c 4 blank))
// (init (field d 4 blank))
// (init (field e 4 blank))
// (init (field f 4 blank))
// (init (field g 4 blank))
// (init (field h 4 blank))

// (init (field a 5 blank))
// (init (field b 5 blank))
// (init (field c 5 blank))
// (init (field d 5 blank))
// (init (field e 5 blank))
// (init (field f 5 blank))
// (init (field g 5 blank))
// (init (field h 5 blank))

// (init (field a 6 blank))
// (init (field b 6 blank))
// (init (field c 6 blank))
// (init (field d 6 blank))
// (init (field e 6 blank))
// (init (field f 6 blank))
// (init (field g 6 blank))
// (init (field h 6 blank))

// (init (field a 7 black_pawn))
// (init (field b 7 black_pawn))
// (init (field c 7 black_pawn))
// (init (field d 7 black_pawn))
// (init (field e 7 black_pawn))
// (init (field f 7 black_pawn))
// (init (field g 7 black_pawn))
// (init (field h 7 black_pawn))

// (init (field a 8 black_rook))
// (init (field b 8 black_knight))
// (init (field c 8 black_bishop))
// (init (field d 8 black_queen))
// (init (field e 8 black_king))
// (init (field f 8 black_bishop))
// (init (field g 8 black_knight))
// (init (field h 8 black_rook))

(init (control white))
