// Chess:

// Roles
// -----

(role white)
(role black)

// Initial State
// ------- -----

(init (field a 1 white_rook))
(init (field b 1 white_knight))

(init (field a 2 white_pawn))
(init (field b 2 white_pawn))

(init (field a 3 blank))
(init (field b 3 blank))

(init (field a 4 blank))
(init (field b 4 blank))

(init (field a 5 blank))
(init (field b 5 blank))

(init (field a 6 blank))
(init (field b 6 blank))

(init (field a 7 black_pawn))
(init (field b 7 black_pawn))

(init (field a 8 black_rook))
(init (field b 8 black_knight))

(init (control white))

// Give control to opponent
(<= (next (control ?opponent))
    (true (control ?player))
    (isOpponent ?player ?opponent)
)

// // Move figure on field with move command
// // Copy ?fig from ?start_col ?start_row to ?dest_col ?dest_row
// (<= (next (field ?dest_col ?dest_row ?colored_fig))
//     (does ?player (move ?colored_fig ?start_col ?start_row ?dest_col ?dest_row))
// )

// // Delete ?fig from ?col ?row with move from ?col ?row
// (<= (next (field ?start_col ?start_row blank))
//     (does ?player (move ?fig ?start_col ?start_row ?dest_col ?dest_row))
// )

// Copy all untouched fields
(<= (next (field ?any_col ?any_row ?any_colored_fig))
    (true (field ?any_col ?any_row ?any_colored_fig))
    (does ?player (move ?colored_fig ?start_col ?start_row ?dest_col ?dest_row))
    (distinct ?any_col ?start_col)
    (distinct ?any_col ?dest_col)
    (distinct ?any_row ?start_row)
    (distinct ?any_row ?dest_row)
)

// Define legal moves
(<= (legal ?player (move ?color_fig ?start_col ?start_row ?dest_col ?dest_row))
    (true (control ?player))
    (isFigureOnField ?player ?figure ?color_fig ?start_col ?start_row)
    (isLegalMove ?figure ?player ?start_col ?start_row ?dest_col ?dest_row)
)


// --------------
// Help functions
// --------------

// Match legal move to figure

// Black Pawn
// ----- ----

// moves 1
(<= (isLegalMove pawn black ?start_col ?start_row ?start_col ?dest_row)
    (true (field ?start_col ?start_row black_pawn))
    (true (field ?start_col ?dest_row blank))
    (isNextRow ?dest_row ?start_row)
)
// moves 2
(<= (isLegalMove pawn black ?start_col 7 ?start_col 5)
    (true (field ?start_col 7 black_pawn))
    (true (field ?start_col 6 blank))
    (true (field ?start_col 5 blank))
)
// captures left
(<= (isLegalMove pawn black ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?start_col ?start_row black_pawn))
    (isFigureOnField white ?figure ?color_fig ?dest_col ?dest_row)
    (isNextRow ?dest_row ?start_row)
    (isNextCol ?dest_col ?start_col)
)
// captures right
(<= (isLegalMove pawn black ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?start_col ?start_row black_pawn))
    (isFigureOnField white ?figure ?color_fig ?dest_col ?dest_row)
    (isNextRow ?dest_row ?start_row)
    (isNextCol ?start_col ?dest_col)
)

// White Pawn
// ----- ----

// moves 1
(<= (isLegalMove pawn white ?start_col ?start_row ?start_col ?dest_row)
    (true (field ?start_col ?start_row white_pawn))
    (true (field ?start_col ?dest_row blank))
    (isNextRow ?start_row ?dest_row)
)
// moves 2
(<= (isLegalMove pawn white ?start_col 2 ?start_col 4)
    (true (field ?start_col 2 white_pawn))
    (true (field ?start_col 3 blank))
    (true (field ?start_col 4 blank))
)
// captures left
(<= (isLegalMove pawn white ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?start_col ?start_row white_pawn))
    (isFigureOnField black ?figure ?color_fig ?dest_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
    (isNextCol ?dest_col ?start_col)
)
// captures left
(<= (isLegalMove pawn white ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?start_col ?start_row white_pawn))
    (isFigureOnField black ?figure ?color_fig ?dest_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
    (isNextCol ?start_col ?dest_col)
)

// Bishop
// ------

// moves to blank
(<= (isLegalMove bishop ?player ?start_col ?start_row ?dest_col ?dest_row)
    // bishop occupies field (col, row)
    (true (field ?dest_col ?dest_row blank))
    (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
)
// captures
(<= (isLegalMove bishop ?player ?start_col ?start_row ?dest_col ?dest_row)
    (isOpponent ?player ?opponent)
    (isFigureOnField ?opponent ?figure ?color_fig ?dest_col ?dest_row)
    (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
)

// Knight
// ------

// moves to blank
(<= (isLegalMove knight ?player ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?dest_col ?dest_row blank))
    (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
)
// captures
(<= (isLegalMove knight ?player ?start_col ?start_row ?dest_col ?dest_row)
    (isOpponent ?player ?opponent)
    (isFigureOnField ?opponent ?figure ?color_fig ?dest_col ?dest_row)
    (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
)

// All Knight Move possibilities on board
// 2xTop 1xLeft
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?start_row ?pre_dest_row)
    (isNextRow ?pre_dest_row ?dest_row)
    (isNextCol ?dest_col ?start_col)
)
// 2xTop 1xRight
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?start_row ?pre_dest_row)
    (isNextRow ?pre_dest_row ?dest_row)
    (isNextCol ?start_col ?dest_col)
)
// 2xBottom 1xLeft
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?pre_dest_row ?start_row)
    (isNextRow ?start_row ?dest_row)
    (isNextCol ?dest_col ?start_col)
)
// 2xBottom 1xRight
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?pre_dest_row ?start_row)
    (isNextRow ?dest_row ?pre_dest_row)
    (isNextCol ?start_col ?dest_col)
)
// 2xLeft 1xTop
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextCol ?dest_col ?pre_dest_col)
    (isNextCol ?pre_dest_col ?start_col)
    (isNextRow ?start_row ?dest_row)
)
// 2xLeft 1xBottom
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)

    (isNextCol ?dest_col ?pre_dest_col)
    (isNextCol ?pre_dest_col ?start_col)
    (isNextRow ?dest_row ?start_row)
)
// 2xRight 1xTop
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextCol ?pre_dest_col ?dest_col)
    (isNextCol ?start_col ?pre_dest_col)
    (isNextRow ?start_row ?dest_row)
)
// 2xRight 1xBottom
(<= (isLegalKnightMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextCol ?pre_dest_col ?dest_col)
    (isNextCol ?start_col ?pre_dest_col)
    (isNextRow ?start_row ?dest_row)
)


// Rook
// ----

// moves to blank
(<= (isLegalMove rook ?player ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?dest_col ?dest_row blank))
    (isLineCross ?start_col ?start_row ?dest_col ?dest_row)
)

// captures
(<= (isLegalMove rook ?player ?start_col ?start_row ?dest_col ?dest_row)
    (isOpponent ?player ?opponent)
    (isFigureOnField ?opponent ?figure ?color_fig ?dest_col ?dest_row)
    (isLineCross ?start_col ?start_row ?dest_col ?dest_row)
)

// Queen
// -----

// moves to blank
(<= (isLegalMove queen ?player ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?dest_col ?dest_row blank))
    (isLegalQueenMove ?start_col ?start_row ?dest_col ?dest_row)
)

// captures
(<= (isLegalMove queen ?player ?start_col ?start_row ?dest_col ?dest_row)
    (isOpponent ?player ?opponent)
    (isFigureOnField ?opponent ?figure ?color_fig ?dest_col ?dest_row)
    (isLegalQueenMove ?start_col ?start_row ?dest_col ?dest_row)
)



// All possible queen moves
(<= (isLegalQueenMove ?start_col ?start_row ?dest_col ?dest_row)
    (isLineCross ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isLegalQueenMove ?start_col ?start_row ?dest_col ?dest_row)
    (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
)


// King
// ----

// moves to blank
(<= (isLegalMove king ?player ?start_col ?start_row ?dest_col ?dest_row)
    (true (field ?dest_col ?dest_row blank))
    (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
)

// captures
(<= (isLegalMove king ?player ?start_col ?start_row ?dest_col ?dest_row)
    (isOpponent ?player ?opponent)
    (isFigureOnField ?opponent ?figure ?color_fig ?dest_col ?dest_row)
    (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
)

// All possible king moves
// Top
(<= (isLegalKingMove ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
)
// Bottom
(<= (isLegalKingMove ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?dest_row ?start_row)
)
// Left
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?dest_col ?start_col)
)
// Right
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?dest_col)
)
// Top Left
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopLeft ?start_col ?start_row ?dest_col ?dest_row)
)
// Top Right
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopRight ?start_col ?start_row ?dest_col ?dest_row)
)
// Bottom Left
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
)
// Bottom Right
(<= (isLegalKingMove ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomRight ?start_col ?start_row ?dest_col ?dest_row)
)


// Player Figure occupies Field
(<= (isFigureOnField ?player ?figure ?color_fig ?col ?row)
    // get color fig for figure and player
    (isPlayer ?color_fig ?player)
    (isFigure ?color_fig ?figure)
    // figure occupies field (col, row)
    (true (field ?col ?row ?color_fig))
    (distinct ?color_fig blank)
)

// Line Cross
(<= (isLineCross ?start_col ?start_row ?start_col ?dest_row)
    (isLineTop ?start_col ?start_row ?start_col ?dest_row)
)
(<= (isLineCross ?start_col ?start_row ?start_col ?dest_row)
    (isLineBottom ?start_col ?start_row ?start_col ?dest_row)
)
(<= (isLineCross ?start_col ?start_row ?start_col ?dest_row)
    (isLineLeft ?start_col ?start_row ?start_col ?dest_row)
)
(<= (isLineCross ?start_col ?start_row ?start_col ?dest_row)
    (isLineRight ?start_col ?start_row ?start_col ?dest_row)
)

// Line to Top
(<= (isLineTop ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
)
(<= (isLineTop ?start_col ?start_row ?start_col ?dest_row)
    (__isLineTop ?start_col ?start_row ?start_col ?dest_row)
)

(<= (__isLineTop ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
)
(<= (__isLineTop ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?start_row_succ)
    (true (field ?start_col ?start_row blank))
    (__isLineTop ?start_col ?start_row_succ ?start_col ?dest_row)
)

// Line to Bottom
// Swap start row and dest row (mirror play field on x-axis)
(<= (isLineBottom ?start_col ?dest_row ?start_col ?start_row)
    (isNextRow ?start_row ?dest_row)
)
(<= (isLineBottom ?start_col ?dest_row ?start_col ?start_row)
    (__isLineBottom ?start_col ?start_row ?start_col ?dest_row)
)

(<= (__isLineBottom ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?dest_row)
)
(<= (__isLineBottom ?start_col ?start_row ?start_col ?dest_row)
    (isNextRow ?start_row ?start_row_succ)
    (true (field ?start_col ?start_row blank))
    (__isLineBottom ?start_col ?start_row_succ ?start_col ?dest_row)
)

// Line to Right
(<= (isLineRight ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?dest_col)
)
(<= (isLineRight ?start_col ?start_row ?dest_col ?start_row)
    (__isLineRight ?start_col ?start_row ?dest_col ?start_row)
)

(<= (__isLineRight ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?dest_col)
)
(<= (__isLineRight ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?start_col_succ)
    (true (field ?start_col_succ ?start_row blank))
    (__isLineRight ?start_col_succ ?start_row ?dest_col ?start_row)
)

// Line to Left
// Swap start col and dest col (mirror play field on y-axis)
(<= (isLineLeft ?dest_col ?start_row ?start_col ?start_row)
    (isNextCol ?start_col ?dest_col)
)
(<= (isLineLeft ?dest_col ?start_row ?start_col ?start_row)
    (__isLineLeft ?start_col ?start_row ?dest_col ?start_row)
)

(<= (__isLineLeft ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?dest_col)
)
(<= (__isLineLeft ?start_col ?start_row ?dest_col ?start_row)
    (isNextCol ?start_col ?start_col_succ)
    (true (field ?start_col_succ ?start_row blank))
    (__isLineLeft ?start_col_succ ?start_row ?dest_col ?start_row)
)

// Diagonal Cross until blocked
(<= (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
    (isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
    (isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
    (isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalCross ?start_col ?start_row ?dest_col ?dest_row)
    (isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
)

// isDiagonalTopLeft
// true, if field (x,y) lies on diagonal with origin (a,b) and fields between are blank
(<= (isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
    (__isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
)

(<= (__isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (__isDiagonalTopLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopLeft ?start_col ?start_row ?r ?s)
    (true (field ?r ?s blank))
    (__isDiagonalTopLeft ?r ?s ?dest_col ?dest_row)
)

// isDiagonalTopRight
(<= (isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopRight ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
    (__isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
)

(<= (__isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopRight ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (__isDiagonalTopRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellTopRight ?start_col ?start_row ?r ?s)
    (true (field ?r ?s blank))
    (__isDiagonalTopRight ?r ?s ?dest_col ?dest_row)
)

// isDiagonalBottomLeft
(<= (isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
    (__isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
)

(<= (__isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (__isDiagonalBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomLeft ?start_col ?start_row ?r ?s)
    (true (field ?r ?s blank))
    (__isDiagonalBottomLeft ?r ?s ?dest_col ?dest_row)
)

// isDiagonalBottomRight
(<= (isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomRight ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
    (__isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
)

(<= (__isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomRight ?start_col ?start_row ?dest_col ?dest_row)
)
(<= (__isDiagonalBottomRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextDiagonalCellBottomRight ?start_col ?start_row ?r ?s)
    (true (field ?r ?s blank))
    (__isDiagonalBottomRight ?r ?s ?dest_col ?dest_row)
)


// Diagonal Single Cell Order
(<= (isNextDiagonalCellTopLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?start_col ?dest_col)
    (isNextCol ?dest_row ?start_row)
)

(<= (isNextDiagonalCellTopRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?start_col ?dest_col)
    (isNextCol ?start_row ?dest_row)
)

(<= (isNextDiagonalCellBottomLeft ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?dest_col ?start_col)
    (isNextCol ?dest_row ?start_row)
)

(<= (isNextDiagonalCellBottomRight ?start_col ?start_row ?dest_col ?dest_row)
    (isNextRow ?dest_col ?start_col)
    (isNextCol ?start_row ?dest_row)
)


// ---------
// Constants
// ---------

(isOpponent white black)
(isOpponent black white)

// Match distinct colored figures to player and figure type

(isPlayer black_pawn black)
(isFigure black_pawn pawn)

(isPlayer black_bishop black)
(isFigure black_bishop bishop)

(isPlayer black_knight black)
(isFigure black_knight knight)

(isPlayer black_rook black)
(isFigure black_rook rook)

(isPlayer black_queen black)
(isFigure black_queen queen)

(isPlayer black_king black)
(isFigure black_king king)

(isPlayer white_pawn white)
(isFigure white_pawn pawn)

(isPlayer white_bishop white)
(isFigure white_bishop bishop)

(isPlayer white_knight white)
(isFigure white_knight knight)

(isPlayer white_rook white)
(isFigure white_rook rook)

(isPlayer white_queen white)
(isFigure white_queen queen)

(isPlayer white_king white)
(isFigure white_king king)

// Row Order
(isNextRow 1 2)
(isNextRow 2 3)
(isNextRow 3 4)
(isNextRow 4 5)
(isNextRow 5 6)
(isNextRow 6 7)
(isNextRow 7 8)

// Col Order
(isNextCol a b)
