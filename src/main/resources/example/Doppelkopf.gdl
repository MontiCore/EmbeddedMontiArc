// -----------------------
// -------- ROLES --------
// -----------------------

(role random)
(role player1)
(role player2)
(role player3)
(role player4)

(player player1)
(player player2)
(player player3)
(player player4)

// -----------------------
// -------- INIT ---------
// -----------------------

// historie der stiche (sieht nur der gewinner des stiches)
// (init (sees none (stich 1 none none none none)))
// (init (sees none (stich 2 none none none none)))
// (init (sees none (stich 3 none none none none)))
// (init (sees none (stich 4 none none none none)))
// (init (sees none (stich 5 none none none none)))
// (init (sees none (stich 6 none none none none)))
// (init (sees none (stich 7 none none none none)))
// (init (sees none (stich 8 none none none none)))
// (init (sees none (stich 9 none none none none)))
// (init (sees none (stich 10 none none none none)))
// (init (sees none (stich 11 none none none none))) // mit (2*4) neunen = 12 stiche
// (init (sees none (stich 12 none none none none)))

// hand
// force hochzeit
// (init (sees player1 (hand player1 kreuz_dame_1)))
// (init (sees player1 (hand player1 kreuz_dame_2)))


// punktetabelle
(init (punkte player1 0))
(init (punkte player2 0))
(init (punkte player3 0))
(init (punkte player4 0))

// teams
(init (team player1 none))
(init (team player2 none))
(init (team player3 none))
(init (team player4 none))

// ansage = keine 120 90 60 30 0
(init (ansage re none))
(init (ansage kontra none))

// offene spielart
(init (spielart normal none))

// geschlossene spielart (stille hochzeit)
(init (sees none (hidden_spielart normal none)))

// spielablauf
(init (ablauf geben))
(init (zug player1))
(init (start_player player1))


// -----------------------
// -------- NEXT ---------
// -----------------------

// -- Punkte --
// ------------

(<= (next (punkte ?player ?p))
    (true (punkte ?player ?p))
)

// -- Geben --
// -----------

// geben solange nicht 12 Karten pro Spieler
(<= (next (ablauf geben))
    (true (ablauf geben))
    (not (all_players_12_cards))
)

// sonst in vorbehalt wechseln
(<= (next (ablauf vorbehalt))
    (does random (deal_finish))
)

// Karte auf Hand behalten
(<= (next (sees ?player (hand ?player ?karte)))
    (true (ablauf geben))
    (true (sees ?player (hand ?player ?karte)))
)
// Neue Karte auf Hand nehmen
(<= (next (sees ?player (hand ?player ?karte)))
    (true (ablauf geben))
    (does random (deal ?player ?karte))
)

// Zug bleibt erhalten
(<= (next (zug ?player))
    (true (ablauf geben))
    (true (zug ?player))
)

// -- Vorbehalte --
// ----------------

// Karten behalten
(<= (next (sees ?player (hand ?player ?karte)))
    (true (ablauf vorbehalt))
    (true (sees ?player (hand ?player ?karte)))
)

// immer Zug weitergeben
(<= (next (zug ?next_player))
    (true (ablauf vorbehalt))
    (does ?current_player (vorbehalt ?vorbehalt))
    (next_player ?current_player ?next_player)
)

// Vorbehalt nicht letzter Spieler speichern
(<= (next (vorbehalt ?player ?vorbehalt))
    (true (ablauf vorbehalt))
    (does ?player (vorbehalt ?vorbehalt))
    (distinct ?player player4)
)
(<= (next (vorbehalt ?player ?vorbehalt))
    (true (ablauf vorbehalt))
    (true (vorbehalt ?player ?vorbehalt))
    (distinct ?player player4)
)

// Ablauf bleibt
(<= (next (ablauf vorbehalt))
    (does ?player (vorbehalt ?vorbehalt))
    (distinct ?player player4)
)
// ... außer Vorbehalt letzter Spieler
(<= (next (ablauf stich 1 1))
    (does player4 (vorbehalt ?vorbehalt))
)

// Spielart festlegen

// alle gesund = Normal (öffentlich)
(<= (next (spielart normal none))
    (alle_gesund)
)
// alle gesund aber Hochzeit = Stille Hochzeit
(<= (next (sees ?player_hochzeit (hidden_spielart hochzeit ?player_hochzeit)))
    (alle_gesund)

    (has_hochzeit_hand ?player_hochzeit)
)
// sonst Normal
(<= (next (sees none (hidden_spielart normal none)))
    (alle_gesund)

    (player ?player)
    (not (has_hochzeit_hand ?player))
)

// Vorbehalte vorhanden = Solo vor Hochzeit
(<= (next (spielart ?art ?player))
    (not (alle_gesund))

    (true (vorbehalt player1 ?vorbehalt_1))
    (true (vorbehalt player2 ?vorbehalt_2))
    (true (vorbehalt player3 ?vorbehalt_3))
    (does player4 (vorbehalt ?vorbehalt_4))

    (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?art ?player)
)
(<= (next (sees none (hidden_spielart ?art ?player)))
    (not (alle_gesund))

    (true (vorbehalt player1 ?vorbehalt_1))
    (true (vorbehalt player2 ?vorbehalt_2))
    (true (vorbehalt player3 ?vorbehalt_3))
    (does player4 (vorbehalt ?vorbehalt_4))

    (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?art ?player)
)

// -- Spielen --
// -------------
// immer spielart weitergeben
(<= (next (spielart ?spielart ?player))
    (true (ablauf stich ?x ?y))
    (true (spielart ?spielart ?player))
)
(<= (next (sees ?vis (hidden_spielart ?spielart ?player)))
    (true (ablauf stich ?x ?y))
    (true (sees ?vis (hidden_spielart ?spielart ?player)))
)

// immer Zug weitergeben
(<= (next (zug ?next_player))
    (true (ablauf stich ?x ?y))
    (true (zug ?current_player))
    (next_player ?current_player ?next_player)
)

// ablauf stich erhöhen wenn letzte karte des stichs
(<= (next (ablauf stich ?xx 1))
    (true (ablauf stich ?x 4))
    (distinct ?x 12)
    (succ ?x ?xx)
)
// sonst ablauf behalten
(<= (next (ablauf stich ?x ?yy))
    (true (ablauf stich ?x ?y))
    (distinct ?y 4)
    (succ ?y ?yy)
)

// nicht gespielte Karten behalten
(<= (next (sees ?player (hand ?player ?karte)))
    (true (ablauf stich ?x ?y))
    (true (sees ?player (hand ?player ?karte)))
    (not (does ?player (spielen ?karte)))
)

// gespielte karte auf den stich
(<= (next (stich ?x ?y ?karte))
    (true (ablauf stich ?x ?y))
    (does ?player (spielen ?karte))
    (distinct ?y 4)
)
// rest stich mitnehmen
(<= (next (stich ?x ?y ?karte))
    (true (stich ?x ?y ?karte))
    (true (ablauf stich ?x ?ab_y))
    (distinct ?ab_y 4)
)
// letzte karte stich
// stich nehmen
(<= (next (sees ?winner (stich ?x ?y ?fkarte)))
    (true (ablauf stich ?x 4))
    (does ?player (spielen ?any_karte))
    (true (stich ?x ?y ?fkarte))

    (true (spielart ?spieltyp ?any))
    (stich_karten ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4)
    (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 ?winner)
)
(<= (next (sees ?winner (stich ?x 4 ?fkarte)))
    (true (ablauf stich ?x 4))
    (does ?player (spielen ?fkarte))

    (true (spielart ?spieltyp ?any))
    (stich_karten ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4)
    (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 ?winner)
)

// andere spieler sehen nur, dass stich gewonnen wurde
(<= (next (sees ?not_winner (stich ?x ?winner)))
    (true (ablauf stich ?x 4))
    (player ?not_winner)
    (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 ?winner)
    (distinct ?not_winner ?winner)
)

// stiche behalten
(<= (next (sees ?player (stich ?x ?y ?fkarte)))
    (true (sees ?player (stich ?x ?y ?fkarte)))
    (not (true (ablauf stich 12 4)))
)
(<= (next (sees ?player (stich ?x ?winner)))
    (true (sees ?player (stich ?x ?winner)))
    (not (true (ablauf stich 12 4)))
)


// -----------------------
// -------- LEGAL --------
// -----------------------

(<= (legal random (deal ?player ?karte))
    (true (ablauf geben))
    (player ?player)
    (karte ?any ?karte)
    (not (any_player_has_card ?karte))
    (not (player_card_count 12 ?player))
)
(<= (legal random (deal_finish))
    (true (ablauf geben))
    (all_players_12_cards)
)

// vorbehalt
(<= (legal ?player (vorbehalt gesund))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)

(<= (legal ?player (vorbehalt solo_damen))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)
(<= (legal ?player (vorbehalt solo_buben))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)

(<= (legal ?player (vorbehalt solo_trumpf_kreuz))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)
(<= (legal ?player (vorbehalt solo_trumpf_pik))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)
(<= (legal ?player (vorbehalt solo_trumpf_herz))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)
(<= (legal ?player (vorbehalt solo_trumpf_karo))
    (true (zug ?player))
    (true (ablauf vorbehalt))
)

(<= (legal ?player (vorbehalt hochzeit))
    (true (zug ?player))
    (true (ablauf vorbehalt))

    (has_hochzeit_hand ?player)
)

// ansagen (/ absagen)
(<= (legal ?player (ansagen re))
    // wenn spieler re und vor der 6. Karte (stich 2 karte 2)
    (true (ablauf ansagen_partie))
)
(<= (legal ?player (ansagen kontra))
    // wenn spieler kontra und vor der 6. Karte (stich 2 karte 2)
    (true (ablauf ansagen_partie))
)

// absagen
(<= (legal ?player (ansagen 90))
    // wenn spieler re gesagt (kontra gesagt) und vor der 10. Karte (stich 3 karte 2)
    (true (ablauf ansagen_90))
)
(<= (legal ?player (ansagen 60))
    // wenn spieler re gesagt (kontra gesagt) und vor der 14. Karte (stich 4 karte 2)
    (true (ablauf ansagen_60))
)
(<= (legal ?player (ansagen 30))
    // wenn spieler re gesagt (kontra gesagt) und vor der 18. Karte (stich 5 karte 2)
    (true (ablauf ansagen_30))
)
(<= (legal ?player (ansagen schwarz))
    // wenn spieler re gesagt (kontra gesagt) und vor der 22. Karte (stich 6 karte 2)
    (true (ablauf ansagen_schwarz))
)

// karte spielen (erste karte stich muss nicht bedienen)
(<= (legal ?player (spielen ?karte))
    (true (zug ?player))
    (true (ablauf stich ?x 1))
    (true (sees ?player (hand ?player ?karte)))
)
// karte spielen (bedienpflicht)
// jede karte wenn nicht bedienen muss
(<= (legal ?player (spielen ?fkarte))
    (true (zug ?player))
    (true (ablauf stich ?x ?y))
    (true (sees ?player (hand ?player ?fkarte)))
    // Stichfarbe bestimmen
    (true (stich ?x 1 ?fkarte1))
    (karte ?karte1 ?fkarte1)
    (true (spielart ?spieltyp ?any))
    (farbe ?spieltyp ?stichfarbe ?karte1)
    // farben unterscheiden sich
    (karte ?karte ?fkarte)
    (farbe ?spieltyp ?farbe ?karte)
    (distinct ?stichfarbe ?farbe)
    // Spieler hat die Farbe nicht
    (not (player_has_farbe ?player ?stichfarbe))
)

// nur stichfarbe wenn bedienen muss
(<= (legal ?player (spielen ?fkarte))
    (true (zug ?player))
    (true (ablauf stich ?x ?y))
    (true (sees ?player (hand ?player ?fkarte)))
    // Stichfarbe bestimmen
    (true (stich ?x 1 ?fkarte1))
    (karte ?karte1 ?fkarte1)
    (true (spielart ?spieltyp ?any))
    (farbe ?spieltyp ?stichfarbe ?karte1)
    // Farbe muss Stichfarbe sein
    (karte ?karte ?fkarte)
    (farbe ?spieltyp ?stichfarbe ?karte)
)


// -----------------------
// ------ FUNCTIONS ------
// -----------------------

(<= (any_player_has_card ?card)
    (true (sees player1 (hand player1 ?card)))
)
(<= (any_player_has_card ?card)
    (true (sees player2 (hand player2 ?card)))
)
(<= (any_player_has_card ?card)
    (true (sees player3 (hand player3 ?card)))
)
(<= (any_player_has_card ?card)
    (true (sees player4 (hand player4 ?card)))
)

(<= (all_players_12_cards)
    (player_card_count 12 player1)
    (player_card_count 12 player2)
    (player_card_count 12 player3)
    (player_card_count 12 player4)
)

(<= (player_card_count ?n ?player)
    (count ?n (true (sees ?player (hand ?player ?karte))))
)

// Bestimmt vor dem ersten Stich ob jemand eine Hochzeit auf der Hand hat
(<= (has_hochzeit_hand ?player)
    (true (sees ?player (hand ?player kreuz_dame_1)))
    (true (sees ?player (hand ?player kreuz_dame_2)))
)

// Bestimmt den höchstwertigsten Vorbehalt ausgehend von Spieler ?player
(<= (solo_vor_hochzeit gesund gesund gesund gesund normal player1))

(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?vorbehalt_1 player1)
    (vorbehalt_typ solo ?vorbehalt_1)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?vorbehalt_2 player2)
    (vorbehalt_typ solo ?vorbehalt_2)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?vorbehalt_3 player3)
    (vorbehalt_typ solo ?vorbehalt_3)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 ?vorbehalt_4 player4)
    (vorbehalt_typ solo ?vorbehalt_4)
)

(<= (solo_vor_hochzeit hochzeit ?vorbehalt_2 ?vorbehalt_3 ?vorbehalt_4 hochzeit player1)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 hochzeit ?vorbehalt_3 ?vorbehalt_4 hochzeit player2)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 hochzeit ?vorbehalt_4 hochzeit player3)
)
(<= (solo_vor_hochzeit ?vorbehalt_1 ?vorbehalt_2 ?vorbehalt_3 hochzeit hochzeit player4)
)

// Höchste Karte im Stich über Trumpfregeln bestimmen
// Karte 1 gewinnt:
(<= (stich_winner
        ?spieltyp
            ?fkarte1
            ?fkarte2
            ?fkarte3
            ?fkarte4
        player1
    )
    (map_all_cards
        ?karte1 ?fkarte1
        ?karte2 ?fkarte2
        ?karte3 ?fkarte3
        ?karte4 ?fkarte4
    )
    (farbe ?spieltyp ?farbe ?karte1)

    (all_trumpf ?spieltyp ?farbe ?karte1 ?karte2)
    (all_trumpf ?spieltyp ?farbe ?karte1 ?karte3)
    (all_trumpf ?spieltyp ?farbe ?karte1 ?karte4)
)
// Karte 2 gewinnt:
(<= (stich_winner
        ?spieltyp
            ?fkarte1
            ?fkarte2
            ?fkarte3
            ?fkarte4
        player2
    )
    (map_all_cards
        ?karte1 ?fkarte1
        ?karte2 ?fkarte2
        ?karte3 ?fkarte3
        ?karte4 ?fkarte4
    )
    (farbe ?spieltyp ?farbe ?karte1)

    (all_trumpf ?spieltyp ?farbe ?karte2 ?karte3)
    (all_trumpf ?spieltyp ?farbe ?karte2 ?karte4)
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player1))
)
// Karte 3 gewinnt:
(<= (stich_winner
        ?spieltyp
            ?fkarte1
            ?fkarte2
            ?fkarte3
            ?fkarte4
        player3
    )
    (map_all_cards
        ?karte1 ?fkarte1
        ?karte2 ?fkarte2
        ?karte3 ?fkarte3
        ?karte4 ?fkarte4
    )
    (farbe ?spieltyp ?farbe ?karte1)

    (all_trumpf ?spieltyp ?farbe ?karte1 ?karte4)
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player1))
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player2))
)
// Karte 4 gewinnt:
(<= (stich_winner
        ?spieltyp
            ?fkarte1
            ?fkarte2
            ?fkarte3
            ?fkarte4
        player4
    )
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player1))
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player2))
    (not (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 player3))
)

// Trumpf
// ------

// Trumpf bestimmen
// karten gleich => gewinnt
(<= (all_trumpf ?spieltyp ?farbe ?karte1 ?karte1)
    (karte_trumpf ?spieltyp ?karte1 ?any)
)
(<= (all_trumpf ?spieltyp ?farbe ?karte1 ?karte1)
    (karte_trumpf ?spieltyp ?any ?karte1)
)

// bessere farbe gewinnt
(<= (all_trumpf ?spieltyp ?farbe ?karte1 ?karte2)
    (farbe ?spieltyp ?farbe1 ?karte1)
    (farbe ?spieltyp ?farbe2 ?karte2)
    (farb_trumpf ?spieltyp ?farbe ?farbe1 ?farbe2)
)

// sonst: bessere karte gewinnt
(<= (all_trumpf ?spieltyp ?farbe ?karte1 ?karte2)
    (rekur_karte_trumpf ?spieltyp ?karte1 ?karte2)
)

// Trumpf über Farbe
(<= (farb_trumpf normal ?any trumpf kreuz))
(<= (farb_trumpf normal ?any trumpf pik))
(<= (farb_trumpf normal ?any trumpf herz))


(<= (farb_trumpf normal ?x ?x ?y)
    (distinct ?x trumpf)
    (distinct ?y trumpf)
)

// Trumpf über Karte (rekursiv weil transitiv)
(<= (rekur_karte_trumpf ?spieltyp ?karte1 ?karte2)
    (karte_trumpf ?spieltyp ?karte1 ?karte2)
)
(<= (rekur_karte_trumpf ?spieltyp ?karte1 ?karte2)
    (karte_trumpf ?spieltyp ?karte1 ?karteX)
    (rekur_karte_trumpf ?spieltyp ?karteX ?karte2)
)


// Hilfsfunktionen
// ---------------

(<= (alle_gesund)
    (true (vorbehalt player1 gesund))
    (true (vorbehalt player2 gesund))
    (true (vorbehalt player3 gesund))
    (does player4 (vorbehalt gesund))
)

// Abkürzung stich_winner
(<= (stich_winner_short ?winner)
    (stich_karten ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4)
    (true (spielart ?spieltyp ?any))
    (stich_winner ?spieltyp ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4 ?winner)
)

// Karten des aktuellen Stiches
(<= (stich_karten ?fkarte1 ?fkarte2 ?fkarte3 ?fkarte4)
    (true (ablauf stich ?x ?y))

    (true (stich ?x 1 ?fkarte1))
    (true (stich ?x 2 ?fkarte2))
    (true (stich ?x 3 ?fkarte3))
    (does ?any (spielen ?fkarte4))
)

// Karten mappen
(<= (map_all_cards
        ?karte1 ?fkarte1
        ?karte2 ?fkarte2
        ?karte3 ?fkarte3
        ?karte4 ?fkarte4
    )
    (karte ?karte1 ?fkarte1)
    (karte ?karte2 ?fkarte2)
    (karte ?karte3 ?fkarte3)
    (karte ?karte4 ?fkarte4)
)

(<= (player_has_farbe ?player ?farbe)
    (true (sees ?player (hand ?player ?fkarte)))
    (true (spielart ?spieltyp ?any))
    (karte ?karte ?fkarte)
    (farbe ?spieltyp ?farbe ?karte)
)

// -----------------------
// ------ CONSTANTS ------
// -----------------------

// alle karten (kommen doppelt vor)
(karte kreuz_dame kreuz_dame_1)
(karte kreuz_dame kreuz_dame_2)
(karte kreuz_bube kreuz_bube_1)
(karte kreuz_bube kreuz_bube_2)
(karte kreuz_ass kreuz_ass_1)
(karte kreuz_ass kreuz_ass_2)
(karte kreuz_zehn kreuz_zehn_1)
(karte kreuz_zehn kreuz_zehn_2)
(karte kreuz_koenig kreuz_koenig_1)
(karte kreuz_koenig kreuz_koenig_2)
(karte kreuz_neun kreuz_neun_1)
(karte kreuz_neun kreuz_neun_2)

(karte pik_dame pik_dame_1)
(karte pik_dame pik_dame_2)
(karte pik_bube pik_bube_1)
(karte pik_bube pik_bube_2)
(karte pik_ass pik_ass_1)
(karte pik_ass pik_ass_2)
(karte pik_zehn pik_zehn_1)
(karte pik_zehn pik_zehn_2)
(karte pik_koenig pik_koenig_1)
(karte pik_koenig pik_koenig_2)
(karte pik_neun pik_neun_1)
(karte pik_neun pik_neun_2)

(karte herz_dame herz_dame_1)
(karte herz_dame herz_dame_2)
(karte herz_bube herz_bube_1)
(karte herz_bube herz_bube_2)
(karte herz_ass herz_ass_1)
(karte herz_ass herz_ass_2)
(karte herz_zehn herz_zehn_1)
(karte herz_zehn herz_zehn_2)
(karte herz_koenig herz_koenig_1)
(karte herz_koenig herz_koenig_2)
(karte herz_neun herz_neun_1)
(karte herz_neun herz_neun_2)

(karte karo_dame karo_dame_1)
(karte karo_dame karo_dame_2)
(karte karo_bube karo_bube_1)
(karte karo_bube karo_bube_2)
(karte karo_ass karo_ass_1)
(karte karo_ass karo_ass_2)
(karte karo_zehn karo_zehn_1)
(karte karo_zehn karo_zehn_2)
(karte karo_koenig karo_koenig_1)
(karte karo_koenig karo_koenig_2)
(karte karo_neun karo_neun_1)
(karte karo_neun karo_neun_2)

// Sitzreihenfolge
(next_player player1 player2)
(next_player player2 player3)
(next_player player3 player4)
(next_player player4 player1)

// Reihenfolge Stiche
(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)

// vorbehalt typ
(vorbehalt_typ solo solo_damen)
(vorbehalt_typ solo solo_buben)
(vorbehalt_typ solo solo_trumpf_kreuz)
(vorbehalt_typ solo solo_trumpf_pik)
(vorbehalt_typ solo solo_trumpf_herz)
(vorbehalt_typ solo solo_trumpf_karo)
(vorbehalt_typ solo solo_trumpf_ass)
(vorbehalt_typ hochzeit hochzeit)




// ---------------------
// --- Trumpf Regeln ---
// ---------------------

// Normal
(farbe normal trumpf herz_zehn)
(farbe normal trumpf kreuz_dame)
(farbe normal trumpf pik_dame)
(farbe normal trumpf herz_dame)
(farbe normal trumpf karo_dame)
(farbe normal trumpf kreuz_bube)
(farbe normal trumpf pik_bube)
(farbe normal trumpf herz_bube)
(farbe normal trumpf karo_bube)
(farbe normal trumpf karo_ass)
(farbe normal trumpf karo_zehn)
(farbe normal trumpf karo_koenig)
(farbe normal trumpf karo_neun)

(farbe normal kreuz kreuz_ass)
(farbe normal kreuz kreuz_zehn)
(farbe normal kreuz kreuz_koenig)
(farbe normal kreuz kreuz_neun)

(farbe normal pik pik_ass)
(farbe normal pik pik_zehn)
(farbe normal pik pik_koenig)
(farbe normal pik pik_neun)

(farbe normal herz herz_ass)
(farbe normal herz herz_koenig)
(farbe normal herz herz_neun)


(karte_trumpf normal herz_zehn kreuz_dame)
(karte_trumpf normal kreuz_dame pik_dame)
(karte_trumpf normal pik_dame herz_dame)
(karte_trumpf normal herz_dame karo_dame)
(karte_trumpf normal karo_dame kreuz_bube)
(karte_trumpf normal kreuz_bube pik_bube)
(karte_trumpf normal pik_bube herz_bube)
(karte_trumpf normal herz_bube karo_bube)
(karte_trumpf normal karo_bube karo_ass)
(karte_trumpf normal karo_ass karo_zehn)
(karte_trumpf normal karo_zehn karo_koenig)
(karte_trumpf normal karo_koenig karo_neun)

(karte_trumpf normal kreuz_ass kreuz_zehn)
(karte_trumpf normal kreuz_zehn kreuz_koenig)
(karte_trumpf normal kreuz_koenig kreuz_neun)

(karte_trumpf normal pik_ass pik_zehn)
(karte_trumpf normal pik_zehn pik_koenig)
(karte_trumpf normal pik_koenig pik_neun)

(karte_trumpf normal herz_ass herz_koenig)
(karte_trumpf normal herz_koenig herz_neun)

// Hochzeit (= normal)
(<= (farbe hochzeit ?x ?y)
    (farbe normal ?x ?y)
)
(<= (karte_trumpf hochzeit ?x ?y)
    (karte_trumpf normal ?x ?y)
)


// solo damen = nur damen trumpf
(farbe solo_damen trumpf kreuz_dame)
(farbe solo_damen trumpf pik_dame)
(farbe solo_damen trumpf herz_dame)
(farbe solo_damen trumpf karo_dame)

(farbe solo_damen kreuz kreuz_ass)
(farbe solo_damen kreuz kreuz_zehn)
(farbe solo_damen kreuz kreuz_koenig)
(farbe solo_damen kreuz kreuz_bube)
(farbe solo_damen kreuz kreuz_neun)

(farbe solo_damen pik pik_ass)
(farbe solo_damen pik pik_zehn)
(farbe solo_damen pik pik_koenig)
(farbe solo_damen pik pik_bube)
(farbe solo_damen pik pik_neun)

(farbe solo_damen herz herz_ass)
(farbe solo_damen herz herz_zehn)
(farbe solo_damen herz herz_koenig)
(farbe solo_damen herz herz_bube)
(farbe solo_damen herz herz_neun)

(farbe solo_damen karo karo_ass)
(farbe solo_damen karo karo_zehn)
(farbe solo_damen karo karo_koenig)
(farbe solo_damen karo karo_bube)
(farbe solo_damen karo karo_neun)


(karte_trumpf solo_damen kreuz_dame pik_dame)
(karte_trumpf solo_damen pik_dame herz_dame)
(karte_trumpf solo_damen herz_dame karo_dame)

(karte_trumpf solo_damen kreuz_ass kreuz_zehn)
(karte_trumpf solo_damen kreuz_zehn kreuz_koenig)
(karte_trumpf solo_damen kreuz_koenig kreuz_bube)
(karte_trumpf solo_damen kreuz_bube kreuz_neun)

(karte_trumpf solo_damen pik_ass pik_zehn)
(karte_trumpf solo_damen pik_zehn pik_koenig)
(karte_trumpf solo_damen pik_koenig pik_bube)
(karte_trumpf solo_damen pik_bube pik_neun)

(karte_trumpf solo_damen herz_ass herz_zehn)
(karte_trumpf solo_damen herz_zehn herz_koenig)
(karte_trumpf solo_damen herz_koenig herz_bube)
(karte_trumpf solo_damen herz_bube herz_neun)

(karte_trumpf solo_damen karo_ass karo_zehn)
(karte_trumpf solo_damen karo_zehn karo_koenig)
(karte_trumpf solo_damen karo_koenig karo_bube)
(karte_trumpf solo_damen karo_bube karo_neun)


// solo buben = nur buben trumpf
(farbe solo_buben trumpf kreuz_bube)
(farbe solo_buben trumpf pik_bube)
(farbe solo_buben trumpf herz_bube)
(farbe solo_buben trumpf karo_bube)

(farbe solo_buben kreuz kreuz_ass)
(farbe solo_buben kreuz kreuz_zehn)
(farbe solo_buben kreuz kreuz_koenig)
(farbe solo_buben kreuz kreuz_dame)
(farbe solo_buben kreuz kreuz_neun)

(farbe solo_buben pik pik_ass)
(farbe solo_buben pik pik_zehn)
(farbe solo_buben pik pik_koenig)
(farbe solo_buben pik pik_dame)
(farbe solo_buben pik pik_neun)

(farbe solo_buben herz herz_ass)
(farbe solo_buben herz herz_zehn)
(farbe solo_buben herz herz_koenig)
(farbe solo_buben herz herz_dame)
(farbe solo_buben herz herz_neun)

(farbe solo_buben karo karo_ass)
(farbe solo_buben karo karo_zehn)
(farbe solo_buben karo karo_koenig)
(farbe solo_buben karo karo_dame)
(farbe solo_buben karo karo_neun)


(karte_trumpf solo_buben kreuz_bube pik_bube)
(karte_trumpf solo_buben pik_bube herz_bube)
(karte_trumpf solo_buben herz_bube karo_bube)

(karte_trumpf solo_buben kreuz_ass kreuz_zehn)
(karte_trumpf solo_buben kreuz_zehn kreuz_koenig)
(karte_trumpf solo_buben kreuz_koenig kreuz_dame)
(karte_trumpf solo_buben kreuz_dame kreuz_neun)

(karte_trumpf solo_buben pik_ass pik_zehn)
(karte_trumpf solo_buben pik_zehn pik_koenig)
(karte_trumpf solo_buben pik_koenig pik_dame)
(karte_trumpf solo_buben pik_dame pik_neun)

(karte_trumpf solo_buben herz_ass herz_zehn)
(karte_trumpf solo_buben herz_zehn herz_koenig)
(karte_trumpf solo_buben herz_koenig herz_dame)
(karte_trumpf solo_buben herz_dame herz_neun)

(karte_trumpf solo_buben karo_ass karo_zehn)
(karte_trumpf solo_buben karo_zehn karo_koenig)
(karte_trumpf solo_buben karo_koenig karo_dame)
(karte_trumpf solo_buben karo_dame karo_neun)

// solo trumpf kreuz = karo durch kreuz austauschen
(farbe solo_trumpf_kreuz trumpf herz_zehn)
(farbe solo_trumpf_kreuz trumpf kreuz_dame)
(farbe solo_trumpf_kreuz trumpf pik_dame)
(farbe solo_trumpf_kreuz trumpf herz_dame)
(farbe solo_trumpf_kreuz trumpf karo_dame)
(farbe solo_trumpf_kreuz trumpf kreuz_bube)
(farbe solo_trumpf_kreuz trumpf pik_bube)
(farbe solo_trumpf_kreuz trumpf herz_bube)
(farbe solo_trumpf_kreuz trumpf karo_bube)
(farbe solo_trumpf_kreuz trumpf kreuz_ass)
(farbe solo_trumpf_kreuz trumpf kreuz_zehn)
(farbe solo_trumpf_kreuz trumpf kreuz_koenig)
(farbe solo_trumpf_kreuz trumpf kreuz_neun)

(farbe solo_trumpf_kreuz pik pik_ass)
(farbe solo_trumpf_kreuz pik pik_zehn)
(farbe solo_trumpf_kreuz pik pik_koenig)
(farbe solo_trumpf_kreuz pik pik_neun)

(farbe solo_trumpf_kreuz herz herz_ass)
(farbe solo_trumpf_kreuz herz herz_koenig)
(farbe solo_trumpf_kreuz herz herz_neun)

(farbe solo_trumpf_kreuz karo karo_ass)
(farbe solo_trumpf_kreuz karo karo_zehn)
(farbe solo_trumpf_kreuz karo karo_koenig)
(farbe solo_trumpf_kreuz karo karo_neun)


(karte_trumpf solo_trumpf_kreuz herz_zehn kreuz_dame)
(karte_trumpf solo_trumpf_kreuz kreuz_dame pik_dame)
(karte_trumpf solo_trumpf_kreuz pik_dame herz_dame)
(karte_trumpf solo_trumpf_kreuz herz_dame karo_dame)
(karte_trumpf solo_trumpf_kreuz karo_dame kreuz_bube)
(karte_trumpf solo_trumpf_kreuz kreuz_bube pik_bube)
(karte_trumpf solo_trumpf_kreuz pik_bube herz_bube)
(karte_trumpf solo_trumpf_kreuz herz_bube karo_bube)
(karte_trumpf solo_trumpf_kreuz karo_bube kreuz_ass)
(karte_trumpf solo_trumpf_kreuz kreuz_ass kreuz_zehn)
(karte_trumpf solo_trumpf_kreuz kreuz_zehn kreuz_koenig)
(karte_trumpf solo_trumpf_kreuz kreuz_koenig kreuz_neun)

(karte_trumpf solo_trumpf_kreuz pik_ass pik_zehn)
(karte_trumpf solo_trumpf_kreuz pik_zehn pik_koenig)
(karte_trumpf solo_trumpf_kreuz pik_koenig pik_neun)

(karte_trumpf solo_trumpf_kreuz herz_ass herz_koenig)
(karte_trumpf solo_trumpf_kreuz herz_koenig herz_neun)

(karte_trumpf solo_trumpf_kreuz karo_ass karo_zehn)
(karte_trumpf solo_trumpf_kreuz karo_zehn karo_koenig)
(karte_trumpf solo_trumpf_kreuz karo_koenig karo_neun)


// solo trumpf pik = karo durch pik austauschen
(farbe solo_trumpf_pik trumpf herz_zehn)
(farbe solo_trumpf_pik trumpf kreuz_dame)
(farbe solo_trumpf_pik trumpf pik_dame)
(farbe solo_trumpf_pik trumpf herz_dame)
(farbe solo_trumpf_pik trumpf karo_dame)
(farbe solo_trumpf_pik trumpf kreuz_bube)
(farbe solo_trumpf_pik trumpf pik_bube)
(farbe solo_trumpf_pik trumpf herz_bube)
(farbe solo_trumpf_pik trumpf karo_bube)
(farbe solo_trumpf_pik trumpf pik_ass)
(farbe solo_trumpf_pik trumpf pik_zehn)
(farbe solo_trumpf_pik trumpf pik_koenig)
(farbe solo_trumpf_pik trumpf pik_neun)

(farbe solo_trumpf_pik kreuz kreuz_ass)
(farbe solo_trumpf_pik kreuz kreuz_zehn)
(farbe solo_trumpf_pik kreuz kreuz_koenig)
(farbe solo_trumpf_pik kreuz kreuz_neun)

(farbe solo_trumpf_pik herz herz_ass)
(farbe solo_trumpf_pik herz herz_koenig)
(farbe solo_trumpf_pik herz herz_neun)

(farbe solo_trumpf_pik karo karo_ass)
(farbe solo_trumpf_pik karo karo_zehn)
(farbe solo_trumpf_pik karo karo_koenig)
(farbe solo_trumpf_pik karo karo_neun)


(karte_trumpf solo_trumpf_pik herz_zehn kreuz_dame)
(karte_trumpf solo_trumpf_pik kreuz_dame pik_dame)
(karte_trumpf solo_trumpf_pik pik_dame herz_dame)
(karte_trumpf solo_trumpf_pik herz_dame karo_dame)
(karte_trumpf solo_trumpf_pik karo_dame kreuz_bube)
(karte_trumpf solo_trumpf_pik kreuz_bube pik_bube)
(karte_trumpf solo_trumpf_pik pik_bube herz_bube)
(karte_trumpf solo_trumpf_pik herz_bube karo_bube)
(karte_trumpf solo_trumpf_pik karo_bube pik_ass)
(karte_trumpf solo_trumpf_pik pik_ass pik_zehn)
(karte_trumpf solo_trumpf_pik pik_zehn pik_koenig)
(karte_trumpf solo_trumpf_pik pik_koenig pik_neun)

(karte_trumpf solo_trumpf_pik kreuz_ass kreuz_zehn)
(karte_trumpf solo_trumpf_pik kreuz_zehn kreuz_koenig)
(karte_trumpf solo_trumpf_pik kreuz_koenig kreuz_neun)

(karte_trumpf solo_trumpf_pik herz_ass herz_koenig)
(karte_trumpf solo_trumpf_pik herz_koenig herz_neun)

(karte_trumpf solo_trumpf_pik karo_ass karo_zehn)
(karte_trumpf solo_trumpf_pik karo_zehn karo_koenig)
(karte_trumpf solo_trumpf_pik karo_koenig karo_neun)

// solo trumpf herz = karo durch herz austauschen (achtung mit herz_zehn)
(farbe solo_trumpf_herz trumpf herz_zehn)
(farbe solo_trumpf_herz trumpf kreuz_dame)
(farbe solo_trumpf_herz trumpf pik_dame)
(farbe solo_trumpf_herz trumpf herz_dame)
(farbe solo_trumpf_herz trumpf karo_dame)
(farbe solo_trumpf_herz trumpf kreuz_bube)
(farbe solo_trumpf_herz trumpf pik_bube)
(farbe solo_trumpf_herz trumpf herz_bube)
(farbe solo_trumpf_herz trumpf karo_bube)
(farbe solo_trumpf_herz trumpf herz_ass)
(farbe solo_trumpf_herz trumpf herz_koenig)
(farbe solo_trumpf_herz trumpf herz_neun)

(farbe solo_trumpf_herz kreuz kreuz_ass)
(farbe solo_trumpf_herz kreuz kreuz_zehn)
(farbe solo_trumpf_herz kreuz kreuz_koenig)
(farbe solo_trumpf_herz kreuz kreuz_neun)

(farbe solo_trumpf_herz pik pik_ass)
(farbe solo_trumpf_herz pik pik_zehn)
(farbe solo_trumpf_herz pik pik_koenig)
(farbe solo_trumpf_herz pik pik_neun)

(farbe solo_trumpf_herz karo karo_ass)
(farbe solo_trumpf_herz karo karo_zehn)
(farbe solo_trumpf_herz karo karo_koenig)
(farbe solo_trumpf_herz karo karo_neun)


(karte_trumpf solo_trumpf_herz herz_zehn kreuz_dame)
(karte_trumpf solo_trumpf_herz kreuz_dame pik_dame)
(karte_trumpf solo_trumpf_herz pik_dame herz_dame)
(karte_trumpf solo_trumpf_herz herz_dame karo_dame)
(karte_trumpf solo_trumpf_herz karo_dame kreuz_bube)
(karte_trumpf solo_trumpf_herz kreuz_bube pik_bube)
(karte_trumpf solo_trumpf_herz pik_bube herz_bube)
(karte_trumpf solo_trumpf_herz herz_bube karo_bube)
(karte_trumpf solo_trumpf_herz karo_bube herz_ass)
(karte_trumpf solo_trumpf_herz herz_ass herz_koenig)
(karte_trumpf solo_trumpf_herz herz_koenig herz_neun)

(karte_trumpf solo_trumpf_herz kreuz_ass kreuz_zehn)
(karte_trumpf solo_trumpf_herz kreuz_zehn kreuz_koenig)
(karte_trumpf solo_trumpf_herz kreuz_koenig kreuz_neun)

(karte_trumpf solo_trumpf_herz pik_ass pik_zehn)
(karte_trumpf solo_trumpf_herz pik_zehn pik_koenig)
(karte_trumpf solo_trumpf_herz pik_koenig pik_neun)

(karte_trumpf solo_trumpf_herz karo_ass karo_zehn)
(karte_trumpf solo_trumpf_herz karo_zehn karo_koenig)
(karte_trumpf solo_trumpf_herz karo_koenig karo_neun)

// solo trumpf karo (= normal)
(<= (farbe solo_trumpf_karo ?x ?y)
    (farbe normal ?x ?y)
)
(<= (karte_trumpf solo_trumpf_karo ?x ?y)
    (karte_trumpf normal ?x ?y)
)


// solo trumpf ass (fleischlos) = kein trumpf
(farbe solo_trumpf_ass kreuz kreuz_ass)
(farbe solo_trumpf_ass kreuz kreuz_zehn)
(farbe solo_trumpf_ass kreuz kreuz_koenig)
(farbe solo_trumpf_ass kreuz kreuz_dame)
(farbe solo_trumpf_ass kreuz kreuz_bube)
(farbe solo_trumpf_ass kreuz kreuz_neun)

(farbe solo_trumpf_ass pik pik_ass)
(farbe solo_trumpf_ass pik pik_zehn)
(farbe solo_trumpf_ass pik pik_koenig)
(farbe solo_trumpf_ass pik pik_dame)
(farbe solo_trumpf_ass pik pik_bube)
(farbe solo_trumpf_ass pik pik_neun)

(farbe solo_trumpf_ass herz herz_ass)
(farbe solo_trumpf_ass herz herz_zehn)
(farbe solo_trumpf_ass herz herz_koenig)
(farbe solo_trumpf_ass herz herz_dame)
(farbe solo_trumpf_ass herz herz_bube)
(farbe solo_trumpf_ass herz herz_neun)

(farbe solo_trumpf_ass karo karo_ass)
(farbe solo_trumpf_ass karo karo_zehn)
(farbe solo_trumpf_ass karo karo_koenig)
(farbe solo_trumpf_ass karo karo_dame)
(farbe solo_trumpf_ass karo karo_bube)
(farbe solo_trumpf_ass karo karo_neun)


(karte_trumpf solo_trumpf_ass kreuz_ass kreuz_zehn)
(karte_trumpf solo_trumpf_ass kreuz_zehn kreuz_koenig)
(karte_trumpf solo_trumpf_ass kreuz_koenig kreuz_dame)
(karte_trumpf solo_trumpf_ass kreuz_dame kreuz_bube)
(karte_trumpf solo_trumpf_ass kreuz_bube kreuz_neun)

(karte_trumpf solo_trumpf_ass pik_ass pik_zehn)
(karte_trumpf solo_trumpf_ass pik_zehn pik_koenig)
(karte_trumpf solo_trumpf_ass pik_koenig pik_dame)
(karte_trumpf solo_trumpf_ass pik_dame pik_bube)
(karte_trumpf solo_trumpf_ass pik_bube pik_neun)

(karte_trumpf solo_trumpf_ass herz_ass herz_zehn)
(karte_trumpf solo_trumpf_ass herz_zehn herz_koenig)
(karte_trumpf solo_trumpf_ass herz_koenig herz_dame)
(karte_trumpf solo_trumpf_ass herz_dame herz_bube)
(karte_trumpf solo_trumpf_ass herz_bube herz_neun)

(karte_trumpf solo_trumpf_ass karo_ass karo_zehn)
(karte_trumpf solo_trumpf_ass karo_zehn karo_koenig)
(karte_trumpf solo_trumpf_ass karo_koenig karo_dame)
(karte_trumpf solo_trumpf_ass karo_dame karo_bube)
(karte_trumpf solo_trumpf_ass karo_bube karo_neun)
