/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore.lang.monticar;

grammar Resolution extends de.monticore.lang.monticar.Literals2{
   interface ResolutionDeclaration;
   ast Resolution= method public Optional<String> getName(){
    return Optional.Empty;
   };
   interface Resolution;
   NameArgument implements TypeArgument=Name;

   //Just here because an interface has to be implemented by at least one nonterminal in a grammar
   ast NameResolution=
   method public Optional<String> getName(){
        return Optional.of(this.name);
   };

   NameResolution implements Resolution=Name;
   NameResolutionDeclaration implements ResolutionDeclaration=Name ("=" Resolution);


   /*** Put here due to intergrammar dependencies***/

   /** ASTTypeArgument represents a type argument (generics).*/
   interface TypeArgument;
}
