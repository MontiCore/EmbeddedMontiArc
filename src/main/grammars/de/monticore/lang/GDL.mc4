package de.monticore.lang;

grammar GDL extends de.monticore.literals.MCCommonLiterals {

    scope Game = tuples:GameTuple*;

    interface GameConstruct;

    scope GameTuple implements GameConstruct = "(" element:GameConstruct+ ")";
    GameToken implements GameConstruct = "?"(type:Name":")?token:Name;
    
    GameValue implements GameConstruct = (type:Name":")?value:Name;
    GameDigits implements GameConstruct = number:SignedNatLiteral;

    interface GameKeyword extends GameConstruct;

    GameInference implements GameKeyword = "<=";

    GameRole implements GameKeyword = "role";
    GameInit implements GameKeyword = "init";
    GameNext implements GameKeyword = "next";
    GameTrue implements GameKeyword = "true";
    GameSees implements GameKeyword = "sees";

    GameLegal implements GameKeyword = "legal";
    GameDoes implements GameKeyword = "does";

    GameNot implements GameKeyword = "not";
    GameDistinct implements GameKeyword = "distinct";

    GameGoal implements GameKeyword = "goal";
    GameTerminal implements GameKeyword = "terminal";

    GameCount implements GameKeyword = "count";
    GameAdd implements GameKeyword = "add";
    GameSub implements GameKeyword = "sub";
    GameMult implements GameKeyword = "mult";
    GameDiv implements GameKeyword = "div";
    GameMod implements GameKeyword = "mod";
    GameSucc implements GameKeyword = "succ";
    GameLess implements GameKeyword = "less";
    GameGreater implements GameKeyword = "greater";
    GameEqual implements GameKeyword = "equal";
    GameNumber implements GameKeyword = "number";

    GameType implements GameKeyword = "type";
    GameCast implements GameKeyword = "cast";

    GameNoop implements GameKeyword = "noop";

}
