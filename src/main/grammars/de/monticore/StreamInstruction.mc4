package de.monticore;

grammar StreamInstruction extends de.monticore.NumberUnit, de.monticore.literals.Literals, de.monticore.common.Common {

  StreamInstruction = StreamValue | StreamCompare | StreamArrayValues;

  StreamValue = Name | PrecisionNumber | SignedLiteral | DontCare | ValueAtTick | FilePath;
  ValueAtTick = Name "(" (value:NumberWithUnit|lowerBound:NumberWithUnit ":" upperBound:NumberWithUnit ) ")";
  FilePath = "file::" StringLiteral;
  DontCare = "-";
  StreamArrayValues = "[" (ValuePair | MatrixPair)"]" ;
  ValuePair = (StreamValue | ",")+;
  MatrixPair = ValuePair (";" ValuePair)+ ;
  ast StreamCompare = method public ASTStreamValue getLeft(){}
                      method public ASTStreamValue getRight(){}
                      method public String getOperator(){};
  interface StreamCompare;
  StreamCompareBigger implements StreamCompare = left:StreamValue operator:">" right:StreamValue ;
  StreamCompareSmaller implements StreamCompare = left:StreamValue operator:"<" right:StreamValue;
  StreamCompareSmallerEqual implements StreamCompare = left:StreamValue operator:"<=" right:StreamValue;
  StreamCompareBiggerEqual implements StreamCompare = left:StreamValue operator:">=" right:StreamValue;

  PrecisionNumber = NumberWithUnit (Precision)?;
  Precision = "+" "/" "-" NumberWithUnit;
}