<?xml version="1.0" encoding="UTF-8"?><testrun duration="31650" footerText="Generated by IntelliJ IDEA on 09.01.21, 15:58" name="ThreadingOptimizerTest,testMathUnitThreading and 15 more">
    <count name="total" value="16"/>
    <count name="failed" value="16"/>
    <config nameIsGenerated="true" configId="JUnit" name="ThreadingOptimizerTest,testMathUnitThreading and 15 more">
        <module name="embedded-montiarc-math-generator"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="TEST_OBJECT" value="pattern"/>
        <option name="WORKING_DIRECTORY" value="$MODULE_DIR$"/>
        <patterns>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.ThreadingOptimizerTest,testMathUnitThreading"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GenerationTest,testBasicGenericArrayInstance"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testAllObjectDetector4Instances"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest,testInstructionsOrder3"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testMathUnitThreadingOptimizations"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testAllObjectDetectorInstances"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testMathUnitBothOptimizations"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest,testInstructionsOrder1"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest,testInstructionsOrder2"/>
            <pattern testClass="de.monticore.lang.monticar.generator.ConfigPortTest,testConfigPortFromAdaptableParameter"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testMathUnitAlgebraicOptimizations"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GenerationTest,testBasicPorts"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GenerationTest,testMathUnitBothOptimizations"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.GenerationTest,testSimulatorMainController"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicMathGenerationArmadilloTest,samplePacmanMain"/>
            <pattern testClass="de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest,testMathUnitOptimizations"/>
        </patterns>
    </config>
    <root name="Tests" location="java:suite://Tests">
        <output type="stdout">&amp;quot;C:\Program Files\Java\jdk1.8.0_161\bin\java.exe&amp;quot; -ea -Didea.test.cyclic.buffer.size=1048576 &amp;quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.2.1\lib\idea_rt.jar=50034:C:\Program Files\JetBrains\IntelliJ IDEA 2020.2.1\bin&amp;quot; -Dfile.encoding=UTF-8 -classpath &amp;quot;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Master\generators\EMAM2Cpp\target\test-classes;C:\Master\generators\EMAM2Cpp\target\classes;C:\Users\Malte\.m2\repository\com\google\guava\guava\25.1-jre\guava-25.1-jre.jar;C:\Users\Malte\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Malte\.m2\repository\org\checkerframework\checker-qual\2.0.0\checker-qual-2.0.0.jar;C:\Users\Malte\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\Malte\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\Malte\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\executionSemantics\0.4.4-SNAPSHOT\executionSemantics-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\embedded-montiarc-math\0.4.4-SNAPSHOT\embedded-montiarc-math-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\monticore-grammar\5.0.1\monticore-grammar-5.0.1.jar;C:\Users\Malte\.m2\repository\de\monticore\monticore-runtime\5.0.1\monticore-runtime-5.0.1.jar;C:\Users\Malte\.m2\repository\org\reflections\reflections\0.9.9\reflections-0.9.9.jar;C:\Users\Malte\.m2\repository\org\javassist\javassist\3.18.2-GA\javassist-3.18.2-GA.jar;C:\Users\Malte\.m2\repository\com\google\code\findbugs\annotations\2.0.1\annotations-2.0.1.jar;C:\Users\Malte\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Malte\.m2\repository\de\se_rwth\commons\se-commons-utilities\1.7.9\se-commons-utilities-1.7.9.jar;C:\Users\Malte\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Malte\.m2\repository\de\se_rwth\commons\se-commons-logging\1.7.9\se-commons-logging-1.7.9.jar;C:\Users\Malte\.m2\repository\org\antlr\antlr4-runtime\4.7.1\antlr4-runtime-4.7.1.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\embedded-montiarc-dynamics\0.4.4-SNAPSHOT\embedded-montiarc-dynamics-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\embedded-montiarc\0.4.4-SNAPSHOT\embedded-montiarc-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\Tagging\0.4.4-SNAPSHOT\Tagging-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\struct\0.4.4-SNAPSHOT\struct-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\enum\0.4.4-SNAPSHOT\enum-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\embedded-montiarc-behaviour\0.4.4-SNAPSHOT\embedded-montiarc-behaviour-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\math-opt\0.4.4-SNAPSHOT\math-opt-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\math\0.4.4-SNAPSHOT\math-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\Malte\.m2\repository\it\unibo\alice\tuprolog\tuprolog\3.2.1\tuprolog-3.2.1.jar;C:\Users\Malte\.m2\repository\org\apache\commons\commons-lang3\3.0\commons-lang3-3.0.jar;C:\Users\Malte\.m2\repository\com\google\code\gson\gson\2.6.2\gson-2.6.2.jar;C:\Users\Malte\.m2\repository\de\se_rwth\commons\se-commons-groovy\1.7.7\se-commons-groovy-1.7.7.jar;C:\Users\Malte\.m2\repository\org\codehaus\groovy\groovy\2.3.7\groovy-2.3.7.jar;C:\Users\Malte\.m2\repository\jline\jline\2.12\jline-2.12.jar;C:\Users\Malte\.m2\repository\de\monticore\lang\monticar\common-monticar\0.4.4-SNAPSHOT\common-monticar-0.4.4-SNAPSHOT.jar;C:\Users\Malte\.m2\repository\org\jgrapht\jgrapht-core\1.4.0\jgrapht-core-1.4.0.jar;C:\Users\Malte\.m2\repository\org\jheaps\jheaps\0.11\jheaps-0.11.jar;C:\Users\Malte\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\Malte\.m2\repository\org\freemarker\freemarker\2.3.29\freemarker-2.3.29.jar;C:\Users\Malte\.m2\repository\commons-cli\commons-cli\1.4\commons-cli-1.4.jar;C:\Users\Malte\.m2\repository\junit\junit\4.13.1\junit-4.13.1.jar;C:\Users\Malte\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Malte\.m2\repository\ch\qos\logback\logback-classic\1.1.2\logback-classic-1.1.2.jar;C:\Users\Malte\.m2\repository\ch\qos\logback\logback-core\1.1.2\logback-core-1.1.2.jar;C:\Users\Malte\.m2\repository\org\slf4j\slf4j-api\1.7.6\slf4j-api-1.7.6.jar;C:\Users\Malte\.m2\repository\org\jscience\jscience\4.3.1\jscience-4.3.1.jar&amp;quot; com.intellij.rt.junit.JUnitStarter -ideVersion5 @w@C:\Users\Malte\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\Malte\AppData\Local\Temp\idea_junit.tmp -socket50033
Process finished with exit code -1
</output>
    </root>
    <suite duration="7865" locationUrl="java:suite://de.monticore.lang.monticar.generator.cpp.ThreadingOptimizerTest" name="ThreadingOptimizerTest" status="failed">
        <test duration="7865" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.ThreadingOptimizerTest/testMathUnitThreading" name="ThreadingOptimizerTest.testMathUnitThreading" status="failed">
            <output type="stderr">java.lang.AssertionError: files have different number of lines: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\paperMatrixModifier\l2\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, class paper_mathUnit{, public:, Matrix mat1[2];, Matrix mat2[2];, Matrix mat3[2];, Matrix mat4[2];, Matrix mat5[2];, Matrix matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=Matrix(1000,200);, mat1[1]=Matrix(1000,200);, mat2[0]=Matrix(1000,200);, mat2[1]=Matrix(1000,200);, mat3[0]=Matrix(200,10);, mat3[1]=Matrix(200,10);, mat4[0]=Matrix(10,100);, mat4[1]=Matrix(10,100);, mat5[0]=Matrix(100,50000);, mat5[1]=Matrix(100,50000);, matOut1[0]=Matrix(1000,100);, matOut1[1]=Matrix(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[1].mat1 = mat1[1];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[0].mat5 = mat5[0];, matrixModifier[1].mat5 = mat5[1];, matrixModifier[0].execute();, matOut1[0] = matrixModifier[0].matOut;, matrixModifier[1].execute();, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\paperMatrixModifier\l2\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, class paper_mathUnit{, public:, Matrix mat1[2];, Matrix mat2[2];, Matrix mat3[2];, Matrix mat4[2];, Matrix mat5[2];, Matrix matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=Matrix(1000,200);, mat1[1]=Matrix(1000,200);, mat2[0]=Matrix(1000,200);, mat2[1]=Matrix(1000,200);, mat3[0]=Matrix(200,10);, mat3[1]=Matrix(200,10);, mat4[0]=Matrix(10,100);, mat4[1]=Matrix(10,100);, mat5[0]=Matrix(100,50000);, mat5[1]=Matrix(100,50000);, matOut1[0]=Matrix(1000,100);, matOut1[1]=Matrix(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[0].mat5 = mat5[0];, std::thread thread1( [ this ] {this-&amp;gt;matrixModifier[0].execute();});, matrixModifier[1].mat1 = mat1[1];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[1].mat5 = mat5[1];, std::thread thread2( [ this ] {this-&amp;gt;matrixModifier[1].execute();});, thread1.join();, thread2.join();, matOut1[0] = matrixModifier[0].matOut;, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines
&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:65)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.ThreadingOptimizerTest.testMathUnitThreading(ThreadingOptimizerTest.java:37)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
    <suite duration="2910" locationUrl="java:suite://de.monticore.lang.monticar.generator.cpp.GenerationTest" name="GenerationTest" status="failed">
        <test duration="32" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GenerationTest/testBasicPorts" name="GenerationTest.testBasicPorts" status="failed">
            <diff actual="#ifndef TEST_BASICPORTS&#10;#define TEST_BASICPORTS&#10;#ifndef M_PI&#10;#define M_PI 3.14159265358979323846&#10;#endif&#10;#include &quot;octave/oct.h&quot;&#10;class test_basicPorts{&#10;public:&#10;double in1;&#10;double in2;&#10;double out1;&#10;double out2;&#10;void init()&#10;{&#10;}&#10;void execute()&#10;{&#10;out2 = in1;&#10;out1 = in2;&#10;}&#10;&#10;};&#10;#endif&#10;" expected="#ifndef TEST_BASICPORTS&#10;#define TEST_BASICPORTS&#10;#ifndef M_PI&#10;#define M_PI 3.14159265358979323846&#10;#endif&#10;#include &quot;octave/oct.h&quot;&#10;class test_basicPorts{&#10;public:&#10;double in1;&#10;double in2;&#10;double out1;&#10;double out2;&#10;void init()&#10;{&#10;}&#10;void execute()&#10;{&#10;out1 = in2;&#10;out2 = in1;&#10;}&#10;&#10;};&#10;#endif&#10;"/>
            <output type="stderr">org.junit.ComparisonFailure: 
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at org.junit.Assert.assertEquals(Assert.java:146)&#13;
	at de.monticore.lang.monticar.generator.cpp.GenerationTest.testBasicPorts(GenerationTest.java:114)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="448" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GenerationTest/testBasicGenericArrayInstance" name="GenerationTest.testBasicGenericArrayInstance" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 24 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\testBasicGenericArrayInstance\test_basicGenericArrayInstance.h has basicGenericArraySize2.val1[0] = val1[3]; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\testBasicGenericArrayInstance\test_basicGenericArrayInstance.h has basicGenericArraySize1.execute(); 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">basicGenericArraySize2.val1[0] = val1[3];
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="basicGenericArraySize1.execute();" expected="basicGenericArraySize2.val1[0] = val1[3];"/>
            <output type="stderr">basicGenericArraySize1.execute();
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GenerationTest.testBasicGenericArrayInstance(GenerationTest.java:413)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="210" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GenerationTest/testMathUnitBothOptimizations" name="GenerationTest.testMathUnitBothOptimizations" status="failed">
            <output type="stderr">java.lang.AssertionError: files have different number of lines: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\paperMatrixModifier\l3\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, class paper_mathUnit{, public:, Matrix mat1[2];, Matrix mat2[2];, Matrix mat3[2];, Matrix mat4[2];, Matrix mat5[2];, Matrix matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=Matrix(1000,200);, mat1[1]=Matrix(1000,200);, mat2[0]=Matrix(1000,200);, mat2[1]=Matrix(1000,200);, mat3[0]=Matrix(200,10);, mat3[1]=Matrix(200,10);, mat4[0]=Matrix(10,100);, mat4[1]=Matrix(10,100);, mat5[0]=Matrix(100,50000);, mat5[1]=Matrix(100,50000);, matOut1[0]=Matrix(1000,100);, matOut1[1]=Matrix(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[1].mat1 = mat1[1];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[0].mat5 = mat5[0];, matrixModifier[1].mat5 = mat5[1];, matrixModifier[0].execute();, matOut1[0] = matrixModifier[0].matOut;, matrixModifier[1].execute();, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\paperMatrixModifier\l3\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, class paper_mathUnit{, public:, Matrix mat1[2];, Matrix mat2[2];, Matrix mat3[2];, Matrix mat4[2];, Matrix mat5[2];, Matrix matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=Matrix(1000,200);, mat1[1]=Matrix(1000,200);, mat2[0]=Matrix(1000,200);, mat2[1]=Matrix(1000,200);, mat3[0]=Matrix(200,10);, mat3[1]=Matrix(200,10);, mat4[0]=Matrix(10,100);, mat4[1]=Matrix(10,100);, mat5[0]=Matrix(100,50000);, mat5[1]=Matrix(100,50000);, matOut1[0]=Matrix(1000,100);, matOut1[1]=Matrix(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[0].mat5 = mat5[0];, std::thread thread1( [ this ] {this-&amp;gt;matrixModifier[0].execute();});, matrixModifier[1].mat1 = mat1[1];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[1].mat5 = mat5[1];, std::thread thread2( [ this ] {this-&amp;gt;matrixModifier[1].execute();});, thread1.join();, thread2.join();, matOut1[0] = matrixModifier[0].matOut;, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines
&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:65)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GenerationTest.testMathUnitBothOptimizations(GenerationTest.java:549)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="2220" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GenerationTest/testSimulatorMainController" name="GenerationTest.testSimulatorMainController" status="failed">
            <output type="stdout">[WARN]  TODO no connection for component output port &amp;quot;simulator.mainController.actuatorBrake&amp;quot;
[WARN]  TODO no connection for component output port &amp;quot;simulator.mainController.actuatorGear&amp;quot;
</output>
            <output type="stderr">org.junit.ComparisonFailure: files differ in 32 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\simulatorMainController\simulator_mainController_steerController1.h has steeringCalculator.currentSteeringAngle = currentSteeringAngle; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\simulatorMainController\simulator_mainController_steerController1.h has steeringCalculator.minSteeringAngle = minSteeringAngle; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">steeringCalculator.currentSteeringAngle = currentSteeringAngle;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="steeringCalculator.minSteeringAngle = minSteeringAngle;" expected="steeringCalculator.currentSteeringAngle = currentSteeringAngle;"/>
            <output type="stderr">steeringCalculator.minSteeringAngle = minSteeringAngle;
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GenerationTest.testSimulatorMainController(GenerationTest.java:507)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
    <suite duration="3831" locationUrl="java:suite://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest" name="BasicGenerationArmadilloTest" status="failed">
        <test duration="194" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testMathUnitAlgebraicOptimizations" name="BasicGenerationArmadilloTest.testMathUnitAlgebraicOptimizations" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 37 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\paperMatrixModifier\l1\paper_mathUnit.h has matrixModifier[1].mat1 = mat1[1]; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\paperMatrixModifier\l1\paper_mathUnit.h has matrixModifier[0].mat2 = mat2[0]; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">matrixModifier[1].mat1 = mat1[1];
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="matrixModifier[0].mat2 = mat2[0];" expected="matrixModifier[1].mat1 = mat1[1];"/>
            <output type="stderr">matrixModifier[0].mat2 = mat2[0];
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testMathUnitAlgebraicOptimizations(BasicGenerationArmadilloTest.java:93)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="1590" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testAllObjectDetectorInstances" name="BasicGenerationArmadilloTest.testAllObjectDetectorInstances" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 42 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\detectionObjectDetector1\l1\detection_objectDetector1_spectralClusterer.h has normalizedLaplacian.similarity = similarity.similarity; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\detectionObjectDetector1\l1\detection_objectDetector1_spectralClusterer.h has normalizedLaplacian.degree = similarity.degree; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">normalizedLaplacian.similarity = similarity.similarity;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="normalizedLaplacian.degree = similarity.degree;" expected="normalizedLaplacian.similarity = similarity.similarity;"/>
            <output type="stderr">normalizedLaplacian.degree = similarity.degree;
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testObjectDetectorInstancingL1(BasicGenerationArmadilloTest.java:234)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testAllObjectDetectorInstances(BasicGenerationArmadilloTest.java:189)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="1771" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testAllObjectDetector4Instances" name="BasicGenerationArmadilloTest.testAllObjectDetector4Instances" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 42 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\detectionObjectDetector4\l1\detection_objectDetector4_spectralClusterer_1_.h has normalizedLaplacian.similarity = similarity.similarity; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\detectionObjectDetector4\l1\detection_objectDetector4_spectralClusterer_1_.h has normalizedLaplacian.degree = similarity.degree; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">normalizedLaplacian.similarity = similarity.similarity;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="normalizedLaplacian.degree = similarity.degree;" expected="normalizedLaplacian.similarity = similarity.similarity;"/>
            <output type="stderr">normalizedLaplacian.degree = similarity.degree;
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testObjectDetectorInstancingL1(BasicGenerationArmadilloTest.java:234)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testAllObjectDetector4Instances(BasicGenerationArmadilloTest.java:198)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="102" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testMathUnitBothOptimizations" name="BasicGenerationArmadilloTest.testMathUnitBothOptimizations" status="failed">
            <output type="stderr">java.lang.AssertionError: files have different number of lines: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\paperMatrixModifier\l3\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;armadillo&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, using namespace arma;, class paper_mathUnit{, public:, mat mat1[2];, mat mat2[2];, mat mat3[2];, mat mat4[2];, mat mat5[2];, mat matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=mat(1000,200);, mat1[1]=mat(1000,200);, mat2[0]=mat(1000,200);, mat2[1]=mat(1000,200);, mat3[0]=mat(200,10);, mat3[1]=mat(200,10);, mat4[0]=mat(10,100);, mat4[1]=mat(10,100);, mat5[0]=mat(100,50000);, mat5[1]=mat(100,50000);, matOut1[0]=mat(1000,100);, matOut1[1]=mat(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[1].mat1 = mat1[1];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[0].mat5 = mat5[0];, matrixModifier[1].mat5 = mat5[1];, matrixModifier[0].execute();, matOut1[0] = matrixModifier[0].matOut;, matrixModifier[1].execute();, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\paperMatrixModifier\l3\paper_mathUnit.h has [#ifndef PAPER_MATHUNIT, #define PAPER_MATHUNIT, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;armadillo&amp;quot;, #include &amp;quot;paper_mathUnit_matrixModifier_1_.h&amp;quot;, #include &amp;lt;thread&amp;gt;, using namespace arma;, class paper_mathUnit{, public:, mat mat1[2];, mat mat2[2];, mat mat3[2];, mat mat4[2];, mat mat5[2];, mat matOut1[2];, paper_mathUnit_matrixModifier_1_ matrixModifier[2];, void init(), {, mat1[0]=mat(1000,200);, mat1[1]=mat(1000,200);, mat2[0]=mat(1000,200);, mat2[1]=mat(1000,200);, mat3[0]=mat(200,10);, mat3[1]=mat(200,10);, mat4[0]=mat(10,100);, mat4[1]=mat(10,100);, mat5[0]=mat(100,50000);, mat5[1]=mat(100,50000);, matOut1[0]=mat(1000,100);, matOut1[1]=mat(1000,100);, matrixModifier[0].init();, matrixModifier[1].init();, }, void execute(), {, matrixModifier[0].mat1 = mat1[0];, matrixModifier[0].mat2 = mat2[0];, matrixModifier[0].mat3 = mat3[0];, matrixModifier[0].mat4 = mat4[0];, matrixModifier[0].mat5 = mat5[0];, std::thread thread1( [ this ] {this-&amp;gt;matrixModifier[0].execute();});, matrixModifier[1].mat1 = mat1[1];, matrixModifier[1].mat2 = mat2[1];, matrixModifier[1].mat3 = mat3[1];, matrixModifier[1].mat4 = mat4[1];, matrixModifier[1].mat5 = mat5[1];, std::thread thread2( [ this ] {this-&amp;gt;matrixModifier[1].execute();});, thread1.join();, thread2.join();, matOut1[0] = matrixModifier[0].matOut;, matOut1[1] = matrixModifier[1].matOut;, }, };, #endif] lines
&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:65)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testMathUnitBothOptimizations(BasicGenerationArmadilloTest.java:128)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="100" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testMathUnitOptimizations" name="BasicGenerationArmadilloTest.testMathUnitOptimizations" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 37 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\paperMatrixModifier\l0\paper_mathUnit.h has matrixModifier[1].mat1 = mat1[1]; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\paperMatrixModifier\l0\paper_mathUnit.h has matrixModifier[0].mat2 = mat2[0]; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">matrixModifier[1].mat1 = mat1[1];
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="matrixModifier[0].mat2 = mat2[0];" expected="matrixModifier[1].mat1 = mat1[1];"/>
            <output type="stderr">matrixModifier[0].mat2 = mat2[0];
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testMathUnitOptimizations(BasicGenerationArmadilloTest.java:76)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="74" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest/testMathUnitThreadingOptimizations" name="BasicGenerationArmadilloTest.testMathUnitThreadingOptimizations" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 37 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\paperMatrixModifier\l2\paper_mathUnit.h has matrixModifier[1].mat1 = mat1[1]; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\paperMatrixModifier\l2\paper_mathUnit.h has matrixModifier[0].mat2 = mat2[0]; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">matrixModifier[1].mat1 = mat1[1];
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="matrixModifier[0].mat2 = mat2[0];" expected="matrixModifier[1].mat1 = mat1[1];"/>
            <output type="stderr">matrixModifier[0].mat2 = mat2[0];
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicGenerationArmadilloTest.testMathUnitThreadingOptimizations(BasicGenerationArmadilloTest.java:110)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
    <suite duration="14803" locationUrl="java:suite://de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest" name="GeneratorCppCliTest" status="failed">
        <test duration="191" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest/testInstructionsOrder1" name="GeneratorCppCliTest.testInstructionsOrder1" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 23 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\testing\MyComponent8\testing_subpackage8_myComponent8.h has c2.in1 = in1; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\testing\MyComponent8\testing_subpackage8_myComponent8.h has c1.execute(); 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">c2.in1 = in1;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="c1.execute();" expected="c2.in1 = in1;"/>
            <output type="stderr">c1.execute();
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompare(GeneratorCppCliTest.java:76)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompareMyComponentX(GeneratorCppCliTest.java:47)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.testInstructionsOrder1(GeneratorCppCliTest.java:22)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="6040" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest/testInstructionsOrder2" name="GeneratorCppCliTest.testInstructionsOrder2" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 45 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\testing\MyComponent9\testing_subpackage9_myComponent9_calcMotionCmds.h has driveToFirstPosition.currentPositionX = currentPositionX; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\testing\MyComponent9\testing_subpackage9_myComponent9_calcMotionCmds.h has isDriveToFirstPosition.currentPositionY = currentPositionY; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">driveToFirstPosition.currentPositionX = currentPositionX;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="isDriveToFirstPosition.currentPositionY = currentPositionY;" expected="driveToFirstPosition.currentPositionX = currentPositionX;"/>
            <output type="stderr">isDriveToFirstPosition.currentPositionY = currentPositionY;
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompare(GeneratorCppCliTest.java:76)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompareMyComponentX(GeneratorCppCliTest.java:47)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.testInstructionsOrder2(GeneratorCppCliTest.java:27)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
        <test duration="8572" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest/testInstructionsOrder3" name="GeneratorCppCliTest.testInstructionsOrder3" status="failed">
            <output type="stderr">java.lang.AssertionError: files have different number of lines: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\testing\MyComponent10\testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds.h has [#ifndef TESTING_SUBPACKAGE10_MYCOMPONENT10_BEHAVIORGENERATION_CALCMOTIONCMDS, #define TESTING_SUBPACKAGE10_MYCOMPONENT10_BEHAVIORGENERATION_CALCMOTIONCMDS, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_isDriveToFirstPosition.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_driveToFirstPosition.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v1.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_followTrajectory.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v2.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_selector.h&amp;quot;, class testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds{, public:, double currentPositionX;, double currentPositionY;, double currentDirectionX;, double currentDirectionY;, int trimmedTrajectoryLength;, Matrix trimmedTrajectoryX;, Matrix trimmedTrajectoryY;, double desiredDirectionX;, double desiredDirectionY;, double signedDistanceToTrajectory;, double desiredVelocity;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_isDriveToFirstPosition isDriveToFirstPosition;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_driveToFirstPosition driveToFirstPosition;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v1 d2v1;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_followTrajectory followTrajectory;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v2 d2v2;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_selector selector;, void init(), {, trimmedTrajectoryX=Matrix(1,100);, trimmedTrajectoryY=Matrix(1,100);, isDriveToFirstPosition.init();, driveToFirstPosition.init();, d2v1.init();, followTrajectory.init();, d2v2.init();, selector.init();, }, void execute(), {, isDriveToFirstPosition.currentPositionX = currentPositionX;, driveToFirstPosition.currentPositionX = currentPositionX;, followTrajectory.currentPositionX = currentPositionX;, isDriveToFirstPosition.currentPositionY = currentPositionY;, driveToFirstPosition.currentPositionY = currentPositionY;, followTrajectory.currentPositionY = currentPositionY;, isDriveToFirstPosition.trimmedTrajectoryLength = trimmedTrajectoryLength;, driveToFirstPosition.trimmedTrajectoryLength = trimmedTrajectoryLength;, followTrajectory.trimmedTrajectoryLength = trimmedTrajectoryLength;, isDriveToFirstPosition.trimmedTrajectoryX = trimmedTrajectoryX;, driveToFirstPosition.trimmedTrajectoryX = trimmedTrajectoryX;, followTrajectory.trimmedTrajectoryX = trimmedTrajectoryX;, isDriveToFirstPosition.trimmedTrajectoryY = trimmedTrajectoryY;, driveToFirstPosition.trimmedTrajectoryY = trimmedTrajectoryY;, followTrajectory.trimmedTrajectoryY = trimmedTrajectoryY;, isDriveToFirstPosition.execute();, driveToFirstPosition.isDriveToFirstPosition = isDriveToFirstPosition.result;, followTrajectory.isDriveToFirstPosition = isDriveToFirstPosition.result;, selector.isDriveToFirstPosition = isDriveToFirstPosition.result;, driveToFirstPosition.execute();, selector.desiredDirectionX1 = driveToFirstPosition.desiredDirectionX;, selector.desiredDirectionY1 = driveToFirstPosition.desiredDirectionY;, selector.signedDistanceToTrajectory1 = driveToFirstPosition.signedDistanceToTrajectory;, d2v1.minVelocity = driveToFirstPosition.minVelocity;, d2v1.maxVelocity = driveToFirstPosition.maxVelocity;, d2v1.distance = driveToFirstPosition.distance;, followTrajectory.execute();, selector.desiredDirectionX2 = followTrajectory.desiredDirectionX;, selector.desiredDirectionY2 = followTrajectory.desiredDirectionY;, selector.signedDistanceToTrajectory2 = followTrajectory.signedDistanceToTrajectory;, d2v2.minVelocity = followTrajectory.minVelocity;, d2v2.maxVelocity = followTrajectory.maxVelocity;, d2v2.distance = followTrajectory.distance;, d2v1.execute();, selector.desiredVelocity1 = d2v1.velocity;, d2v2.execute();, selector.desiredVelocity2 = d2v2.velocity;, selector.execute();, testing.subpackage10.myComponent10.motionPlanning.keepDirection.sab.v2x = selector.desiredDirectionX;, testing.subpackage10.myComponent10.motionPlanning.keepDirection.sab.v2y = selector.desiredDirectionY;, testing.subpackage10.myComponent10.motionPlanning.sac.signedDistanceToTrajectory = selector.signedDistanceToTrajectory;, testing.subpackage10.myComponent10.motionPlanning.engineAndBrakes.pidParams.desiredVelocity = selector.desiredVelocity;, testing.subpackage10.myComponent10.motionPlanning.engineAndBrakes.pidError.desiredVelocity = selector.desiredVelocity;, }, };, #endif] lines and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\testing\MyComponent10\testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds.h has [#ifndef TESTING_SUBPACKAGE10_MYCOMPONENT10_BEHAVIORGENERATION_CALCMOTIONCMDS, #define TESTING_SUBPACKAGE10_MYCOMPONENT10_BEHAVIORGENERATION_CALCMOTIONCMDS, #ifndef M_PI, #define M_PI 3.14159265358979323846, #endif, #include &amp;quot;octave/oct.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_isDriveToFirstPosition.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_driveToFirstPosition.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v1.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_followTrajectory.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v2.h&amp;quot;, #include &amp;quot;testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_selector.h&amp;quot;, class testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds{, public:, double currentPositionX;, double currentPositionY;, double currentDirectionX;, double currentDirectionY;, int trimmedTrajectoryLength;, Matrix trimmedTrajectoryX;, Matrix trimmedTrajectoryY;, double desiredDirectionX;, double desiredDirectionY;, double signedDistanceToTrajectory;, double desiredVelocity;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_isDriveToFirstPosition isDriveToFirstPosition;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_driveToFirstPosition driveToFirstPosition;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v1 d2v1;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_followTrajectory followTrajectory;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_d2v2 d2v2;, testing_subpackage10_myComponent10_behaviorGeneration_calcMotionCmds_selector selector;, void init(), {, trimmedTrajectoryX=Matrix(1,100);, trimmedTrajectoryY=Matrix(1,100);, isDriveToFirstPosition.init();, driveToFirstPosition.init();, d2v1.init();, followTrajectory.init();, d2v2.init();, selector.init();, }, void execute(), {, isDriveToFirstPosition.currentPositionX = currentPositionX;, isDriveToFirstPosition.currentPositionY = currentPositionY;, isDriveToFirstPosition.trimmedTrajectoryLength = trimmedTrajectoryLength;, isDriveToFirstPosition.trimmedTrajectoryX = trimmedTrajectoryX;, isDriveToFirstPosition.trimmedTrajectoryY = trimmedTrajectoryY;, isDriveToFirstPosition.execute();, driveToFirstPosition.isDriveToFirstPosition = isDriveToFirstPosition.result;, driveToFirstPosition.currentPositionX = currentPositionX;, driveToFirstPosition.currentPositionY = currentPositionY;, driveToFirstPosition.trimmedTrajectoryLength = trimmedTrajectoryLength;, driveToFirstPosition.trimmedTrajectoryX = trimmedTrajectoryX;, driveToFirstPosition.trimmedTrajectoryY = trimmedTrajectoryY;, driveToFirstPosition.execute();, d2v1.distance = driveToFirstPosition.distance;, d2v1.minVelocity = driveToFirstPosition.minVelocity;, d2v1.maxVelocity = driveToFirstPosition.maxVelocity;, d2v1.execute();, followTrajectory.isDriveToFirstPosition = isDriveToFirstPosition.result;, followTrajectory.currentPositionX = currentPositionX;, followTrajectory.currentPositionY = currentPositionY;, followTrajectory.trimmedTrajectoryLength = trimmedTrajectoryLength;, followTrajectory.trimmedTrajectoryX = trimmedTrajectoryX;, followTrajectory.trimmedTrajectoryY = trimmedTrajectoryY;, followTrajectory.execute();, d2v2.distance = followTrajectory.distance;, d2v2.minVelocity = followTrajectory.minVelocity;, d2v2.maxVelocity = followTrajectory.maxVelocity;, d2v2.execute();, selector.isDriveToFirstPosition = isDriveToFirstPosition.result;, selector.desiredDirectionX1 = driveToFirstPosition.desiredDirectionX;, selector.desiredDirectionY1 = driveToFirstPosition.desiredDirectionY;, selector.signedDistanceToTrajectory1 = driveToFirstPosition.signedDistanceToTrajectory;, selector.desiredVelocity1 = d2v1.velocity;, selector.desiredDirectionX2 = followTrajectory.desiredDirectionX;, selector.desiredDirectionY2 = followTrajectory.desiredDirectionY;, selector.signedDistanceToTrajectory2 = followTrajectory.signedDistanceToTrajectory;, selector.desiredVelocity2 = d2v2.velocity;, selector.execute();, desiredDirectionX = selector.desiredDirectionX;, desiredDirectionY = selector.desiredDirectionY;, signedDistanceToTrajectory = selector.signedDistanceToTrajectory;, desiredVelocity = selector.desiredVelocity;, }, };, #endif] lines
&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:65)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompare(GeneratorCppCliTest.java:76)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.generateAndCompareMyComponentX(GeneratorCppCliTest.java:47)&#13;
	at de.monticore.lang.monticar.generator.cpp.GeneratorCppCliTest.testInstructionsOrder3(GeneratorCppCliTest.java:32)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
    <suite duration="44" locationUrl="java:suite://de.monticore.lang.monticar.generator.ConfigPortTest" name="ConfigPortTest" status="failed">
        <test duration="44" locationUrl="java:test://de.monticore.lang.monticar.generator.ConfigPortTest/testConfigPortFromAdaptableParameter" name="ConfigPortTest.testConfigPortFromAdaptableParameter" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 24 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\configPort\testing_adaptableParameterInstance.h has out1 = adaptableParameter.out1; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\configPort\testing_adaptableParameterInstance.h has adaptableParameter2.execute(); 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">out1 = adaptableParameter.out1;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="adaptableParameter2.execute();" expected="out1 = adaptableParameter.out1;"/>
            <output type="stderr">adaptableParameter2.execute();
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.ConfigPortTest.testConfigPortFromAdaptableParameter(ConfigPortTest.java:45)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
    <suite duration="2197" locationUrl="java:suite://de.monticore.lang.monticar.generator.cpp.armadillo.BasicMathGenerationArmadilloTest" name="BasicMathGenerationArmadilloTest" status="failed">
        <test duration="2197" locationUrl="java:test://de.monticore.lang.monticar.generator.cpp.armadillo.BasicMathGenerationArmadilloTest/samplePacmanMain" name="BasicMathGenerationArmadilloTest.samplePacmanMain" status="failed">
            <output type="stderr">org.junit.ComparisonFailure: files differ in 42 line: C:\Master\generators\EMAM2Cpp\.\target\generated-sources-cpp\armadillo\test\custom\l0\test_custom_pacmanSampleGame_main_pacmanWorldManager_pacmanWorldHandler_movementHandler.h has pacmanMovementCollisionChecker.pacmanPositionX = pacmanPositionX; and C:\Master\generators\EMAM2Cpp\.\src\test\resources\results\armadillo\test\custom\l0\test_custom_pacmanSampleGame_main_pacmanWorldManager_pacmanWorldHandler_movementHandler.h has pacmanMovementPositionCalculator.pacmanPositionY = pacmanPositionY; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">pacmanMovementCollisionChecker.pacmanPositionX = pacmanPositionX;
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="pacmanMovementPositionCalculator.pacmanPositionY = pacmanPositionY;" expected="pacmanMovementCollisionChecker.pacmanPositionX = pacmanPositionX;"/>
            <output type="stderr">pacmanMovementPositionCalculator.pacmanPositionY = pacmanPositionY;
&#13;
	at org.junit.Assert.assertEquals(Assert.java:117)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.areBothFilesEqual(AbstractSymtabTest.java:77)&#13;
	at de.monticore.lang.monticar.generator.AbstractSymtabTest.testFilesAreEqual(AbstractSymtabTest.java:29)&#13;
	at de.monticore.lang.monticar.generator.cpp.armadillo.BasicMathGenerationArmadilloTest.samplePacmanMain(BasicMathGenerationArmadilloTest.java:139)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)&#13;
</output>
        </test>
    </suite>
</testrun>
