/* generated by template symboltable.ModelingLanguage*/




package simlang._symboltable;

import java.util.Optional;
import simlang._parser.SimLangParser;
import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolvingConfiguration;

public abstract class SimLangLanguageTOP extends de.monticore.CommonModelingLanguage {

  public SimLangLanguageTOP(String langName, String fileEnding) {
    super(langName, fileEnding);

    initResolvingFilters();
    setModelNameCalculator(new SimLangModelNameCalculator());
  }

  @Override
  public SimLangParser getParser() {
    return new SimLangParser();
  }

  @Override
  public Optional<SimLangSymbolTableCreator> getSymbolTableCreator(
      ResolvingConfiguration resolvingConfiguration, MutableScope enclosingScope) {
    return Optional.of(new SimLangSymbolTableCreator(resolvingConfiguration, enclosingScope));
  }

  @Override
  public SimLangModelLoader getModelLoader() {
    return (SimLangModelLoader) super.getModelLoader();
  }

  /*
  @Override
  protected SimLangModelLoader provideModelLoader() {
    return new SimLangModelLoader(this);
  }
  */

  protected void initResolvingFilters() {
    addResolvingFilter(new SimulationResolvingFilter());
  }
}
