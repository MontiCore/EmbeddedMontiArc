# (c) https://github.com/MontiCore/monticore
stages:
  - build
  - test
  - deploy


BuildVAE:
  stage: build
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
  - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
  - cd standard-vae/src/test/test_training
  - mvn dependency:resolve emadl:train -s settings.xml -U

BuildBetaVAE:
  stage: build
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
  - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
  - cd beta-vae/src/test/test_training
  - mvn dependency:resolve emadl:train -s settings.xml -U

BuildCVAE:
  stage: build
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
  - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
  - cd conditional-vae/src/test/test_training
  - mvn dependency:resolve emadl:train -s settings.xml -U

BuildVQVAE:
  stage: build
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
  - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
  - cd vq-vae/src/test/test_training
  - mvn dependency:resolve emadl:train -s settings.xml -U

TestPretrainedVAE: #Not testing digits 5 and 9
  stage: test
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
    - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
    - cd standard-vae
    - cp -a pre-trained/model/vae.Encoder/. src/test/test_pre-trained/model/mnist.Encoder/
    - cp -a pre-trained/model/vae.Decoder/. src/test/test_pre-trained/model/mnist.Decoder/
    - cd src/test/test_pre-trained
    - bash cpp_compile.sh
    - bash test_digit_generation.sh

TestPretrainedBetaVAE: #Not testing digits 4 and 5
  stage: test
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
    - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
    - cd beta-vae
    - cp -a pre-trained/model/bvae.Encoder/. src/test/test_pre-trained/model/mnist.Encoder/
    - cp -a pre-trained/model/bvae.Decoder/. src/test/test_pre-trained/model/mnist.Decoder/
    - cd src/test/test_pre-trained
    - bash cpp_compile.sh
    - bash test_digit_generation.sh

TestPretrainedCVAE:
  stage: test
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
    - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
    - cd conditional-vae
    - cp -a pre-trained/model/cvae.Encoder/. src/test/test_pre-trained/model/mnist.Encoder/
    - cp -a pre-trained/model/cvae.Decoder/. src/test/test_pre-trained/model/mnist.Decoder/
    - cd src/test/test_pre-trained
    - bash cpp_compile.sh
    - bash test_digit_generation.sh

TestPythonPretrainedVQVAE:
  stage: test
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  script:
    - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
    - cd vq-vae
    - cp -a pre-trained/model/vqvae.Encoder/. src/test/test_pre-trained/model/mnist.Encoder/
    - cp -a pre-trained/model/vqvae.Decoder/. src/test/test_pre-trained/model/mnist.Decoder/
    - cd src/test/test_pre-trained
    - bash py_test_reconstruction.sh

TestCPPPretrainedVQVAE:
  stage: test
  image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
  allow_failure: true #Getting no Reconstructions with C++
  script:
    - mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
    - cd vq-vae
    - cp -a pre-trained/model/vqvae.Encoder/. src/test/test_pre-trained/model/mnist.Encoder/
    - cp -a pre-trained/model/vqvae.Decoder/. src/test/test_pre-trained/model/mnist.Decoder/
    - cd src/test/test_pre-trained
    - bash cpp_compile.sh
    - bash cpp_test_reconstruction.sh

TestInstallVAE:
  stage: test
  image: maven:3.6-jdk-8
  needs: ["TestPretrainedVAE"]
  script:
    - cd standard-vae/pre-trained/model/vae.Encoder
    - mvn dependency:resolve emadl:install-pretrained -s settings.xml -U
    - cd ../vae.Decoder
    - mvn emadl:install-pretrained -s settings.xml -U

TestInstallBetaVAE:
  stage: test
  image: maven:3.6-jdk-8
  needs: ["TestPretrainedBetaVAE"]
  script:
    - cd beta-vae/pre-trained/model/bvae.Encoder
    - mvn dependency:resolve emadl:install-pretrained -s settings.xml -U
    - cd ../bvae.Decoder
    - mvn emadl:install-pretrained -s settings.xml -U

TestInstallCVAE:
  stage: test
  image: maven:3.6-jdk-8
  needs: ["TestPretrainedCVAE"]
  script:
    - cd conditional-vae/pre-trained/model/cvae.Encoder
    - mvn dependency:resolve emadl:install-pretrained -s settings.xml -U
    - cd ../cvae.Decoder
    - mvn emadl:install-pretrained -s settings.xml -U

TestInstallVQVAE:
  stage: test
  image: maven:3.6-jdk-8
  needs: ["TestPythonPretrainedVQVAE","TestCPPPretrainedVQVAE"]
  script:
    - cd vq-vae/pre-trained/model/vqvae.Encoder
    - mvn dependency:resolve emadl:install-pretrained -s settings.xml -U
    - cd ../vqvae.Decoder
    - mvn emadl:install-pretrained -s settings.xml -U

DeployPretrainedVAE:
  stage: deploy
  image: maven:3.6-jdk-8
  needs: ["TestInstallVAE"]
  script:
    - cd standard-vae/pre-trained/model/vae.Encoder
    - mvn dependency:resolve emadl:deploy-pretrained -s settings.xml -U
    - cd ../vae.Decoder
    - mvn emadl:deploy-pretrained -s settings.xml -U

DeployPretrainedBetaVAE:
  stage: deploy
  image: maven:3.6-jdk-8
  needs: ["TestInstallBetaVAE"]
  script:
    - cd beta-vae/pre-trained/model/bvae.Encoder
    - mvn dependency:resolve emadl:deploy-pretrained -s settings.xml -U
    - cd ../bvae.Decoder
    - mvn emadl:deploy-pretrained -s settings.xml -U


DeployPretrainedCVAE:
  stage: deploy
  image: maven:3.6-jdk-8
  needs: ["TestInstallCVAE"]
  script:
    - cd conditional-vae/pre-trained/model/cvae.Encoder
    - mvn dependency:resolve emadl:deploy-pretrained -s settings.xml -U
    - cd ../cvae.Decoder
    - mvn emadl:deploy-pretrained -s settings.xml -U

DeployPretrainedVQVAE:
  stage: deploy
  image: maven:3.6-jdk-8
  needs: ["TestInstallVQVAE"]
  script:
    - cd vq-vae/pre-trained/model/vqvae.Encoder
    - mvn dependency:resolve emadl:deploy-pretrained -s settings.xml -U
    - cd ../vqvae.Decoder
    - mvn emadl:deploy-pretrained -s settings.xml -U