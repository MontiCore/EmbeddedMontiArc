/* generated from model Weather*/
/* generated by template ast.Class*/
// Class declaration
/* generated by template ast_emf.AstNodeFactory*/



package weather._ast;

import java.util.ArrayList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.plugin.EcorePlugin;
import org.eclipse.emf.ecore.impl.EFactoryImpl;
import de.se_rwth.commons.logging.Log;

import weather._ast.*;
import numberunit._ast.*;


public class WeatherNodeFactory extends EFactoryImpl {
  
  // Creates the default factory implementation.
  public static WeatherNodeFactory getFactory() {
    try {
      WeatherNodeFactory eFactory = (WeatherNodeFactory)EPackage.Registry.INSTANCE.getEFactory("http://Weather/1.0"); 
      if (eFactory != null) {
        return eFactory;
     }
    }
    catch (Exception exception) {
      EcorePlugin.INSTANCE.log(exception);
    }
    if (factory == null) {
      factory = new WeatherNodeFactory();
    }
    return factory;
  }

  
  protected static WeatherNodeFactory factory = null;
  
  @Override
  public EObject create(EClass eClass) {
    switch (eClass.getClassifierID()) {
      case WeatherPackage.ASTTemperature: return WeatherNodeFactory.createASTTemperature();
      case WeatherPackage.ASTHumidity: return WeatherNodeFactory.createASTHumidity();
      case WeatherPackage.ASTPressure: return WeatherNodeFactory.createASTPressure();
      case WeatherPackage.ASTWindstrength: return WeatherNodeFactory.createASTWindstrength();
      case WeatherPackage.ASTWinddirection: return WeatherNodeFactory.createASTWinddirection();
      case WeatherPackage.ASTPrecipitationtype: return WeatherNodeFactory.createASTPrecipitationtype();
      case WeatherPackage.ASTPrecipitationamount: return WeatherNodeFactory.createASTPrecipitationamount();
      case WeatherPackage.ASTClouding: return WeatherNodeFactory.createASTClouding();
      case WeatherPackage.ASTSight: return WeatherNodeFactory.createASTSight();
      case WeatherPackage.ASTWeatherPhenomena: return WeatherNodeFactory.createASTWeatherPhenomena();
      case WeatherPackage.ASTOpticalPhenomena: return WeatherNodeFactory.createASTOpticalPhenomena();
      case WeatherPackage.ASTArtificialPhenomena: return WeatherNodeFactory.createASTArtificialPhenomena();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }
  
  // Returns the package supported by this factory.
  WeatherPackage getWeatherPackage() {
    return (WeatherPackage)getEPackage();
  }
    
  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTTemperature = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTHumidity = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTPressure = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTWindstrength = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTWinddirection = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTPrecipitationtype = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTPrecipitationamount = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTClouding = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTSight = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTWeatherPhenomena = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTOpticalPhenomena = null;

  /* generated by template ast.Attribute*/
  
   protected  static  WeatherNodeFactory factoryASTArtificialPhenomena = null;


  protected WeatherNodeFactory () {}

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTTemperature createASTTemperature()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTTemperature == null) {
      factoryASTTemperature = getFactory();
    }
    return factoryASTTemperature.doCreateASTTemperature();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTTemperature doCreateASTTemperature()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTTemperature();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTTemperature createASTTemperature(String weatherTemperature)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherTemperature, "0xA7006_020 Parameter 'weatherTemperature' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTTemperature == null) {
      factoryASTTemperature = getFactory();
    }
    return factoryASTTemperature.doCreateASTTemperature(weatherTemperature);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTTemperature doCreateASTTemperature(String weatherTemperature)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherTemperature, "0xA7006_050 Parameter 'weatherTemperature' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTTemperature(weatherTemperature);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTHumidity createASTHumidity()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTHumidity == null) {
      factoryASTHumidity = getFactory();
    }
    return factoryASTHumidity.doCreateASTHumidity();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTHumidity doCreateASTHumidity()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTHumidity();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTHumidity createASTHumidity(String weatherHumidity,boolean pERCENT)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherHumidity, "0xA7006_772 Parameter 'weatherHumidity' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTHumidity == null) {
      factoryASTHumidity = getFactory();
    }
    return factoryASTHumidity.doCreateASTHumidity(weatherHumidity, pERCENT);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTHumidity doCreateASTHumidity(String weatherHumidity,boolean pERCENT)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherHumidity, "0xA7006_351 Parameter 'weatherHumidity' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTHumidity(weatherHumidity, pERCENT);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPressure createASTPressure()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTPressure == null) {
      factoryASTPressure = getFactory();
    }
    return factoryASTPressure.doCreateASTPressure();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPressure doCreateASTPressure()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTPressure();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPressure createASTPressure(String weatherPressure)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherPressure, "0xA7006_282 Parameter 'weatherPressure' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTPressure == null) {
      factoryASTPressure = getFactory();
    }
    return factoryASTPressure.doCreateASTPressure(weatherPressure);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPressure doCreateASTPressure(String weatherPressure)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherPressure, "0xA7006_776 Parameter 'weatherPressure' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTPressure(weatherPressure);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWindstrength createASTWindstrength()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTWindstrength == null) {
      factoryASTWindstrength = getFactory();
    }
    return factoryASTWindstrength.doCreateASTWindstrength();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWindstrength doCreateASTWindstrength()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTWindstrength();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWindstrength createASTWindstrength(String weatherWindstrength)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherWindstrength, "0xA7006_692 Parameter 'weatherWindstrength' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTWindstrength == null) {
      factoryASTWindstrength = getFactory();
    }
    return factoryASTWindstrength.doCreateASTWindstrength(weatherWindstrength);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWindstrength doCreateASTWindstrength(String weatherWindstrength)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherWindstrength, "0xA7006_818 Parameter 'weatherWindstrength' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTWindstrength(weatherWindstrength);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWinddirection createASTWinddirection()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTWinddirection == null) {
      factoryASTWinddirection = getFactory();
    }
    return factoryASTWinddirection.doCreateASTWinddirection();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWinddirection doCreateASTWinddirection()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTWinddirection();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWinddirection createASTWinddirection(String weatherWinddirection)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherWinddirection, "0xA7006_238 Parameter 'weatherWinddirection' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTWinddirection == null) {
      factoryASTWinddirection = getFactory();
    }
    return factoryASTWinddirection.doCreateASTWinddirection(weatherWinddirection);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWinddirection doCreateASTWinddirection(String weatherWinddirection)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherWinddirection, "0xA7006_789 Parameter 'weatherWinddirection' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTWinddirection(weatherWinddirection);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPrecipitationtype createASTPrecipitationtype()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTPrecipitationtype == null) {
      factoryASTPrecipitationtype = getFactory();
    }
    return factoryASTPrecipitationtype.doCreateASTPrecipitationtype();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPrecipitationtype doCreateASTPrecipitationtype()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTPrecipitationtype();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPrecipitationtype createASTPrecipitationtype(int precipitationType)   { 
     
     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTPrecipitationtype == null) {
      factoryASTPrecipitationtype = getFactory();
    }
    return factoryASTPrecipitationtype.doCreateASTPrecipitationtype(precipitationType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPrecipitationtype doCreateASTPrecipitationtype(int precipitationType)   { 
     
     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTPrecipitationtype(precipitationType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPrecipitationamount createASTPrecipitationamount()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTPrecipitationamount == null) {
      factoryASTPrecipitationamount = getFactory();
    }
    return factoryASTPrecipitationamount.doCreateASTPrecipitationamount();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPrecipitationamount doCreateASTPrecipitationamount()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTPrecipitationamount();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTPrecipitationamount createASTPrecipitationamount(String weatherPrecipitationamount)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherPrecipitationamount, "0xA7006_225 Parameter 'weatherPrecipitationamount' must not be null.");

     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTPrecipitationamount == null) {
      factoryASTPrecipitationamount = getFactory();
    }
    return factoryASTPrecipitationamount.doCreateASTPrecipitationamount(weatherPrecipitationamount);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTPrecipitationamount doCreateASTPrecipitationamount(String weatherPrecipitationamount)   { 
     /* generated by template ast.ErrorIfNull*/
    Log.errorIfNull(weatherPrecipitationamount, "0xA7006_271 Parameter 'weatherPrecipitationamount' must not be null.");

     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTPrecipitationamount(weatherPrecipitationamount);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTClouding createASTClouding()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTClouding == null) {
      factoryASTClouding = getFactory();
    }
    return factoryASTClouding.doCreateASTClouding();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTClouding doCreateASTClouding()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTClouding();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTClouding createASTClouding(int cloudingType)   { 
     
     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTClouding == null) {
      factoryASTClouding = getFactory();
    }
    return factoryASTClouding.doCreateASTClouding(cloudingType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTClouding doCreateASTClouding(int cloudingType)   { 
     
     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTClouding(cloudingType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTSight createASTSight()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTSight == null) {
      factoryASTSight = getFactory();
    }
    return factoryASTSight.doCreateASTSight();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTSight doCreateASTSight()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTSight();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTSight createASTSight(String weatherSight,boolean unlimited)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTSight == null) {
      factoryASTSight = getFactory();
    }
    return factoryASTSight.doCreateASTSight(weatherSight, unlimited);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTSight doCreateASTSight(String weatherSight,boolean unlimited)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTSight(weatherSight, unlimited);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWeatherPhenomena createASTWeatherPhenomena()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTWeatherPhenomena == null) {
      factoryASTWeatherPhenomena = getFactory();
    }
    return factoryASTWeatherPhenomena.doCreateASTWeatherPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWeatherPhenomena doCreateASTWeatherPhenomena()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTWeatherPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTWeatherPhenomena createASTWeatherPhenomena(String posX,String posY,int phenomenaType)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTWeatherPhenomena == null) {
      factoryASTWeatherPhenomena = getFactory();
    }
    return factoryASTWeatherPhenomena.doCreateASTWeatherPhenomena(posX, posY, phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTWeatherPhenomena doCreateASTWeatherPhenomena(String posX,String posY,int phenomenaType)   { 
     /* generated by template ast.factorymethods.ErrorIfNull*/


     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTWeatherPhenomena(posX, posY, phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTOpticalPhenomena createASTOpticalPhenomena()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTOpticalPhenomena == null) {
      factoryASTOpticalPhenomena = getFactory();
    }
    return factoryASTOpticalPhenomena.doCreateASTOpticalPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTOpticalPhenomena doCreateASTOpticalPhenomena()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTOpticalPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTOpticalPhenomena createASTOpticalPhenomena(int phenomenaType)   { 
     
     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTOpticalPhenomena == null) {
      factoryASTOpticalPhenomena = getFactory();
    }
    return factoryASTOpticalPhenomena.doCreateASTOpticalPhenomena(phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTOpticalPhenomena doCreateASTOpticalPhenomena(int phenomenaType)   { 
     
     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTOpticalPhenomena(phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTArtificialPhenomena createASTArtificialPhenomena()   { 
     
     /* generated by template ast.factorymethods.Create*/

  {
    if (factoryASTArtificialPhenomena == null) {
      factoryASTArtificialPhenomena = getFactory();
    }
    return factoryASTArtificialPhenomena.doCreateASTArtificialPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTArtificialPhenomena doCreateASTArtificialPhenomena()   { 
     
     /* generated by template ast.factorymethods.DoCreate*/

  {
    return new ASTArtificialPhenomena();
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  ASTArtificialPhenomena createASTArtificialPhenomena(int phenomenaType)   { 
     
     /* generated by template ast.factorymethods.CreateWithParams*/

  {
    if (factoryASTArtificialPhenomena == null) {
      factoryASTArtificialPhenomena = getFactory();
    }
    return factoryASTArtificialPhenomena.doCreateASTArtificialPhenomena(phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   protected  ASTArtificialPhenomena doCreateASTArtificialPhenomena(int phenomenaType)   { 
     
     /* generated by template ast.factorymethods.DoCreateWithParams*/
 
  {
    return new ASTArtificialPhenomena(phenomenaType);
  }

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTNumber createASTNumber()   { 
     
     /* generated by template ast.factorymethods.CreateDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTNumber();

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTNumber createASTNumber(numberunit._ast.ASTFloatPointUnitNumber floatPointUnitNumber,numberunit._ast.ASTHexUnitNumber hexUnitNumber,numberunit._ast.ASTComplexNumber complexNumber,numberunit._ast.ASTUnitNumber unitNumber)   { 
     
     /* generated by template ast.factorymethods.CreateWithParamsDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTNumber(floatPointUnitNumber, hexUnitNumber, complexNumber, unitNumber);

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTFloatPointUnitNumber createASTFloatPointUnitNumber()   { 
     
     /* generated by template ast.factorymethods.CreateDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTFloatPointUnitNumber();

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTHexUnitNumber createASTHexUnitNumber()   { 
     
     /* generated by template ast.factorymethods.CreateDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTHexUnitNumber();

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTUnitNumber createASTUnitNumber()   { 
     
     /* generated by template ast.factorymethods.CreateDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTUnitNumber();

  } 

  /* generated by template ast.ClassMethod*/
  
   public  static  numberunit._ast.ASTComplexNumber createASTComplexNumber()   { 
     
     /* generated by template ast.factorymethods.CreateDelegate*/

   return numberunit._ast.NumberUnitNodeFactory.createASTComplexNumber();

  } 


}

