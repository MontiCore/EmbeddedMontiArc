package de.rwth.supermario.haller;


import de.rwth.supermario.haller.tools.OrRelation_3;
import de.rwth.supermario.haller.actuator.GeneralStrategy;
import de.rwth.supermario.haller.EnemyController;
import de.rwth.supermario.haller.ObstacleController;

component Controller {
    ports   //x,y
        in Z^{1,2} marioPosition,
        in Z^{1,2} marioVelocity,
        in Z marioHeight,
        in Z^{5,2} nextEnemyPositions,
        in Z^{5,2} nextObstaclePositions,
        in Z nextHole,
        in Z^{5,2} nextLootCrates,
        out Z(-1 : 1 : 1) marioDirection,
        out Z marioJump,
        out Z marioDown,
        out Z marioShoot;
        
    
    instance EnemyController enemyController;
    connect  nextEnemyPositions -> enemyController.nextEnemyPositions;
    
    instance ObstacleController obstController;
    connect  nextObstaclePositions -> obstController.nextObstaclePositions;
    connect  nextHole -> obstController.holeDistance;
    
    instance GeneralStrategy genStrategy;
    connect  marioPosition->genStrategy.marioPosition;
        
    instance OrRelation_3 orR;
    connect  obstController.jumpAdvice -> orR.input[1];
    connect  enemyController.jumpAdvice -> orR.input[2];
    connect  genStrategy.jumpAdvice -> orR.input[3];
    
    connect  orR.output -> marioJump;
    
    
    connect  genStrategy.directionAdvice -> marioDirection;
    
    
    //connect 1 -> marioDown;
}