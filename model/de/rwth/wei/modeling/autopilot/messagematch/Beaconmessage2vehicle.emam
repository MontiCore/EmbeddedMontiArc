/* (c) https://github.com/MontiCore/monticore */
package de.rwth.wei.modeling.autopilot.messagematch;
import  de.rwth.wei.modeling.autopilot.messagestruct.*;

dynamic component Beaconmessage2vehicle{
 ports
   // fliter the message for the vehicle at intersection
   dynamic in Statusmessage         status_msg[0:32],
   dynamic in Trajectorymessage     traj_msg[0:32],
   in  Z^32   vehiclelist,
   in  Z   list_num,

   dynamic out Statusmessage       newstatus_msg[0:32],
   dynamic out Trajectorymessage   newtraj_msg[0:32],
   out Statusmessage        smsg,
   out Trajectorymessage    tmsg;

   @ status_msg::connect{}
   @ traj_msg::connect{}

   implementation Math{
     Z counter = 1;
     for i = 1:32
        if is_connected(status_msg,i)
           smsg = status_msg(i);
           for j = 1:list_num
              if smsg.vehicleid == vehiclelist(j)
                 for k = 1:32
                    if is_connected(traj_msg,k)
                       tmsg = traj_msg(k);
                       if smsg.vehicleid == tmsg.vehicleid
                          if ports_connect(newstatus_msg,counter,smsg)
                             newstatus_msg(counter) = smsg;
                          end
                          Z r = ports_free(newstatus_msg,counter);

                          if ports_connect(newtraj_msg,counter,tmsg)
                             newtraj_msg(counter) = tmsg;
                          end
                          Z r1 = ports_free(newtraj_msg,counter);
                          counter = counter + 1;
                       end
                    end
                 end
              end
           end
        end
     end
   }
 }
