/* (c) https://github.com/MontiCore/monticore */
package de.rwth.wei.modeling.autopilot.platoonService;
import  de.rwth.wei.modeling.autopilot.messagestruct.*;

dynamic component changestatus{
  ports
  dynamic in  statusmessage            status_msg[0:32],
  dynamic in  platoonmessage           plat_msg[0:32],

  in Q vehicleid,
  in Q nextintersection_x,
  in Q nextintersection_y,
  in Q isnextintersection,
  in B isplatoonheader,

  @ status_msg::connect{}
  @ plat_msg::connect{}

  out  B                  currentstatus,
  out  B                  platoonheadid,
  out  Q^{1,32}           memberlist,
  out  platoonmessage     pmsg,
  out  platoonmessage     pmsg1,
  out  statusmessage      smsg;


  implementation Math{
    static B status_store = 0;
    static Q platoonheadid_store = 0.0;

    if isplatoonheader == 1
       currentstatus = 1;
       platoonheadid = vehicleid;
    else
        if status_store == 0
           Z t_min = 0;
           for i = 1:32
              if is_connected(plat_msg,i)
                 pmsg = plat_msg(i);
                 memberlist = pmsg.platoon_member;
                 Z membernum = pmsg.member_num;
                 if memberlist(1,membernum) == vehicleid
                    if pmsg.timestamp >= t_min
                       currentstatus = 1;
                       platoonheadid = pmsg.vehicleid;
                       status_store = currentstatus;
                       platoonheadid_store = platoonheadid;
                       t_min = pmsg.timestamp;
                    end
                 end
              end
           end
        else
           Z stamp_single = 0;
           Z stamp_plat = 0;
           for k = 1:32
              if is_connected(status_msg,i)
                  smsg = status_msg(j);
                  if smsg.vehicleid == platoonheadid_store
                     stamp_single = smsg.timestamp;
                  end
              end
           end
           for j = 1:32
              if is_connected(plat_msg,j)
                 pmsg1 = plat_msg(j);
                 if pmsg1.vehicleid == platoonheadid_store
                    stamp_plat = pmsg1.timestamp;
                 end
              end
           end
           if stamp_single > stamp_plat
              currentstatus = 0;
              platoonheadid = 0.0;
              status_store = currentstatus;
              platoonheadid_store = platoonheadid;
           else
              if pmsg1.ifsplit == 1 && pmsg1.intsersection_x == 0.0 && pmsg1.intsersection_y == 0.0
                  currentstatus = 0;
                  platoonheadid = 0.0;
                  status_store = currentstatus;
                  platoonheadid_store = platoonheadid;
              end
              if pmsg1.ifsplit == 1 && pmsg1.intsersection_x != 0.0 && pmsg1.intsersection_y != 0.0
                  if isnextintersection == 0
                      currentstatus = 0;
                      platoonheadid = 0.0;
                      status_store = currentstatus;
                      platoonheadid_store = platoonheadid;
                  else
                      Q dx = nextintersection_x;
                      Q dy = nextintersection_y;
                      Q dxx = pmsg1.intsersection_x;
                      Q dyy = pmsg1.intsersection_y;
                      Q sqrt_dis = (dx - dxx)*(dx - dxx)+(dy - dyy)*(dy - dyy);
                      Q dis = sqrt(sqrt_dis);
                      if dis > 10
                        currentstatus = 0;
                        platoonheadid = 0.0;
                        status_store = currentstatus;
                        platoonheadid_store = platoonheadid;
                      end
                  end
              end//if pmsg1.ifsplit == 1 && pmsg1.intsersection_x != 0.0 && pmsg1.intsersection_y != 0.0
           end //if stamp_single > stamp_plat
        end //if status_store == 0
    end
  }
}
