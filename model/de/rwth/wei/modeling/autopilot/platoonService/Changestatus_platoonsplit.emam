/* (c) https://github.com/MontiCore/monticore */
package de.rwth.wei.modeling.autopilot.platoonService;
import  de.rwth.wei.modeling.autopilot.messagestruct.*;

dynamic component Changestatus_platoonsplit{
  ports
  dynamic in Statusmessage status_msg[0:32],
  in   Z                  vehicleid,
  in   Z                  timestamp,
  in   Q                  position_x,
  in   Q                  position_y,
  in   Q                  compass,
  in   Q                  length,
  in   Q                  width,
  in   Q                  engine,
  in   Q                  brake,
  in   Q                  steering,
  in   Q                  velocity,
  in   Q                  nextintersection_x,
  in   Q                  nextintersection_y,
  in   Z                  platoonheadid,
  in   Z^{1,100}          platoonlist,
  in   Z                  platoon_member_num,


  out   Z                  current_status,
  out   Z                  ifwillsplit,
  out   Z                  isplatoonheader,
  out   Z                  current_platoonheadid,
  out   Z                  if_currentplatoonsplit,
  out   Z                  current_platnum,
  out   Z^{1,100}          currentplatoonlist,
  dynamic out Platoonmessage plat_msg[0:32],
  out Platoonmessage pmsg,
  out Statusmessage  smsg;

  @ status_msg::connect{}

  implementation Math{
    static Z timesplit = 0;
    static Z timestamp_store = 0;
    static Q next_x = 0.0;
    static Q next_y = 0.0;
    if timesplit == 0
       timesplit = timestamp;
    end
    if next_x == 0.0 && next_y == 0.0
       next_x = nextintersection_x;
       next_y = nextintersection_y;
    end
    //Z tailid = platoonlist(1,platoon_member_num);
    Z tag = 0;
    for i = 1:32
       if is_conneceted(status_msg,i)
          smsg = status_msg(i);
          if smsg.vehicleid == platoonlist(1,platoon_member_num)
              if smsg.platoon_headid == 0 && smsg.timestamp > timesplit
                 tag = 1;
              end
          end
       end
    end
    if tag == 1
       current_status = 0;
       ifwillsplit = 0;
       current_platoonheadid = vehicleid;
       current_platnum = 0;
       currentplatoonlist(1,1)= 0;
       if_currentplatoonsplit = 1;
       isplatoonheader = 0;
       timesplit = 0;
       next_x = 0.0;
       next_y = 0.0;
    else
        if timestamp - timestamp_store >= 5
          pmsg.vehicleid = vehicleid;
          pmsg.timestamp = timestamp;
          pmsg.position_x = position_x;
          pmsg.position_y = position_y;
          pmsg.compass = compass;
          pmsg.length = length;
          pmsg.width = width;
          pmsg.velocity = velocity;
          pmsg.engine = engine;
          pmsg.brakes = brake;
          pmsg.steering = steering;
          pmsg.ifsplit = 1;
          pmsg.intsersection_x = next_x;
          pmsg.intsersection_x = next_y;
          pmsg.member_num = platoon_member_num;
          pmsg.platoon_member = platoonlist;
          Z a1 = 1;
          if ports_connect(plat_msg,a1,pmsg)
             plat_msg(a1) = pmsg;
          end
          Z r1 = ports_free(plat_msg,a1);
          timestamp_store = timestamp;
        end
        current_status = 1;
        ifwillsplit = 1;
        current_platnum = platoon_member_num;
        currentplatoonlist = platoonlist;
        current_platoonheadid = vehicleid;
        if_currentplatoonsplit = 1;
        isplatoonheader = 1;
    end
  }

}
