package de.rwth.armin.modeling.autopilot.platoonService;

dynamic component Split2array{
ports
dynamic in  Q        similarity[0:32],
dynamic in  Z        vehicleid[0:32],
in  Z^{1,100}        platoonlist,
in  Z                platoon_member_num,
in  Q                nextintersection_x,
in  Q                nextintersection_y,


out  Z               if_split,
out  Q               split_next_x,
out  Q               split_next_y;


@ similarity::connect{}
@ vehicleid::connect{}

implementation Math{
    if_split = 0;
    split_next_x = 0.0;
    split_next_y = 0.0;
    for i = 1:32
       Z vehicle_inplatoon = 0;
       if is_connected(similarity,i)
          if similarity(i) >= 8
             if is_connected(vehicleid,i)
                vehicle_inplatoon = vehicleid(i);
             end
          end
       end
       if vehicle_inplatoon != 0
          for j = 1:platoon_member_num
              if platoonlist(1,j) == vehicle_inplatoon
                 if_split = 1;
                 split_next_x = nextintersection_x;
                 split_next_y = nextintersection_y;
              end
          end
       end
    end
}

}
