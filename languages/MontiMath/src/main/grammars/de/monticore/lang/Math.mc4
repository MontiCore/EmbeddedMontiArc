/* (c) https://github.com/MontiCore/monticore */


/// NOTE: all vectors are row vectors to be compatible to Matlab and Octave
package de.monticore.lang;

grammar Math extends de.monticore.NumberUnit, de.monticore.AssignmentExpressions , de.monticore.CommonExpressions,
        de.monticore.lang.Matrix, de.monticore.lang.MatrixExpressions, de.monticore.lang.monticar.Types2 {

    MathCompilationUnit =
        ("package" package:QualifiedName ";")?
        (ImportStatement)* // to import later on other scripts/functions
        MathScript;

    interface Statement;

    symbol scope MathScript =
        "script" Name statements:Statement* "end";

    MathDottedNameExpression implements Expression<300> =
        Name "." Name;

    MathMatrixNameExpression implements Expression<300> =
        Name "(" MathMatrixAccessExpression ")";

    //Boolean expressions
    MathTrueExpression implements Expression<240> =
    	"true";
    MathFalseExpression implements Expression<240> =
    	"false";

    //for loop
    MathForLoopExpression implements Statement =
    	"for" head:MathForLoopHead body:Statement* "end";

    MathForLoopHead =
    	Name "=" (NameExpression | Expression);

    //if  and else conditions
    MathIfStatement implements Statement =
    	MathIfExpression MathElseIfExpression* MathElseExpression? "end";

    MathIfStatementShort implements Statement =
    	Expression "?" trueCase:Statement* ":" falseCase:Statement*;

    MathIfExpression =
    	"if" condition:Expression body:Statement* ;

    MathElseIfExpression =
    	"elseif" condition:Expression body:Statement* ;

    MathElseExpression =
    	"else" body:Statement* ;

    MathDeclarationStatement implements Statement =
        type:AssignmentType Name ";";

    MathAssignmentDeclarationStatement implements Statement =
        type:AssignmentType Name MathAssignmentOperator (Expression) ";";

    MathAssignmentStatement implements Statement =
        (Name | MathMatrixNameExpression | MathDottedNameExpression) MathAssignmentOperator (Expression) ";";

    MathAssignmentOperator =
        operator:"=" | operator:"+=" | operator:"-=" | operator:"*=" | operator:"/=";

    //Assignments
    AssignmentType =
        matrixProperty:Name* ElementType dimension:Dimension?;

    //Expression for all Numbers with units
    NumberExpression implements Expression<291> =
        NumberWithUnit;

    NameExpression implements Expression<295> =
        Name;

    MathArithmeticPowerOfExpression implements Expression <190> =
     	leftExpression:Expression operator:"^" rightExpression:Expression;


    // override symbols - can be only done with upcoming Monticore Version 5.0.1
    // implement Statement
    IncSuffixExpression implements Expression <220>, Statement =
    	Expression "++" ";" ;

    DecSuffixExpression implements Expression <220>, Statement =
    	Expression "--" ";" ;

    // remove incompatible expressions
    BinaryXorExpression implements Expression <110> = "----- will not be used ---- this removes BinaryXorExpression";
}
