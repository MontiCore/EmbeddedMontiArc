/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_rwth_montisim_hardware_emulator_CppBridge */

#ifndef _Included_de_rwth_montisim_hardware_emulator_CppBridge
#define _Included_de_rwth_montisim_hardware_emulator_CppBridge
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    getVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_getVersion
  (JNIEnv *, jclass);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    initManager
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_initManager
  (JNIEnv *, jclass, jstring);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    queryManager
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_queryManager
  (JNIEnv *, jclass, jstring);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    allocSimulator
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_allocSimulator
  (JNIEnv *, jclass, jstring);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    freeSimulator
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_freeSimulator
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    getInterface
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_getInterface
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    setPortJson
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_setPortJson
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    getPortJson
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_getPortJson
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    setPortBinary
 * Signature: (II[B)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_setPortBinary
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    getPortBinary
 * Signature: (II)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_getPortBinary
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    startTimer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_startTimer
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    getTimerMicrosec
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_getTimerMicrosec
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rwth_montisim_hardware_emulator_CppBridge
 * Method:    execute
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_de_rwth_montisim_hardware_1emulator_CppBridge_execute
  (JNIEnv *, jclass, jint, jdouble);

#ifdef __cplusplus
}
#endif
#endif
