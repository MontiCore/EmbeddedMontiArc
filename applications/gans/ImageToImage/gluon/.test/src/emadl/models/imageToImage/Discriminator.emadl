package imageToImage;

//discriminator arch: C64-C128-C256-C512
//Patchsize 70x70

component Discriminator {
    ports in Q(0:1)^{3, 256, 256} target_label,
		  in Q(0:1)^{3, 256, 256} data,
          out Q(0:1)^{1} discriminated;

    implementation CNN {

		(
        	target_label
		|
			data	
		) ->
		Concatenate(axis=0) ->
		Convolution(kernel=(4,4), channels=64, stride=(2,2)) ->
		LeakyRelu(alpha=0.2) ->
		Convolution(kernel=(4,4), channels=128, stride=(2,2)) ->
		BatchNorm() ->
		LeakyRelu(alpha=0.2) ->
		Convolution(kernel=(4,4), channels=256, stride=(2,2)) ->
		BatchNorm() ->
		LeakyRelu(alpha=0.2) ->
		Convolution(kernel=(4,4), channels=512, stride=(2,2)) ->
		BatchNorm() ->
		LeakyRelu(alpha=0.2) ->
		Convolution(kernel=(4,4), channels=512) ->
		BatchNorm() ->
		LeakyRelu(alpha=0.2) ->
		Convolution(kernel=(4,4), channels=1, stride=(1,1)) ->
		Sigmoid() ->
        discriminated;
    }
}
