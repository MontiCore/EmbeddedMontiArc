package cv.nn;

component AlexnetLight{
    ports in Z(0:255)^{3, 64, 64} data,
         out Q(0:1)^{14} predictions;

    implementation CNN {

       def conv(kernel, channels, stride=(1,1)){
            Convolution(kernel=kernel, channels=channels, stride=stride, padding="same") ->
            Relu()
        }

        def fc(units){
            FullyConnected(units=units) ->
            Relu() ->
            Dropout()
        }

        data ->
        conv(kernel=(3,3), channels=96, stride=(1,1)) ->
        Pooling(pool_type="max", kernel=(3,3), stride=(2,2), padding="same") ->
        conv(kernel=(5,5), channels=128, stride=(2,2)) ->
        Pooling(pool_type="max", kernel=(3,3), stride=(2,2), padding="same") ->
        conv(kernel=(3,3), channels=128) ->
        conv(kernel=(3,3), channels=128) ->
        conv(kernel=(3,3), channels=128) ->
        Pooling(pool_type="max", kernel=(3,3), stride=(2,2), padding="same") ->
        fc(units=256) -> 
        fc(units=256) ->
        FullyConnected(units=14) ->
        Sigmoid() ->
        predictions;
    }
}
