/* (c) https://github.com/MontiCore/monticore */
package daimler.v4;
// The C&C model Oeffentlicher_Demonstrator_FAS_v04 satisfies the view FA24.
  component Oeffentlicher_Demonstrator_FAS_v04FA24 {
    component DEMO_FAS_1 {
      component DEMO_FAS_2 {
        component Subsystem {
          component DEMO_FAS_3 {
            port
              in Double _V_Vehicle_kmh,
              out Double _CCSetValue_kmh,
              in Double _Acceleration_pedal_pc,
              in Double _BrakeForce_pedal_pc;

            component DEMO_FAS_Funktion {
              port
                in Double v_Vehicle_kmh,
                out Double cCSetValue_kmh;

              component Tempomat {
                port
                  out Double v_CC_delta_kmh,
                  in Double v_Vehicle_kmh,
                  out Double out2;

                component Tempomat_Function {
                  port
                    in Double v_Vehicle_kmh,
                    out Double out2;

                  component CC_SetValue {
                    port
                      in Double v_Vehicle_kmh,
                      out Double out3;

                    component CC_OnSet_SetValue {
                      port
                        in Double v_Vehicle_kmh,
                        out Double out3;

  connect v_Vehicle_kmh -> out3;
                    }
instance CC_OnSet_SetValue cC_OnSet_SetValue;
                    component SwitchBlock12_4 {
                      port
                        in Double ifIn,
                        out Double out1;

                    }
instance SwitchBlock12_4 switchBlock12_4;
                    component SwitchBlock11_4 {
                      port
                        in Double elseIn,
                        out Double out1;

                    }
instance SwitchBlock11_4 switchBlock11_4;
  connect cC_OnSet_SetValue.out3 -> switchBlock12_4.ifIn;
  connect v_Vehicle_kmh -> cC_OnSet_SetValue.v_Vehicle_kmh;
  connect switchBlock12_4.out1 -> switchBlock11_4.elseIn;
  connect switchBlock11_4.out1 -> out3;
                  }
instance CC_SetValue cC_SetValue;
  connect v_Vehicle_kmh -> cC_SetValue.v_Vehicle_kmh;
  connect cC_SetValue.out3 -> out2;
                }
instance Tempomat_Function tempomat_Function;
                component SwitchBlock1_17 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock1_17 switchBlock1_17;
  connect tempomat_Function.out2 -> switchBlock1_17.ifIn;
  connect switchBlock1_17.out1 -> out2;
  connect v_Vehicle_kmh -> tempomat_Function.v_Vehicle_kmh;
              }
instance Tempomat tempomat;
              component VelocityControl {
                port
                  in Double v_CC_delta_kmh;

              }
instance VelocityControl velocityControl;
              component FAS_Input {
                port
                  in Double v_Vehicle_kmh,
                  out Double v_Vehicle_kmh5;

  connect v_Vehicle_kmh -> v_Vehicle_kmh5;
              }
instance FAS_Input fAS_Input;
              component Limiter {
                port
                  in Double in2,
                  out Double out1;

                component SwitchBlock_15 {
                  port
                    in Double elseIn,
                    out Double out1;

                }
instance SwitchBlock_15 switchBlock_15;
  connect in2 -> switchBlock_15.elseIn;
  connect switchBlock_15.out1 -> out1;
              }
instance Limiter limiter;
              component UnitDelay_8 {
                port
                  in Double valueIn,
                  out Double valueOut;

              }
instance UnitDelay_8 unitDelay_8;
  connect tempomat.v_CC_delta_kmh -> velocityControl.v_CC_delta_kmh;
  connect fAS_Input.v_Vehicle_kmh5 -> tempomat.v_Vehicle_kmh;
  connect v_Vehicle_kmh -> fAS_Input.v_Vehicle_kmh;
  connect limiter.out1 -> unitDelay_8.valueIn;
  connect tempomat.out2 -> limiter.in2;
  connect unitDelay_8.valueOut -> cCSetValue_kmh;
            }
instance DEMO_FAS_Funktion dEMO_FAS_Funktion;
            component DEMO_FAS_Input {
              port
                in Double v_Vehicle_b,
                out Double v_Vehicle_kmh;

  connect v_Vehicle_b -> v_Vehicle_kmh;
            }
instance DEMO_FAS_Input dEMO_FAS_Input;
            component DEMO_FAS_Output {
              port
                in Double cCSetValue_kmh,
                out Double cCSetValue_kmhOut4;

  connect cCSetValue_kmh -> cCSetValue_kmhOut4;
            }
instance DEMO_FAS_Output dEMO_FAS_Output;
  connect dEMO_FAS_Input.v_Vehicle_kmh -> dEMO_FAS_Funktion.v_Vehicle_kmh;
  connect dEMO_FAS_Funktion.cCSetValue_kmh -> dEMO_FAS_Output.cCSetValue_kmh;
  connect _V_Vehicle_kmh -> dEMO_FAS_Input.v_Vehicle_b;
  connect dEMO_FAS_Output.cCSetValue_kmhOut4 -> _CCSetValue_kmh;
          }
instance DEMO_FAS_3 dEMO_FAS_3;
        }
instance Subsystem subsystem;
      }
instance DEMO_FAS_2 dEMO_FAS_2;
    }
instance DEMO_FAS_1 dEMO_FAS_1;
  }































