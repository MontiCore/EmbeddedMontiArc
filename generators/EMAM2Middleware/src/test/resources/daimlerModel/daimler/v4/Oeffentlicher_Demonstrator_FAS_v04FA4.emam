/* (c) https://github.com/MontiCore/monticore */
package daimler.v4;
// The C&C model Oeffentlicher_Demonstrator_FAS_v04 satisfies the view FA4.
  component Oeffentlicher_Demonstrator_FAS_v04FA4 {
    component DEMO_FAS_1 {
      component DEMO_FAS_2 {
        component Subsystem {
          component DEMO_FAS_3 {
            port
              in Double _Distance_Object_m,
              in Double _V_Obj_rel_kmh,
              out Double _BrakeForce_pc,
              in Double _V_Vehicle_kmh;

            component DEMO_FAS_Funktion {
              port
                in Double distance_Object_m1,
                in Double v_Obj_rel_kmh1,
                in Double distance_Object_m3,
                out Double brakeForce_pc,
                in Double v_Vehicle_kmh1,
                in Double v_Obj_rel_kmh2;

              component Distronic {
                port
                  in Double distance_Object_m,
                  in Double v_Obj_rel_kmh,
                  out Double brakeForce_Distronic_pc,
                  in Double v_Vehicle_ms;

                component Distronic_Enabled {
                  port
                    in Double distance_Object_m,
                    out Double brakeForce_Distronic_pc,
                    in Double v_Obj_rel_kmh,
                    in Double v_Vehicle_ms;

                  component RelOp_3 {
                    port
                      in Double in1,
                      out Boolean out1;

                  }
instance RelOp_3 relOp_3;
                  component Condition_2 {
                    port
                      in Boolean in1,
                      out Boolean out1;

                  }
instance Condition_2 condition_2;
                  component SwitchBlock_2 {
                    port
                      in Boolean condition,
                      out Double brakeForce_Distronic_pc,
                      in Double elseIn;

                  }
instance SwitchBlock_2 switchBlock_2;
                  component LookUpTable1_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance LookUpTable1_1 lookUpTable1_1;
                  component Mul1_2 {
                    port
                      in Double in2,
                      out Double brakeForce_Distronic_pc,
                      in Double in1;

                  }
instance Mul1_2 mul1_2;
                  component Mul_2 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance Mul_2 mul_2;
                  component Sum_1 {
                    port
                      in Double in2,
                      out Double out1;

                  }
instance Sum_1 sum_1;
                  component LookUpTable_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance LookUpTable_1 lookUpTable_1;
  connect mul_2.out1 -> sum_1.in2;
  connect v_Vehicle_ms -> mul_2.in1;
  connect lookUpTable1_1.out1 -> mul1_2.in2;
  connect lookUpTable_1.out1 -> mul1_2.in1;
  connect mul1_2.brakeForce_Distronic_pc -> switchBlock_2.elseIn;
  connect v_Obj_rel_kmh -> lookUpTable1_1.in1;
  connect sum_1.out1 -> lookUpTable_1.in1;
  connect condition_2.out1 -> switchBlock_2.condition;
  connect switchBlock_2.brakeForce_Distronic_pc ->   brakeForce_Distronic_pc;
  connect relOp_3.out1 -> condition_2.in1;
  connect distance_Object_m -> relOp_3.in1;
                }
instance Distronic_Enabled distronic_Enabled;
                component SwitchBlock_4 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock_4 switchBlock_4;
  connect distronic_Enabled.brakeForce_Distronic_pc -> switchBlock_4.ifIn;
  connect switchBlock_4.out1 -> brakeForce_Distronic_pc;
  connect distance_Object_m -> distronic_Enabled.distance_Object_m;
  connect v_Obj_rel_kmh -> distronic_Enabled.v_Obj_rel_kmh;
  connect v_Vehicle_ms -> distronic_Enabled.v_Vehicle_ms;
              }
instance Distronic distronic;
              component EmergencyBrake {
                port
                  in Double distance_Object_m,
                  out Double brakeForce_Emergency_pc,
                  in Double v_Obj_rel_ms,
                  in Double v_Vehicle_ms;

                component EmergencyBrake_Function {
                  port
                    in Double distance_Object_m,
                    out Double brakeForce_Emergency_pc,
                    in Double v_Obj_rel_ms,
                    in Double v_Vehicle_ms;

                  component Div1_1 {
                    port
                      in Double in1,
                      out Double out1,
                      in Double in2;

                  }
instance Div1_1 div1_1;
                  component Sum2 {
                    port
                      in Double in2,
                      out Double out1;

                  }
instance Sum2 sum2;
                  component Saturation2 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance Saturation2 saturation2;
                  component RelOp_5 {
                    port
                      in Double in1,
                      out Boolean acusti_warn_b;

                  }
instance RelOp_5 relOp_5;
                  component Condition_5 {
                    port
                      in Boolean in1,
                      out Boolean out1;

                  }
instance Condition_5 condition_5;
                  component SwitchBlock_5 {
                    port
                      in Boolean condition,
                      out Double out1;

                  }
instance SwitchBlock_5 switchBlock_5;
                  component MinMax_1 {
                    port
                      in Double in1,
                      out Double brakeForce_Emergency_pc,
                      in Double in2;

                  }
instance MinMax_1 minMax_1;
                  component Saturation1_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance Saturation1_1 saturation1_1;
                  component Div_1 {
                    port
                      in Double in1,
                      out Double out1;

                  }
instance Div_1 div_1;
                  component RelOp1_1 {
                    port
                      in Double in2,
                      out Boolean out1;

                  }
instance RelOp1_1 relOp1_1;
                  component Condition1_2 {
                    port
                      in Boolean in1,
                      out Boolean out1;

                  }
instance Condition1_2 condition1_2;
                  component SwitchBlock1_2 {
                    port
                      in Boolean condition,
                      out Double out1;

                  }
instance SwitchBlock1_2 switchBlock1_2;
  connect switchBlock_5.out1 -> minMax_1.in1;
  connect condition_5.out1 -> switchBlock_5.condition;
  connect switchBlock1_2.out1 -> minMax_1.in2;
  connect minMax_1.brakeForce_Emergency_pc ->   brakeForce_Emergency_pc;
  connect saturation1_1.out1 -> div1_1.in2;
  connect div1_1.out1 -> sum2.in2;
  connect distance_Object_m -> div1_1.in1;
  connect relOp_5.acusti_warn_b -> condition_5.in1;
  connect v_Obj_rel_ms -> saturation1_1.in1;
  connect saturation2.out1 -> relOp_5.in1;
  connect sum2.out1 -> saturation2.in1;
  connect div_1.out1 -> relOp1_1.in2;
  connect v_Vehicle_ms -> div_1.in1;
  connect condition1_2.out1 -> switchBlock1_2.condition;
  connect relOp1_1.out1 -> condition1_2.in1;
                }
instance EmergencyBrake_Function emergencyBrake_Function;
                component SwitchBlock_6 {
                  port
                    in Double ifIn,
                    out Double out1;

                }
instance SwitchBlock_6 switchBlock_6;
  connect emergencyBrake_Function.brakeForce_Emergency_pc -> switchBlock_6.ifIn;
  connect switchBlock_6.out1 -> brakeForce_Emergency_pc;
  connect distance_Object_m ->   emergencyBrake_Function.distance_Object_m;
  connect v_Obj_rel_ms -> emergencyBrake_Function.v_Obj_rel_ms;
  connect v_Vehicle_ms -> emergencyBrake_Function.v_Vehicle_ms;
              }
instance EmergencyBrake emergencyBrake;
              component VelocityControl {
                port
                  in Double brakeForce_Distronic_pc,
                  in Double brakeForce_Emergency_pc,
                  out Double brakeForce_pc;

                component MinMax2 {
                  port
                    in Double in4,
                    out Double brakeForce_pc,
                    in Double in5;

                }
instance MinMax2 minMax2;
  connect brakeForce_Distronic_pc -> minMax2.in4;
  connect minMax2.brakeForce_pc -> brakeForce_pc;
  connect brakeForce_Emergency_pc -> minMax2.in5;
              }
instance VelocityControl velocityControl;
              component FAS_Input {
                port
                  in Double distance_Object_m4,
                  out Double distance_Object_m1,
                  in Double v_Obj_rel_kmh2,
                  out Double v_Obj_rel_kmh,
                  in Double distance_Object_m6,
                  out Double distance_Object_m2,
                  in Double v_Vehicle_kmh1,
                  out Double v_Vehicle_ms1,
                  in Double v_Obj_rel_kmh3,
                  out Double v_Obj_rel_ms,
                  out Double v_Vehicle_ms2;

                component Div_2 {
                  port
                    in Double v_Vehicle_kmh,
                    out Double v_Vehicle_ms;

                }
instance Div_2 div_2;
                component Div1_2 {
                  port
                    in Double v_Obj_rel_kmh,
                    out Double v_Obj_rel_ms;

                }
instance Div1_2 div1_2;
  connect v_Obj_rel_kmh3 -> div1_2.v_Obj_rel_kmh;
  connect div1_2.v_Obj_rel_ms -> v_Obj_rel_ms;
  connect v_Vehicle_kmh1 -> div_2.v_Vehicle_kmh;
  connect div_2.v_Vehicle_ms -> v_Vehicle_ms1;
  connect div_2.v_Vehicle_ms -> v_Vehicle_ms2;
  connect distance_Object_m4 -> distance_Object_m1;
  connect v_Obj_rel_kmh2 -> v_Obj_rel_kmh;
  connect distance_Object_m6 -> distance_Object_m2;
              }
instance FAS_Input fAS_Input;
  connect distronic.brakeForce_Distronic_pc ->   velocityControl.brakeForce_Distronic_pc;
  connect emergencyBrake.brakeForce_Emergency_pc ->   velocityControl.brakeForce_Emergency_pc;
  connect velocityControl.brakeForce_pc -> brakeForce_pc;
  connect fAS_Input.distance_Object_m1 -> distronic.distance_Object_m;
  connect fAS_Input.v_Obj_rel_kmh -> distronic.v_Obj_rel_kmh;
  connect fAS_Input.v_Vehicle_ms1 -> distronic.v_Vehicle_ms;
  connect fAS_Input.distance_Object_m2 -> emergencyBrake.distance_Object_m;
  connect fAS_Input.v_Obj_rel_ms -> emergencyBrake.v_Obj_rel_ms;
  connect fAS_Input.v_Vehicle_ms2 -> emergencyBrake.v_Vehicle_ms;
  connect distance_Object_m1 -> fAS_Input.distance_Object_m4;
  connect v_Obj_rel_kmh1 -> fAS_Input.v_Obj_rel_kmh2;
  connect distance_Object_m3 -> fAS_Input.distance_Object_m6;
  connect v_Vehicle_kmh1 -> fAS_Input.v_Vehicle_kmh1;
  connect v_Obj_rel_kmh2 -> fAS_Input.v_Obj_rel_kmh3;
            }
instance DEMO_FAS_Funktion dEMO_FAS_Funktion;
            component DEMO_FAS_Input {
              port
                in Double distance_Object_mIn13,
                out Double distance_Object_m1,
                in Double v_Obj_rel_kmhIn12,
                out Double v_Obj_rel_kmh1,
                out Double distance_Object_m3,
                in Double v_Vehicle_b,
                out Double v_Vehicle_kmh1,
                out Double v_Obj_rel_kmh2;

  connect distance_Object_mIn13 ->   distance_Object_m1;
  connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh1;
  connect distance_Object_mIn13 ->   distance_Object_m3;
  connect v_Vehicle_b -> v_Vehicle_kmh1;
  connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh2;
            }
instance DEMO_FAS_Input dEMO_FAS_Input;
            component DEMO_FAS_Output {
              port
                in Double brakeForce_pc,
                out Double brakeForce_pcOut3;

  connect brakeForce_pc -> brakeForce_pcOut3;
            }
instance DEMO_FAS_Output dEMO_FAS_Output;
  connect dEMO_FAS_Input.distance_Object_m1 ->   dEMO_FAS_Funktion.distance_Object_m1;
  connect dEMO_FAS_Input.v_Obj_rel_kmh1 -> dEMO_FAS_Funktion.v_Obj_rel_kmh1;
  connect dEMO_FAS_Input.distance_Object_m3 ->   dEMO_FAS_Funktion.distance_Object_m3;
  connect dEMO_FAS_Input.v_Vehicle_kmh1 -> dEMO_FAS_Funktion.v_Vehicle_kmh1;
  connect dEMO_FAS_Input.v_Obj_rel_kmh2 -> dEMO_FAS_Funktion.v_Obj_rel_kmh2;
  connect dEMO_FAS_Funktion.brakeForce_pc -> dEMO_FAS_Output.brakeForce_pc;
  connect _Distance_Object_m -> dEMO_FAS_Input.distance_Object_mIn13;
  connect _V_Obj_rel_kmh -> dEMO_FAS_Input.v_Obj_rel_kmhIn12;
  connect _V_Vehicle_kmh -> dEMO_FAS_Input.v_Vehicle_b;
  connect dEMO_FAS_Output.brakeForce_pcOut3 -> _BrakeForce_pc;
          }
instance DEMO_FAS_3 dEMO_FAS_3;
        }
instance Subsystem subsystem;
      }
instance DEMO_FAS_2 dEMO_FAS_2;
    }
instance DEMO_FAS_1 dEMO_FAS_1;
  }












































































































