/* (c) https://github.com/MontiCore/monticore */
component Oeffentlicher_Demonstrator_FAS_v04{

  component DEMO_FAS_1{
    port out Q acceleration_pc;
    port in Q acceleration_pedal_pc;
    port out B acusti_warn_b;
    port out Q brakeForce_pc;
    port in Q brakeForce_pedal_pc;
    port out B cC_active_b;
    port out Q cCSetValue_kmh;
    port in B cruiseControl_b;
    port in Q distance_stat;
    port in Q leverDown_stat;
    port in Q leverUp_stat;
    port out B limiter_active_b;
    port in B limiter_b;
    port out Q limiterSetValue_kmh;
    port out B opti_warn_b;
    port in B parkingBrake_b;
    port in B sign_b;
    port in Q v_Obj_rel_kmh;
    port in Q v_Sign_kmh;
    port in Q v_Vehicle_kmh;

    component DEMO_FAS_2{
      port out Q _Acceleration_pc;
      port in Q _Acceleration_pedal_pc;
      port out B _Acusti_warn_b;
      port out Q _BrakeForce_pc;
      port in Q _BrakeForce_pedal_pc;
      port out B _CC_active_b;
      port out Q _CCSetValue_kmh;
      port in B _CruiseControl_b;
      port in Q _Distance_Object_m;
      port in Q _Distance_stat;
      port in Q _LeverDown_stat;
      port in Q _LeverUp_stat;
      port out B _Limiter_active_b;
      port in B _Limiter_b;
      port out Q _LimiterSetValue_kmh;
      port out B _Opti_warn_b;
      port in B _ParkingBrake_b;
      port in B _Sign_b;
      port in Q _V_Obj_rel_kmh;
      port in Q _V_Sign_kmh;
      port in Q _V_Vehicle_kmh;

      component Subsystem{
        port out Q _Acceleration_pc;
        port in Q _Acceleration_pedal_pc;
        port out B _Acusti_warn_b;
        port out Q _BrakeForce_pc;
        port in Q _BrakeForce_pedal_pc;
        port out B _CC_active_b;
        port out Q _CCSetValue_kmh;
        port in B _CruiseControl_b;
        port in Q _Distance_Object_m;
        port in Q _Distance_stat;
        port in Q _LeverDown_stat;
        port in Q _LeverUp_stat;
        port out B _Limiter_active_b;
        port in B _Limiter_b;
        port out Q _LimiterSetValue_kmh;
        port out B _Opti_warn_b;
        port in B _ParkingBrake_b;
        port in B _Sign_b;
        port in Q _V_Obj_rel_kmh;
        port in Q _V_Sign_kmh;
        port in Q _V_Vehicle_kmh;

        component DEMO_FAS_3{
          port out Q _Acceleration_pc;
          port in Q _Acceleration_pedal_pc;
          port out B _Acusti_warn_b;
          port out Q _BrakeForce_pc;
          port in Q _BrakeForce_pedal_pc;
          port out B _CC_active_b;
          port out Q _CCSetValue_kmh;
          port in B _CruiseControl_b;
          port in Q _Distance_Object_m;
          port in Q _Distance_stat;
          port in Q _LeverDown_stat;
          port in Q _LeverUp_stat;
          port out B _Limiter_active_b;
          port in B _Limiter_b;
          port out Q _LimiterSetValue_kmh;
          port out B _Opti_warn_b;
          port in B _ParkingBrake_b;
          port in B _Sign_b;
          port in Q _V_Obj_rel_kmh;
          port in Q _V_Sign_kmh;
          port in Q _V_Vehicle_kmh;

          component DEMO_FAS_Funktion{
            port out Q acceleration_pc;
            port in Q acceleration_pedal_pc;
            port out B acusti_warn_b;
            port out Q brakeForce_pc;
            port in Q brakeForce_pedal_pc;
            port out B cC_active_b;
            port out Q cCSetValue_kmh;
            port in B cruiseControl_b;
            port in Q distance_Object_m;
            port in Q distance_Object_m1;
            port in Q distance_Object_m2;
            port in Q distance_Object_m3;
            port in Q distance_stat;
            port in Q distance_stat1;
            port in Q leverDown_stat;
            port in Q leverUp_stat;
            port out B limiter_active_b;
            port in B limiter_b;
            port out Q limiterSetValue_kmh;
            port out B opti_warn_b;
            port in B parkingBrake_b;
            port in B sign_b;
            port in Q v_Obj_rel_kmh;
            port in Q v_Obj_rel_kmh1;
            port in Q v_Obj_rel_kmh2;
            port in Q v_Sign_kmh;
            port in Q v_Vehicle_kmh;
            port in Q v_Vehicle_kmh1;

            component BrakeAssistant{
              port in Q brakeForce_pedal_pc;
              port out Q brakeForceBoosted_pc;

              component Brake_Booster{
                port in Q brakeForce_pedal_pc;
                port out Q brakeForceBoosted_pc;

                component Constant_1{
                  port out Number out1;



                }
                component DEMO_FAS_BrakeBooster_Threshold{
                  port out Number out1;



                }
                component RelOp_1{
                  port in Number in1;
                  port in Number in2;
                  port out B out1;



                }
                component SwitchBlock_1{
                  port out Q brakeForceBoosted_pc;
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;



                }
                component VERSION_INFO_1{

                  component Copyright_1{



                  }

                  instance Copyright_1 copyright_1;

                }
                component Condition_1{
                  port in B in1;
                  port out B out1;



                }

                instance Constant_1 constant_1;
                instance DEMO_FAS_BrakeBooster_Threshold dEMO_FAS_BrakeBooster_Threshold;
                instance RelOp_1 relOp_1;
                instance SwitchBlock_1 switchBlock_1;
                instance VERSION_INFO_1 vERSION_INFO_1;
                instance Condition_1 condition_1;

                connect switchBlock_1.brakeForceBoosted_pc -> brakeForceBoosted_pc;
                connect condition_1.out1 -> switchBlock_1.condition;
                connect relOp_1.out1 -> condition_1.in1;
                connect constant_1.out1 -> switchBlock_1.ifIn;
                connect dEMO_FAS_BrakeBooster_Threshold.out1 -> relOp_1.in2;
                connect brakeForce_pedal_pc -> relOp_1.in1;
                connect brakeForce_pedal_pc -> switchBlock_1.elseIn;
              }
              component VERSION_INFO_2{

                component Copyright_2{



                }

                instance Copyright_2 copyright_2;

              }

              instance Brake_Booster brake_Booster;
              instance VERSION_INFO_2 vERSION_INFO_2;

              connect brake_Booster.brakeForceBoosted_pc -> brakeForceBoosted_pc;
              connect brakeForce_pedal_pc -> brake_Booster.brakeForce_pedal_pc;
            }
            component Distancewarner{
              port out B acusti_warn_b;
              port in Q distance_Object_m;
              port out B opti_warn_b;
              port in Number v_Vehicle_ms;

              component Distancewarner_Function{
                port out B acusti_warn_b;
                port in Q distance_Object_m;
                port out B opti_warn_b;
                port in Number v_Vehicle_ms;

                component DEMO_FAS_Accusti_Threshold_Time{
                  port out Number out1;



                }
                component DEMO_FAS_Opti_Threshold_Time{
                  port out Number out1;



                }
                component Mul_1{
                  port in Number in1;
                  port in Number in2;
                  port out Number opti_warn_b;



                }
                component Mul1_1{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component RelOp_2{
                  port in Number in1;
                  port in Number opti_warn_b;
                  port out B opti_warn_bOut1;



                }
                component RelOp2_1{
                  port out B acusti_warn_b;
                  port in Number in1;
                  port in Number in2;



                }
                component VERSION_INFO_3{

                  component Copyright_3{



                  }

                  instance Copyright_3 copyright_3;

                }

                instance DEMO_FAS_Accusti_Threshold_Time dEMO_FAS_Accusti_Threshold_Time;
                instance DEMO_FAS_Opti_Threshold_Time dEMO_FAS_Opti_Threshold_Time;
                instance Mul_1 mul_1;
                instance Mul1_1 mul1_1;
                instance RelOp_2 relOp_2;
                instance RelOp2_1 relOp2_1;
                instance VERSION_INFO_3 vERSION_INFO_3;

                connect relOp2_1.acusti_warn_b -> acusti_warn_b;
                connect relOp_2.opti_warn_bOut1 -> opti_warn_b;
                connect mul1_1.out1 -> relOp2_1.in2;
                connect dEMO_FAS_Accusti_Threshold_Time.out1 -> mul1_1.in2;
                connect distance_Object_m -> relOp_2.in1;
                connect distance_Object_m -> relOp2_1.in1;
                connect mul_1.opti_warn_b -> relOp_2.opti_warn_b;
                connect dEMO_FAS_Opti_Threshold_Time.out1 -> mul_1.in2;
                connect v_Vehicle_ms -> mul1_1.in1;
                connect v_Vehicle_ms -> mul_1.in1;
              }
              component VERSION_INFO_4{

                component Copyright_4{



                }

                instance Copyright_4 copyright_4;

              }

              instance Distancewarner_Function distancewarner_Function;
              instance VERSION_INFO_4 vERSION_INFO_4;

              connect distancewarner_Function.acusti_warn_b -> acusti_warn_b;
              connect distancewarner_Function.opti_warn_b -> opti_warn_b;
              connect distance_Object_m -> distancewarner_Function.distance_Object_m;
              connect v_Vehicle_ms -> distancewarner_Function.v_Vehicle_ms;
            }
            component Distronic{
              port out Q brakeForce_Distronic_pc;
              port in B cC_active_b;
              port out Q decelerator_pc;
              port in Q distance_Object_m;
              port in Q distance_stat;
              port in Number fTS_Abstand_soll_m;
              port in B fTS_active_b;
              port in Q v_Obj_rel_kmh;
              port in Number v_Vehicle_ms;

              component Constant_2{
                port out Number out1;



              }
              component Distronic_Deactive{
                port out Q brakeForce_Distronic_pc;
                port out Q decelerator_pc;

                component Constant_3{
                  port out Q brakeForce_Distronic_pc;



                }
                component Constant1_1{
                  port out Q decelerator_pc;



                }
                component VERSION_INFO_5{

                  component Copyright_5{



                  }

                  instance Copyright_5 copyright_5;

                }

                instance Constant_3 constant_3;
                instance Constant1_1 constant1_1;
                instance VERSION_INFO_5 vERSION_INFO_5;

                connect constant_3.brakeForce_Distronic_pc -> brakeForce_Distronic_pc;
                connect constant1_1.decelerator_pc -> decelerator_pc;
              }
              component Distronic_Disabled{
                port out Q brakeForce_Distronic_pc;
                port out Q decelerator_pc;

                component Constant_4{
                  port out Q brakeForce_Distronic_pc;



                }
                component Constant1_2{
                  port out Q decelerator_pc;



                }
                component VERSION_INFO_6{

                  component Copyright_6{



                  }

                  instance Copyright_6 copyright_6;

                }

                instance Constant_4 constant_4;
                instance Constant1_2 constant1_2;
                instance VERSION_INFO_6 vERSION_INFO_6;

                connect constant_4.brakeForce_Distronic_pc -> brakeForce_Distronic_pc;
                connect constant1_2.decelerator_pc -> decelerator_pc;
              }
              component Distronic_Enabled{
                port out Q brakeForce_Distronic_pc;
                port out Q decelerator_pc;
                port in Q distance_Object_m;
                port in Q distance_stat;
                port in Q v_Obj_rel_kmh;
                port in Number v_Vehicle_ms;

                component Constant_5{
                  port out Number out1;



                }
                component Constant1_3{
                  port out Number out1;



                }
                component DEMO_FAS_Distance_Treshold_Far{
                  port out Number out1;



                }
                component DEMO_FAS_Distance_Treshold_Med{
                  port out Number out1;



                }
                component DEMO_FAS_Distance_Treshold_Near{
                  port out Number out1;



                }
                component LookUpTable_1{
                  port in Number in1;
                  port out Number out1;



                }
                component LookUpTable1_1{
                  port in Number in1;
                  port out Number out1;



                }
                component LookUpTable2{
                  port out Q decelerator_pc;
                  port in Number in1;



                }
                component LookUpTable3{
                  port in Number in1;
                  port out Number out1;



                }
                component LookUpTable4{
                  port in Number in1;
                  port out Number out1;



                }
                component Mul_2{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component Mul1_2{
                  port out Q brakeForce_Distronic_pc;
                  port in Number in1;
                  port in Number in2;



                }
                component Mul2{
                  port in Q decelerator_pc;
                  port out Q decelerator_pcOut1;
                  port in Number in2;



                }
                component MultiportSwitch{
                  port in Number in1;
                  port in Number in2;
                  port in Number in3;
                  port in Number in4;
                  port out Number out1;



                }
                component RelOp_3{
                  port in Number in1;
                  port in Number in2;
                  port out B out1;



                }
                component Sum_1{
                  port in Number in1;
                  port in Number in2;
                  port in Number in3;
                  port out Number out1;



                }
                component SwitchBlock_2{
                  port out Q brakeForce_Distronic_pc;
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;



                }
                component VERSION_INFO_7{

                  component Copyright_7{



                  }

                  instance Copyright_7 copyright_7;

                }
                component Condition_2{
                  port in B in1;
                  port out B out1;



                }

                instance Constant_5 constant_5;
                instance Constant1_3 constant1_3;
                instance DEMO_FAS_Distance_Treshold_Far dEMO_FAS_Distance_Treshold_Far;
                instance DEMO_FAS_Distance_Treshold_Med dEMO_FAS_Distance_Treshold_Med;
                instance DEMO_FAS_Distance_Treshold_Near dEMO_FAS_Distance_Treshold_Near;
                instance LookUpTable_1 lookUpTable_1;
                instance LookUpTable1_1 lookUpTable1_1;
                instance LookUpTable2 lookUpTable2;
                instance LookUpTable3 lookUpTable3;
                instance LookUpTable4 lookUpTable4;
                instance Mul_2 mul_2;
                instance Mul1_2 mul1_2;
                instance Mul2 mul2;
                instance MultiportSwitch multiportSwitch;
                instance RelOp_3 relOp_3;
                instance Sum_1 sum_1;
                instance SwitchBlock_2 switchBlock_2;
                instance VERSION_INFO_7 vERSION_INFO_7;
                instance Condition_2 condition_2;

                connect switchBlock_2.brakeForce_Distronic_pc -> brakeForce_Distronic_pc;
                connect mul2.decelerator_pcOut1 -> decelerator_pc;
                connect condition_2.out1 -> switchBlock_2.condition;
                connect relOp_3.out1 -> condition_2.in1;
                connect lookUpTable4.out1 -> sum_1.in3;
                connect lookUpTable3.out1 -> mul2.in2;
                connect lookUpTable2.decelerator_pc -> mul2.decelerator_pc;
                connect constant1_3.out1 -> relOp_3.in2;
                connect constant_5.out1 -> switchBlock_2.ifIn;
                connect distance_Object_m -> sum_1.in1;
                connect distance_Object_m -> relOp_3.in1;
                connect lookUpTable_1.out1 -> mul1_2.in1;
                connect distance_stat -> multiportSwitch.in1;
                connect dEMO_FAS_Distance_Treshold_Far.out1 -> multiportSwitch.in2;
                connect dEMO_FAS_Distance_Treshold_Near.out1 -> multiportSwitch.in4;
                connect dEMO_FAS_Distance_Treshold_Med.out1 -> multiportSwitch.in3;
                connect multiportSwitch.out1 -> mul_2.in2;
                connect v_Vehicle_ms -> mul_2.in1;
                connect v_Obj_rel_kmh -> lookUpTable3.in1;
                connect v_Obj_rel_kmh -> lookUpTable1_1.in1;
                connect v_Obj_rel_kmh -> lookUpTable4.in1;
                connect mul_2.out1 -> sum_1.in2;
                connect sum_1.out1 -> lookUpTable2.in1;
                connect sum_1.out1 -> lookUpTable_1.in1;
                connect lookUpTable1_1.out1 -> mul1_2.in2;
                connect mul1_2.brakeForce_Distronic_pc -> switchBlock_2.elseIn;
              }
              component Distronic_FTS_Enabled{
                port out Q brakeForce_Distronic_pc;
                port out Q decelerator_pc;
                port in Q distance_Object_m;
                port in Number fTS_Abstand_soll_m;
                port in Q v_Obj_rel_kmh;

                component Constant_6{
                  port out Number out1;



                }
                component Constant1_4{
                  port out Number out1;



                }
                component Constant2_1{
                  port out Q decelerator_pc;



                }
                component LookUpTable_2{
                  port out Q brakeForce_Distronic_pc;
                  port in Number in1;



                }
                component LookUpTable1_2{
                  port in Number in1;
                  port out Number out1;



                }
                component Mul1_3{
                  port in Q brakeForce_Distronic_pc;
                  port out Q brakeForce_Distronic_pcOut1;
                  port in Number in2;



                }
                component RelOp_4{
                  port in Number in1;
                  port in Number in2;
                  port out B out1;



                }
                component Sum_2{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component SwitchBlock_3{
                  port out Q brakeForce_Distronic_pc;
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;



                }
                component VERSION_INFO_8{

                  component Copyright_8{



                  }

                  instance Copyright_8 copyright_8;

                }
                component Condition_3{
                  port in B in1;
                  port out B out1;



                }

                instance Constant_6 constant_6;
                instance Constant1_4 constant1_4;
                instance Constant2_1 constant2_1;
                instance LookUpTable_2 lookUpTable_2;
                instance LookUpTable1_2 lookUpTable1_2;
                instance Mul1_3 mul1_3;
                instance RelOp_4 relOp_4;
                instance Sum_2 sum_2;
                instance SwitchBlock_3 switchBlock_3;
                instance VERSION_INFO_8 vERSION_INFO_8;
                instance Condition_3 condition_3;

                connect switchBlock_3.brakeForce_Distronic_pc -> brakeForce_Distronic_pc;
                connect constant2_1.decelerator_pc -> decelerator_pc;
                connect condition_3.out1 -> switchBlock_3.condition;
                connect relOp_4.out1 -> condition_3.in1;
                connect constant1_4.out1 -> relOp_4.in2;
                connect mul1_3.brakeForce_Distronic_pcOut1 -> switchBlock_3.elseIn;
                connect constant_6.out1 -> switchBlock_3.ifIn;
                connect lookUpTable_2.brakeForce_Distronic_pc -> mul1_3.brakeForce_Distronic_pc;
                connect lookUpTable1_2.out1 -> mul1_3.in2;
                connect v_Obj_rel_kmh -> lookUpTable1_2.in1;
                connect fTS_Abstand_soll_m -> sum_2.in2;
                connect sum_2.out1 -> lookUpTable_2.in1;
                connect distance_Object_m -> sum_2.in1;
                connect distance_Object_m -> relOp_4.in1;
              }
              component VERSION_INFO_9{

                component Copyright_9{



                }

                instance Copyright_9 copyright_9;

              }
              component SwitchBlock_4{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition_4{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock1_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition1_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock2_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition2_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock3_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition3_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component UnitDelay_1{
                port in Number valueIn;
                port out Number valueOut;



              }
              component SwitchBlock4_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition4_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock5_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition5_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock6_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition6_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component SwitchBlock7_1{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition7_1{
                port in Number in1;
                port in B in2;
                port in B in3;
                port out B out1;



              }
              component UnitDelay1_1{
                port in Number valueIn;
                port out Number valueOut;



              }

              instance Constant_2 constant_2;
              instance Distronic_Deactive distronic_Deactive;
              instance Distronic_Disabled distronic_Disabled;
              instance Distronic_Enabled distronic_Enabled;
              instance Distronic_FTS_Enabled distronic_FTS_Enabled;
              instance VERSION_INFO_9 vERSION_INFO_9;
              instance SwitchBlock_4 switchBlock_4;
              instance Condition_4 condition_4;
              instance SwitchBlock1_1 switchBlock1_1;
              instance Condition1_1 condition1_1;
              instance SwitchBlock2_1 switchBlock2_1;
              instance Condition2_1 condition2_1;
              instance SwitchBlock3_1 switchBlock3_1;
              instance Condition3_1 condition3_1;
              instance UnitDelay_1 unitDelay_1;
              instance SwitchBlock4_1 switchBlock4_1;
              instance Condition4_1 condition4_1;
              instance SwitchBlock5_1 switchBlock5_1;
              instance Condition5_1 condition5_1;
              instance SwitchBlock6_1 switchBlock6_1;
              instance Condition6_1 condition6_1;
              instance SwitchBlock7_1 switchBlock7_1;
              instance Condition7_1 condition7_1;
              instance UnitDelay1_1 unitDelay1_1;

              connect switchBlock_4.out1 -> brakeForce_Distronic_pc;
              connect switchBlock4_1.out1 -> decelerator_pc;
              connect constant_2.out1 -> condition_4.in1;
              connect cC_active_b -> condition_4.in2;
              connect fTS_active_b -> condition_4.in3;
              connect condition_4.out1 -> switchBlock_4.condition;
              connect distronic_Enabled.brakeForce_Distronic_pc -> switchBlock_4.ifIn;
              connect constant_2.out1 -> condition1_1.in1;
              connect cC_active_b -> condition1_1.in2;
              connect fTS_active_b -> condition1_1.in3;
              connect condition1_1.out1 -> switchBlock1_1.condition;
              connect distronic_FTS_Enabled.brakeForce_Distronic_pc -> switchBlock1_1.ifIn;
              connect switchBlock1_1.out1 -> switchBlock_4.elseIn;
              connect constant_2.out1 -> condition2_1.in1;
              connect cC_active_b -> condition2_1.in2;
              connect fTS_active_b -> condition2_1.in3;
              connect condition2_1.out1 -> switchBlock2_1.condition;
              connect distronic_Disabled.brakeForce_Distronic_pc -> switchBlock2_1.ifIn;
              connect switchBlock2_1.out1 -> switchBlock1_1.elseIn;
              connect constant_2.out1 -> condition3_1.in1;
              connect cC_active_b -> condition3_1.in2;
              connect fTS_active_b -> condition3_1.in3;
              connect condition3_1.out1 -> switchBlock3_1.condition;
              connect distronic_Deactive.brakeForce_Distronic_pc -> switchBlock3_1.ifIn;
              connect switchBlock3_1.out1 -> switchBlock2_1.elseIn;
              connect switchBlock_4.out1 -> unitDelay_1.valueIn;
              connect unitDelay_1.valueOut -> switchBlock3_1.elseIn;
              connect constant_2.out1 -> condition4_1.in1;
              connect cC_active_b -> condition4_1.in2;
              connect fTS_active_b -> condition4_1.in3;
              connect condition4_1.out1 -> switchBlock4_1.condition;
              connect distronic_Enabled.decelerator_pc -> switchBlock4_1.ifIn;
              connect constant_2.out1 -> condition5_1.in1;
              connect cC_active_b -> condition5_1.in2;
              connect fTS_active_b -> condition5_1.in3;
              connect condition5_1.out1 -> switchBlock5_1.condition;
              connect distronic_FTS_Enabled.decelerator_pc -> switchBlock5_1.ifIn;
              connect switchBlock5_1.out1 -> switchBlock4_1.elseIn;
              connect constant_2.out1 -> condition6_1.in1;
              connect cC_active_b -> condition6_1.in2;
              connect fTS_active_b -> condition6_1.in3;
              connect condition6_1.out1 -> switchBlock6_1.condition;
              connect distronic_Disabled.decelerator_pc -> switchBlock6_1.ifIn;
              connect switchBlock6_1.out1 -> switchBlock5_1.elseIn;
              connect constant_2.out1 -> condition7_1.in1;
              connect cC_active_b -> condition7_1.in2;
              connect fTS_active_b -> condition7_1.in3;
              connect condition7_1.out1 -> switchBlock7_1.condition;
              connect distronic_Deactive.decelerator_pc -> switchBlock7_1.ifIn;
              connect switchBlock7_1.out1 -> switchBlock6_1.elseIn;
              connect switchBlock4_1.out1 -> unitDelay1_1.valueIn;
              connect unitDelay1_1.valueOut -> switchBlock7_1.elseIn;
              connect fTS_Abstand_soll_m -> distronic_FTS_Enabled.fTS_Abstand_soll_m;
              connect distance_stat -> distronic_Enabled.distance_stat;
              connect v_Vehicle_ms -> distronic_Enabled.v_Vehicle_ms;
              connect v_Obj_rel_kmh -> distronic_Enabled.v_Obj_rel_kmh;
              connect v_Obj_rel_kmh -> distronic_FTS_Enabled.v_Obj_rel_kmh;
              connect distance_Object_m -> distronic_Enabled.distance_Object_m;
              connect distance_Object_m -> distronic_FTS_Enabled.distance_Object_m;
            }
            component EmergencyBrake{
              port out B acusti_warn_b;
              port out Q brakeForce_Emergency_pc;
              port in Q distance_Object_m;
              port in Number v_Obj_rel_ms;
              port in Number v_Vehicle_ms;

              component Constant_7{
                port out Number out1;



              }
              component EmergencyBrake_Function{
                port out B acusti_warn_b;
                port out Q brakeForce_Emergency_pc;
                port in Q distance_Object_m;
                port in Number v_Obj_rel_ms;
                port in Number v_Vehicle_ms;

                component Constant1_5{
                  port out Number out1;



                }
                component Constant2_2{
                  port out Number out1;



                }
                component DEMO_FAS_Emerg_Brake_Force1{
                  port out Number out1;



                }
                component DEMO_FAS_Emerg_Brake_Force2{
                  port out Number out1;



                }
                component DEMO_FAS_Emerg_Brake_Time1{
                  port out Number out1;



                }
                component DEMO_FAS_Emerg_Brake_Time12{
                  port out Number out1;



                }
                component DEMO_FAS_Neg_Max_ms{
                  port out Number out1;



                }
                component Div_1{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component Div1_1{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component MinMax_1{
                  port out Q brakeForce_Emergency_pc;
                  port in Number in1;
                  port in Number in2;



                }
                component RelOp_5{
                  port out B acusti_warn_b;
                  port in Number in1;
                  port in Number in2;



                }
                component RelOp1_1{
                  port in Number in1;
                  port in Number in2;
                  port out B out1;



                }
                component Saturation1_1{
                  port in Number in1;
                  port out Number out1;



                }
                component Saturation2{
                  port in Number in1;
                  port out Number out1;



                }
                component Saturation3{
                  port in Number in1;
                  port out Number out1;



                }
                component Sum1_1{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component Sum2{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component SwitchBlock_5{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component SwitchBlock1_2{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component VERSION_INFO_10{

                  component Copyright_10{



                  }

                  instance Copyright_10 copyright_10;

                }
                component Condition_5{
                  port in B in1;
                  port out B out1;



                }
                component Condition1_2{
                  port in B in1;
                  port out B out1;



                }

                instance Constant1_5 constant1_5;
                instance Constant2_2 constant2_2;
                instance DEMO_FAS_Emerg_Brake_Force1 dEMO_FAS_Emerg_Brake_Force1;
                instance DEMO_FAS_Emerg_Brake_Force2 dEMO_FAS_Emerg_Brake_Force2;
                instance DEMO_FAS_Emerg_Brake_Time1 dEMO_FAS_Emerg_Brake_Time1;
                instance DEMO_FAS_Emerg_Brake_Time12 dEMO_FAS_Emerg_Brake_Time12;
                instance DEMO_FAS_Neg_Max_ms dEMO_FAS_Neg_Max_ms;
                instance Div_1 div_1;
                instance Div1_1 div1_1;
                instance MinMax_1 minMax_1;
                instance RelOp_5 relOp_5;
                instance RelOp1_1 relOp1_1;
                instance Saturation1_1 saturation1_1;
                instance Saturation2 saturation2;
                instance Saturation3 saturation3;
                instance Sum1_1 sum1_1;
                instance Sum2 sum2;
                instance SwitchBlock_5 switchBlock_5;
                instance SwitchBlock1_2 switchBlock1_2;
                instance VERSION_INFO_10 vERSION_INFO_10;
                instance Condition_5 condition_5;
                instance Condition1_2 condition1_2;

                connect relOp_5.acusti_warn_b -> acusti_warn_b;
                connect minMax_1.brakeForce_Emergency_pc -> brakeForce_Emergency_pc;
                connect condition1_2.out1 -> switchBlock1_2.condition;
                connect condition_5.out1 -> switchBlock_5.condition;
                connect relOp_5.acusti_warn_b -> condition_5.in1;
                connect relOp1_1.out1 -> condition1_2.in1;
                connect saturation3.out1 -> relOp1_1.in1;
                connect saturation2.out1 -> relOp_5.in1;
                connect saturation1_1.out1 -> div1_1.in2;
                connect div1_1.out1 -> sum2.in2;
                connect div1_1.out1 -> sum1_1.in2;
                connect switchBlock1_2.out1 -> minMax_1.in2;
                connect switchBlock_5.out1 -> minMax_1.in1;
                connect constant2_2.out1 -> switchBlock1_2.elseIn;
                connect constant1_5.out1 -> switchBlock_5.elseIn;
                connect dEMO_FAS_Emerg_Brake_Force2.out1 -> switchBlock1_2.ifIn;
                connect dEMO_FAS_Emerg_Brake_Force1.out1 -> switchBlock_5.ifIn;
                connect sum1_1.out1 -> saturation3.in1;
                connect sum2.out1 -> saturation2.in1;
                connect dEMO_FAS_Emerg_Brake_Time12.out1 -> sum1_1.in1;
                connect dEMO_FAS_Emerg_Brake_Time1.out1 -> sum2.in1;
                connect v_Obj_rel_ms -> saturation1_1.in1;
                connect distance_Object_m -> div1_1.in1;
                connect div_1.out1 -> relOp1_1.in2;
                connect div_1.out1 -> relOp_5.in2;
                connect dEMO_FAS_Neg_Max_ms.out1 -> div_1.in2;
                connect v_Vehicle_ms -> div_1.in1;
              }
              component VERSION_INFO_11{

                component Copyright_11{



                }

                instance Copyright_11 copyright_11;

              }
              component Condition_6{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock_6{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component UnitDelay_2{
                port in Number valueIn;
                port out Number valueOut;



              }
              component Condition1_3{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock1_3{
                port in B condition;
                port in B elseIn;
                port in B ifIn;
                port out B out1;



              }
              component UnitDelay1_2{
                port in B valueIn;
                port out B valueOut;



              }

              instance Constant_7 constant_7;
              instance EmergencyBrake_Function emergencyBrake_Function;
              instance VERSION_INFO_11 vERSION_INFO_11;
              instance Condition_6 condition_6;
              instance SwitchBlock_6 switchBlock_6;
              instance UnitDelay_2 unitDelay_2;
              instance Condition1_3 condition1_3;
              instance SwitchBlock1_3 switchBlock1_3;
              instance UnitDelay1_2 unitDelay1_2;

              connect switchBlock1_3.out1 -> acusti_warn_b;
              connect switchBlock_6.out1 -> brakeForce_Emergency_pc;
              connect constant_7.out1 -> condition_6.in1;
              connect condition_6.out1 -> switchBlock_6.condition;
              connect emergencyBrake_Function.brakeForce_Emergency_pc -> switchBlock_6.ifIn;
              connect switchBlock_6.out1 -> unitDelay_2.valueIn;
              connect unitDelay_2.valueOut -> switchBlock_6.elseIn;
              connect constant_7.out1 -> condition1_3.in1;
              connect condition1_3.out1 -> switchBlock1_3.condition;
              connect emergencyBrake_Function.acusti_warn_b -> switchBlock1_3.ifIn;
              connect switchBlock1_3.out1 -> unitDelay1_2.valueIn;
              connect unitDelay1_2.valueOut -> switchBlock1_3.elseIn;
              connect distance_Object_m -> emergencyBrake_Function.distance_Object_m;
              connect v_Vehicle_ms -> emergencyBrake_Function.v_Vehicle_ms;
              connect v_Obj_rel_ms -> emergencyBrake_Function.v_Obj_rel_ms;
            }
            component FAS_Input{
              port in Q acceleration_pedal_pc;
              port out Q acceleration_pedal_pc1;
              port out Q acceleration_pedal_pc2;
              port in Q brakeForce_pedal_pc;
              port out Q brakeForce_pedal_pc1;
              port out Q brakeForce_pedal_pc2;
              port out Q brakeForce_pedal_pc3;
              port in B cruiseControl_b;
              port out B cruiseControl_b1;
              port out Q distance_Object_m;
              port out Q distance_Object_m1;
              port out Q distance_Object_m2;
              port in Q distance_Object_m3;
              port in Q distance_Object_m4;
              port in Q distance_Object_m5;
              port in Q distance_Object_m6;
              port out Q distance_stat;
              port in Q distance_stat1;
              port in Q distance_stat2;
              port in Q leverDown_stat;
              port out Q leverDown_stat1;
              port out Q leverDown_stat2;
              port in Q leverUp_stat;
              port out Q leverUp_stat1;
              port out Q leverUp_stat2;
              port in B limiter_b;
              port out B limiter_b1;
              port out B limiter_b2;
              port in B parkingBrake_b;
              port out B parkingBrake_b1;
              port in B sign_b;
              port out B sign_b1;
              port out Q v_Obj_rel_kmh;
              port in Q v_Obj_rel_kmh1;
              port in Q v_Obj_rel_kmh2;
              port in Q v_Obj_rel_kmh3;
              port out Q v_Obj_rel_kmh4;
              port out Number v_Obj_rel_ms;
              port in Q v_Sign_kmh;
              port out Q v_Sign_kmh1;
              port in Q v_Vehicle_kmh;
              port in Q v_Vehicle_kmh1;
              port out Q v_Vehicle_kmh2;
              port out Q v_Vehicle_kmh3;
              port out Q v_Vehicle_kmh4;
              port out Q v_Vehicle_kmh5;
              port out Number v_Vehicle_ms;
              port out Number v_Vehicle_ms1;
              port out Number v_Vehicle_ms2;

              component Constant_8{
                port out Number out1;



              }
              component Constant1_6{
                port out Number out1;



              }
              component Div_2{
                port in Number in2;
                port in Q v_Vehicle_kmh;
                port out Number v_Vehicle_ms;



              }
              component Div1_2{
                port in Number in2;
                port in Q v_Obj_rel_kmh;
                port out Number v_Obj_rel_ms;



              }
              component VERSION_INFO_12{

                component Copyright_12{



                }

                instance Copyright_12 copyright_12;

              }

              instance Constant_8 constant_8;
              instance Constant1_6 constant1_6;
              instance Div_2 div_2;
              instance Div1_2 div1_2;
              instance VERSION_INFO_12 vERSION_INFO_12;

              connect acceleration_pedal_pc -> acceleration_pedal_pc1;
              connect acceleration_pedal_pc -> acceleration_pedal_pc2;
              connect brakeForce_pedal_pc -> brakeForce_pedal_pc1;
              connect brakeForce_pedal_pc -> brakeForce_pedal_pc2;
              connect brakeForce_pedal_pc -> brakeForce_pedal_pc3;
              connect cruiseControl_b -> cruiseControl_b1;
              connect distance_Object_m5 -> distance_Object_m;
              connect distance_Object_m4 -> distance_Object_m1;
              connect distance_Object_m6 -> distance_Object_m2;
              connect distance_stat1 -> distance_stat;
              connect leverDown_stat -> leverDown_stat1;
              connect leverDown_stat -> leverDown_stat2;
              connect leverUp_stat -> leverUp_stat1;
              connect leverUp_stat -> leverUp_stat2;
              connect limiter_b -> limiter_b1;
              connect limiter_b -> limiter_b2;
              connect parkingBrake_b -> parkingBrake_b1;
              connect sign_b -> sign_b1;
              connect v_Obj_rel_kmh2 -> v_Obj_rel_kmh;
              connect v_Obj_rel_kmh1 -> v_Obj_rel_kmh4;
              connect div1_2.v_Obj_rel_ms -> v_Obj_rel_ms;
              connect v_Sign_kmh -> v_Sign_kmh1;
              connect v_Vehicle_kmh -> v_Vehicle_kmh2;
              connect v_Vehicle_kmh -> v_Vehicle_kmh3;
              connect v_Vehicle_kmh -> v_Vehicle_kmh4;
              connect v_Vehicle_kmh -> v_Vehicle_kmh5;
              connect div_2.v_Vehicle_ms -> v_Vehicle_ms;
              connect div_2.v_Vehicle_ms -> v_Vehicle_ms1;
              connect div_2.v_Vehicle_ms -> v_Vehicle_ms2;
              connect v_Obj_rel_kmh3 -> div1_2.v_Obj_rel_kmh;
              connect v_Vehicle_kmh1 -> div_2.v_Vehicle_kmh;
              connect constant1_6.out1 -> div1_2.in2;
              connect constant_8.out1 -> div_2.in2;
            }
            component FollowToStop{
              port out Number fTS_Abstand_soll_m;
              port out B fTS_active_b;
              port in Q v_Obj_rel_kmh;
              port in Q v_Vehicle_kmh;

              component Constant_9{
                port out Number out1;



              }
              component FollowToStop_Function{
                port out Number fTS_Abstand_soll_m;
                port out B fTS_active_b;
                port in Q v_Obj_rel_kmh;
                port in Q v_Vehicle_kmh;

                component Chart{
                  port out Number abstand_soll_m;
                  port out B fTS_active_b;
                  port in Number v_Obj_kmh;

                  component Demux{
                    port in Number in1;
                    port out Number out1;



                  }
                  component SFunction{
                    port out Number abstand_soll_m;
                    port out B fTS_active_b;
                    port in Number in1;
                    port out Number out1;



                  }
                  component Terminator_1{
                    port in Number in1;



                  }

                  instance Demux demux;
                  instance SFunction sFunction;
                  instance Terminator_1 terminator_1;

                  connect sFunction.abstand_soll_m -> abstand_soll_m;
                  connect sFunction.fTS_active_b -> fTS_active_b;
                  connect sFunction.out1 -> demux.in1;
                  connect demux.out1 -> terminator_1.in1;
                  connect v_Obj_kmh -> sFunction.in1;
                }
                component Sum_3{
                  port in Number in1;
                  port in Number in2;
                  port out Number v_Obj_kmh;



                }
                component VERSION_INFO_13{

                  component Copyright_13{



                  }

                  instance Copyright_13 copyright_13;

                }

                instance Chart chart;
                instance Sum_3 sum_3;
                instance VERSION_INFO_13 vERSION_INFO_13;

                connect chart.abstand_soll_m -> fTS_Abstand_soll_m;
                connect chart.fTS_active_b -> fTS_active_b;
                connect sum_3.v_Obj_kmh -> chart.v_Obj_kmh;
                connect v_Vehicle_kmh -> sum_3.in1;
                connect v_Obj_rel_kmh -> sum_3.in2;
              }
              component VERSION_INFO_14{

                component Copyright_14{



                }

                instance Copyright_14 copyright_14;

              }
              component Condition_7{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock_7{
                port in B condition;
                port in B elseIn;
                port in B ifIn;
                port out B out1;



              }
              component UnitDelay_3{
                port in B valueIn;
                port out B valueOut;



              }
              component Condition1_4{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock1_4{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component UnitDelay1_3{
                port in Number valueIn;
                port out Number valueOut;



              }

              instance Constant_9 constant_9;
              instance FollowToStop_Function followToStop_Function;
              instance VERSION_INFO_14 vERSION_INFO_14;
              instance Condition_7 condition_7;
              instance SwitchBlock_7 switchBlock_7;
              instance UnitDelay_3 unitDelay_3;
              instance Condition1_4 condition1_4;
              instance SwitchBlock1_4 switchBlock1_4;
              instance UnitDelay1_3 unitDelay1_3;

              connect switchBlock1_4.out1 -> fTS_Abstand_soll_m;
              connect switchBlock_7.out1 -> fTS_active_b;
              connect constant_9.out1 -> condition_7.in1;
              connect condition_7.out1 -> switchBlock_7.condition;
              connect followToStop_Function.fTS_active_b -> switchBlock_7.ifIn;
              connect switchBlock_7.out1 -> unitDelay_3.valueIn;
              connect unitDelay_3.valueOut -> switchBlock_7.elseIn;
              connect constant_9.out1 -> condition1_4.in1;
              connect condition1_4.out1 -> switchBlock1_4.condition;
              connect followToStop_Function.fTS_Abstand_soll_m -> switchBlock1_4.ifIn;
              connect switchBlock1_4.out1 -> unitDelay1_3.valueIn;
              connect unitDelay1_3.valueOut -> switchBlock1_4.elseIn;
              connect v_Obj_rel_kmh -> followToStop_Function.v_Obj_rel_kmh;
              connect v_Vehicle_kmh -> followToStop_Function.v_Vehicle_kmh;
            }
            component Limiter{
              port in Q acceleration_pedal_pc;
              port in Number in1;
              port in Number in2;
              port in Number in3;
              port in Q leverDown_stat;
              port in Q leverUp_stat;
              port out B limiter_active_b;
              port in B limiter_b;
              port out Number out1;
              port out Number out2;
              port in B sign_b;
              port in Q v_Sign_kmh;
              port in Q v_Vehicle_kmh;
              port out Number vMax_kmh;

              component Constant_10{
                port out Number out1;



              }
              component Limiter_Function{
                port in Q acceleration_pedal_pc;
                port in Number in1;
                port in Number in2;
                port in Q leverDown_stat;
                port in Q leverUp_stat;
                port out B limiter_active_b;
                port in B limiter_b;
                port out Number out1;
                port out Number out2;
                port in B sign_b;
                port in Q v_Sign_kmh;
                port in Q v_Vehicle_kmh;
                port out Number vMax_kmh;

                component Constant_11{
                  port out B out1;



                }
                component Limiter_Enabled{
                  port in Q acceleration_pedal_pc;
                  port in Number in1;
                  port out B limiter_active_b;
                  port in B limiter_b;
                  port out Number vMax_kmh;

                  component EdgeRising_1{
                    port in B iV;
                    port in B r;
                    port in B u;
                    port out B y;

                    component LogOp_A_1{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogOp_N_1{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_U_1{
                      port in B in1;
                      port out B out1;



                    }
                    component Switch_R_1{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_8{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_A_1 logOp_A_1;
                    instance LogOp_N_1 logOp_N_1;
                    instance Memory_U_1 memory_U_1;
                    instance Switch_R_1 switch_R_1;
                    instance Condition_8 condition_8;

                    connect logOp_A_1.out1 -> y;
                    connect condition_8.out1 -> switch_R_1.condition;
                    connect r -> condition_8.in1;
                    connect logOp_N_1.out1 -> logOp_A_1.in2;
                    connect u -> logOp_A_1.in1;
                    connect u -> memory_U_1.in1;
                    connect switch_R_1.out1 -> logOp_N_1.in1;
                    connect memory_U_1.out1 -> switch_R_1.elseIn;
                    connect iV -> switch_R_1.ifIn;
                  }
                  component FalseBlock_1{
                    port out B y;

                    component Zero_1{
                      port out B out1;



                    }

                    instance Zero_1 zero_1;

                    connect zero_1.out1 -> y;
                  }
                  component Limiter_Active{
                    port in Number in1;
                    port out B limiter_active_b;
                    port out Number vMax_kmh;

                    component Gain_1{
                      port in Number vMax_kmh;
                      port out Number vMax_kmhOut1;



                    }
                    component LogicalOperator_1{
                      port out B limiter_active_b;
                      port in B limiter_enabled_b;
                      port in B limiter_enabled_bIn2;



                    }
                    component TrueBlock_1{
                      port out B y;

                      component One_1{
                        port out B out1;



                      }

                      instance One_1 one_1;

                      connect one_1.out1 -> y;
                    }
                    component VERSION_INFO_15{

                      component Copyright_15{



                      }

                      instance Copyright_15 copyright_15;

                    }

                    instance Gain_1 gain_1;
                    instance LogicalOperator_1 logicalOperator_1;
                    instance TrueBlock_1 trueBlock_1;
                    instance VERSION_INFO_15 vERSION_INFO_15;

                    connect logicalOperator_1.limiter_active_b -> limiter_active_b;
                    connect gain_1.vMax_kmhOut1 -> vMax_kmh;
                    connect in1 -> gain_1.vMax_kmh;
                    connect trueBlock_1.y -> logicalOperator_1.limiter_enabled_b;
                    connect trueBlock_1.y -> logicalOperator_1.limiter_enabled_bIn2;
                  }
                  component Limiter_Deactive{
                    port out B limiter_active_b;
                    port out Number vMax_kmh;

                    component Constant_12{
                      port out Number vMax_kmh;



                    }
                    component FalseBlock_2{
                      port out B y;

                      component Zero_2{
                        port out B out1;



                      }

                      instance Zero_2 zero_2;

                      connect zero_2.out1 -> y;
                    }
                    component Gain_2{
                      port in Number vMax_kmh;
                      port out Number vMax_kmhOut1;



                    }
                    component LogicalOperator_2{
                      port in B limiter_active_b;
                      port in B limiter_active_bIn2;
                      port out B limiter_active_bOut1;



                    }
                    component VERSION_INFO_16{

                      component Copyright_16{



                      }

                      instance Copyright_16 copyright_16;

                    }

                    instance Constant_12 constant_12;
                    instance FalseBlock_2 falseBlock_2;
                    instance Gain_2 gain_2;
                    instance LogicalOperator_2 logicalOperator_2;
                    instance VERSION_INFO_16 vERSION_INFO_16;

                    connect logicalOperator_2.limiter_active_bOut1 -> limiter_active_b;
                    connect gain_2.vMax_kmhOut1 -> vMax_kmh;
                    connect constant_12.vMax_kmh -> gain_2.vMax_kmh;
                    connect falseBlock_2.y -> logicalOperator_2.limiter_active_bIn2;
                    connect falseBlock_2.y -> logicalOperator_2.limiter_active_b;
                  }
                  component LogicalOperator1_1{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator2_1{
                    port in B in1;
                    port out B out1;



                  }
                  component RSFlipFlop_1{
                    port out B nOT_Q;
                    port out B q;
                    port in B r;
                    port in B s;

                    component LogOp_N_2{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_Q_1{
                      port in B in1;
                      port out B out1;



                    }
                    component One_S_1{
                      port out B out1;



                    }
                    component Switch_R_2{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Switch_S_1{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Zero_R_1{
                      port out B out1;



                    }
                    component Condition_9{
                      port in B in1;
                      port out B out1;



                    }
                    component Condition1_5{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_N_2 logOp_N_2;
                    instance Memory_Q_1 memory_Q_1;
                    instance One_S_1 one_S_1;
                    instance Switch_R_2 switch_R_2;
                    instance Switch_S_1 switch_S_1;
                    instance Zero_R_1 zero_R_1;
                    instance Condition_9 condition_9;
                    instance Condition1_5 condition1_5;

                    connect logOp_N_2.out1 -> nOT_Q;
                    connect switch_R_2.out1 -> q;
                    connect condition_9.out1 -> switch_S_1.condition;
                    connect condition1_5.out1 -> switch_R_2.condition;
                    connect s -> condition_9.in1;
                    connect r -> condition1_5.in1;
                    connect memory_Q_1.out1 -> switch_S_1.elseIn;
                    connect switch_S_1.out1 -> switch_R_2.elseIn;
                    connect one_S_1.out1 -> switch_S_1.ifIn;
                    connect switch_R_2.out1 -> memory_Q_1.in1;
                    connect switch_R_2.out1 -> logOp_N_2.in1;
                    connect zero_R_1.out1 -> switch_R_2.ifIn;
                  }
                  component Terminator_2{
                    port in B in1;



                  }
                  component VERSION_INFO_17{

                    component Copyright_17{



                    }

                    instance Copyright_17 copyright_17;

                  }
                  component SwitchBlock_8{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition_10{
                    port in Number in1;
                    port in B in2;
                    port out B out1;



                  }
                  component SwitchBlock1_5{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition1_6{
                    port in Number in1;
                    port in B in2;
                    port out B out1;



                  }
                  component UnitDelay_4{
                    port in Number valueIn;
                    port out Number valueOut;



                  }
                  component SwitchBlock2_2{
                    port in B condition;
                    port in B elseIn;
                    port in B ifIn;
                    port out B out1;



                  }
                  component Condition2_2{
                    port in Number in1;
                    port in B in2;
                    port out B out1;



                  }
                  component SwitchBlock3_2{
                    port in B condition;
                    port in B elseIn;
                    port in B ifIn;
                    port out B out1;



                  }
                  component Condition3_2{
                    port in Number in1;
                    port in B in2;
                    port out B out1;



                  }
                  component UnitDelay1_4{
                    port in B valueIn;
                    port out B valueOut;



                  }

                  instance EdgeRising_1 edgeRising_1;
                  instance FalseBlock_1 falseBlock_1;
                  instance Limiter_Active limiter_Active;
                  instance Limiter_Deactive limiter_Deactive;
                  instance LogicalOperator1_1 logicalOperator1_1;
                  instance LogicalOperator2_1 logicalOperator2_1;
                  instance RSFlipFlop_1 rSFlipFlop_1;
                  instance Terminator_2 terminator_2;
                  instance VERSION_INFO_17 vERSION_INFO_17;
                  instance SwitchBlock_8 switchBlock_8;
                  instance Condition_10 condition_10;
                  instance SwitchBlock1_5 switchBlock1_5;
                  instance Condition1_6 condition1_6;
                  instance UnitDelay_4 unitDelay_4;
                  instance SwitchBlock2_2 switchBlock2_2;
                  instance Condition2_2 condition2_2;
                  instance SwitchBlock3_2 switchBlock3_2;
                  instance Condition3_2 condition3_2;
                  instance UnitDelay1_4 unitDelay1_4;

                  connect switchBlock2_2.out1 -> limiter_active_b;
                  connect switchBlock_8.out1 -> vMax_kmh;
                  connect in1 -> limiter_Active.in1;
                  connect acceleration_pedal_pc -> condition_10.in1;
                  connect rSFlipFlop_1.q -> condition_10.in2;
                  connect condition_10.out1 -> switchBlock_8.condition;
                  connect limiter_Active.vMax_kmh -> switchBlock_8.ifIn;
                  connect acceleration_pedal_pc -> condition1_6.in1;
                  connect rSFlipFlop_1.q -> condition1_6.in2;
                  connect condition1_6.out1 -> switchBlock1_5.condition;
                  connect limiter_Deactive.vMax_kmh -> switchBlock1_5.ifIn;
                  connect switchBlock1_5.out1 -> switchBlock_8.elseIn;
                  connect switchBlock_8.out1 -> unitDelay_4.valueIn;
                  connect unitDelay_4.valueOut -> switchBlock1_5.elseIn;
                  connect acceleration_pedal_pc -> condition2_2.in1;
                  connect rSFlipFlop_1.q -> condition2_2.in2;
                  connect condition2_2.out1 -> switchBlock2_2.condition;
                  connect limiter_Active.limiter_active_b -> switchBlock2_2.ifIn;
                  connect acceleration_pedal_pc -> condition3_2.in1;
                  connect rSFlipFlop_1.q -> condition3_2.in2;
                  connect condition3_2.out1 -> switchBlock3_2.condition;
                  connect limiter_Deactive.limiter_active_b -> switchBlock3_2.ifIn;
                  connect switchBlock3_2.out1 -> switchBlock2_2.elseIn;
                  connect switchBlock2_2.out1 -> unitDelay1_4.valueIn;
                  connect unitDelay1_4.valueOut -> switchBlock3_2.elseIn;
                  connect logicalOperator1_1.out1 -> edgeRising_1.r;
                  connect falseBlock_1.y -> edgeRising_1.iV;
                  connect edgeRising_1.y -> rSFlipFlop_1.s;
                  connect limiter_b -> edgeRising_1.u;
                  connect limiter_b -> logicalOperator1_1.in1;
                  connect limiter_b -> logicalOperator2_1.in1;
                  connect rSFlipFlop_1.nOT_Q -> terminator_2.in1;
                  connect logicalOperator2_1.out1 -> rSFlipFlop_1.r;
                }
                component Limiter_InitialSetValue{
                  port out Number out1;
                  port out Number out2;
                  port out Number out3;
                  port out Number out4;
                  port out Number out5;
                  port out Number out6;
                  port in Q v_Vehicle_kmh;

                  component VERSION_INFO_18{

                    component Copyright_18{



                    }

                    instance Copyright_18 copyright_18;

                  }

                  instance VERSION_INFO_18 vERSION_INFO_18;

                  connect v_Vehicle_kmh -> out1;
                  connect v_Vehicle_kmh -> out2;
                  connect v_Vehicle_kmh -> out3;
                  connect v_Vehicle_kmh -> out4;
                  connect v_Vehicle_kmh -> out5;
                  connect v_Vehicle_kmh -> out6;
                }
                component Limiter_SetValue{
                  port in Number in1;
                  port in Number in2;
                  port in Number in3;
                  port in Number in4;
                  port in Q leverDown_stat;
                  port in Q leverUp_stat;
                  port out Number out1;
                  port out Number out2;

                  component Constant1_7{
                    port out Number out1;



                  }
                  component Constant3_1{
                    port out Number out1;



                  }
                  component RelOp1_2{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component RelOp3_1{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component VERSION_INFO_19{

                    component Copyright_19{



                    }

                    instance Copyright_19 copyright_19;

                  }
                  component V_LimSetValueMinus{
                    port out Number out1;
                    port out Number out2;
                    port in Number v_LimiterSetValue;

                    component Parameter_1{
                      port out Number out1;



                    }
                    component Sum_4{
                      port in Number in1;
                      port in Number in2;
                      port out Number out1;



                    }
                    component VERSION_INFO_20{

                      component Copyright_20{



                      }

                      instance Copyright_20 copyright_20;

                    }

                    instance Parameter_1 parameter_1;
                    instance Sum_4 sum_4;
                    instance VERSION_INFO_20 vERSION_INFO_20;

                    connect sum_4.out1 -> out1;
                    connect sum_4.out1 -> out2;
                    connect parameter_1.out1 -> sum_4.in2;
                    connect v_LimiterSetValue -> sum_4.in1;
                  }
                  component V_LimSetValuePlus{
                    port out Number out1;
                    port out Number out2;
                    port in Number v_LimiterSetValue;

                    component Parameter_2{
                      port out Number out1;



                    }
                    component Sum_5{
                      port in Number in1;
                      port in Number in2;
                      port out Number out1;



                    }
                    component VERSION_INFO_21{

                      component Copyright_21{



                      }

                      instance Copyright_21 copyright_21;

                    }

                    instance Parameter_2 parameter_2;
                    instance Sum_5 sum_5;
                    instance VERSION_INFO_21 vERSION_INFO_21;

                    connect sum_5.out1 -> out1;
                    connect sum_5.out1 -> out2;
                    connect parameter_2.out1 -> sum_5.in2;
                    connect v_LimiterSetValue -> sum_5.in1;
                  }
                  component RisingEdgeDetector_1{
                    port in B in1;
                    port out B out1;

                    component CompareToZero_1{
                      port in B u;
                      port out B y;

                      component Compare_1{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_13{
                        port out Number out1;



                      }

                      instance Compare_1 compare_1;
                      instance Constant_13 constant_13;

                      connect compare_1.out1 -> y;
                      connect u -> compare_1.in1;
                      connect constant_13.out1 -> compare_1.in2;
                    }
                    component CompareToZero1_1{
                      port in B u;
                      port out B y;

                      component Compare_2{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_14{
                        port out Number out1;



                      }

                      instance Compare_2 compare_2;
                      instance Constant_14 constant_14;

                      connect compare_2.out1 -> y;
                      connect u -> compare_2.in1;
                      connect constant_14.out1 -> compare_2.in2;
                    }
                    component CompareToZero2_1{
                      port in B u;
                      port out B y;

                      component Compare_3{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_15{
                        port out Number out1;



                      }

                      instance Compare_3 compare_3;
                      instance Constant_15 constant_15;

                      connect compare_3.out1 -> y;
                      connect u -> compare_3.in1;
                      connect constant_15.out1 -> compare_3.in2;
                    }
                    component CompareToZero3_1{
                      port in B u;
                      port out B y;

                      component Compare_4{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_16{
                        port out Number out1;



                      }

                      instance Compare_4 compare_4;
                      instance Constant_16 constant_16;

                      connect compare_4.out1 -> y;
                      connect u -> compare_4.in1;
                      connect constant_16.out1 -> compare_4.in2;
                    }
                    component CompareToZero4_1{
                      port in B u;
                      port out B y;

                      component Compare_5{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_17{
                        port out Number out1;



                      }

                      instance Compare_5 compare_5;
                      instance Constant_17 constant_17;

                      connect compare_5.out1 -> y;
                      connect u -> compare_5.in1;
                      connect constant_17.out1 -> compare_5.in2;
                    }
                    component Constant_18{
                      port out Number out1;



                    }
                    component Constant1_8{
                      port out B out1;



                    }
                    component LogicalOperator_3{
                      port in B in1;
                      port in B in2;
                      port in B in3;
                      port out B out1;



                    }
                    component LogicalOperator1_2{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogicalOperator2_2{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component Memory_1{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory1_1{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory2_1{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock_9{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_11{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CompareToZero_1 compareToZero_1;
                    instance CompareToZero1_1 compareToZero1_1;
                    instance CompareToZero2_1 compareToZero2_1;
                    instance CompareToZero3_1 compareToZero3_1;
                    instance CompareToZero4_1 compareToZero4_1;
                    instance Constant_18 constant_18;
                    instance Constant1_8 constant1_8;
                    instance LogicalOperator_3 logicalOperator_3;
                    instance LogicalOperator1_2 logicalOperator1_2;
                    instance LogicalOperator2_2 logicalOperator2_2;
                    instance Memory_1 memory_1;
                    instance Memory1_1 memory1_1;
                    instance Memory2_1 memory2_1;
                    instance SwitchBlock_9 switchBlock_9;
                    instance Condition_11 condition_11;

                    connect switchBlock_9.out1 -> out1;
                    connect compareToZero4_1.y -> logicalOperator_3.in3;
                    connect memory2_1.out1 -> compareToZero4_1.u;
                    connect logicalOperator_3.out1 -> logicalOperator2_2.in1;
                    connect constant1_8.out1 -> switchBlock_9.elseIn;
                    connect constant_18.out1 -> memory1_1.in1;
                    connect condition_11.out1 -> switchBlock_9.condition;
                    connect logicalOperator2_2.out1 -> switchBlock_9.ifIn;
                    connect logicalOperator2_2.out1 -> memory2_1.in1;
                    connect logicalOperator1_2.out1 -> logicalOperator2_2.in2;
                    connect compareToZero3_1.y -> logicalOperator1_2.in2;
                    connect compareToZero2_1.y -> logicalOperator1_2.in1;
                    connect compareToZero1_1.y -> logicalOperator_3.in2;
                    connect compareToZero_1.y -> logicalOperator_3.in1;
                    connect memory_1.out1 -> compareToZero_1.u;
                    connect memory_1.out1 -> compareToZero2_1.u;
                    connect in1 -> memory_1.in1;
                    connect in1 -> compareToZero1_1.u;
                    connect in1 -> compareToZero3_1.u;
                    connect memory1_1.out1 -> condition_11.in1;
                  }
                  component RisingEdgeDetector1_1{
                    port in B in1;
                    port out B out1;

                    component CompareToZero_2{
                      port in B u;
                      port out B y;

                      component Compare_6{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_19{
                        port out Number out1;



                      }

                      instance Compare_6 compare_6;
                      instance Constant_19 constant_19;

                      connect compare_6.out1 -> y;
                      connect u -> compare_6.in1;
                      connect constant_19.out1 -> compare_6.in2;
                    }
                    component CompareToZero1_2{
                      port in B u;
                      port out B y;

                      component Compare_7{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_20{
                        port out Number out1;



                      }

                      instance Compare_7 compare_7;
                      instance Constant_20 constant_20;

                      connect compare_7.out1 -> y;
                      connect u -> compare_7.in1;
                      connect constant_20.out1 -> compare_7.in2;
                    }
                    component CompareToZero2_2{
                      port in B u;
                      port out B y;

                      component Compare_8{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_21{
                        port out Number out1;



                      }

                      instance Compare_8 compare_8;
                      instance Constant_21 constant_21;

                      connect compare_8.out1 -> y;
                      connect u -> compare_8.in1;
                      connect constant_21.out1 -> compare_8.in2;
                    }
                    component CompareToZero3_2{
                      port in B u;
                      port out B y;

                      component Compare_9{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_22{
                        port out Number out1;



                      }

                      instance Compare_9 compare_9;
                      instance Constant_22 constant_22;

                      connect compare_9.out1 -> y;
                      connect u -> compare_9.in1;
                      connect constant_22.out1 -> compare_9.in2;
                    }
                    component CompareToZero4_2{
                      port in B u;
                      port out B y;

                      component Compare_10{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_23{
                        port out Number out1;



                      }

                      instance Compare_10 compare_10;
                      instance Constant_23 constant_23;

                      connect compare_10.out1 -> y;
                      connect u -> compare_10.in1;
                      connect constant_23.out1 -> compare_10.in2;
                    }
                    component Constant_24{
                      port out Number out1;



                    }
                    component Constant1_9{
                      port out B out1;



                    }
                    component LogicalOperator_4{
                      port in B in1;
                      port in B in2;
                      port in B in3;
                      port out B out1;



                    }
                    component LogicalOperator1_3{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogicalOperator2_3{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component Memory_2{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory1_2{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory2_2{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock_10{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_12{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CompareToZero_2 compareToZero_2;
                    instance CompareToZero1_2 compareToZero1_2;
                    instance CompareToZero2_2 compareToZero2_2;
                    instance CompareToZero3_2 compareToZero3_2;
                    instance CompareToZero4_2 compareToZero4_2;
                    instance Constant_24 constant_24;
                    instance Constant1_9 constant1_9;
                    instance LogicalOperator_4 logicalOperator_4;
                    instance LogicalOperator1_3 logicalOperator1_3;
                    instance LogicalOperator2_3 logicalOperator2_3;
                    instance Memory_2 memory_2;
                    instance Memory1_2 memory1_2;
                    instance Memory2_2 memory2_2;
                    instance SwitchBlock_10 switchBlock_10;
                    instance Condition_12 condition_12;

                    connect switchBlock_10.out1 -> out1;
                    connect compareToZero4_2.y -> logicalOperator_4.in3;
                    connect memory2_2.out1 -> compareToZero4_2.u;
                    connect logicalOperator_4.out1 -> logicalOperator2_3.in1;
                    connect constant1_9.out1 -> switchBlock_10.elseIn;
                    connect constant_24.out1 -> memory1_2.in1;
                    connect condition_12.out1 -> switchBlock_10.condition;
                    connect logicalOperator2_3.out1 -> switchBlock_10.ifIn;
                    connect logicalOperator2_3.out1 -> memory2_2.in1;
                    connect logicalOperator1_3.out1 -> logicalOperator2_3.in2;
                    connect compareToZero3_2.y -> logicalOperator1_3.in2;
                    connect compareToZero2_2.y -> logicalOperator1_3.in1;
                    connect compareToZero1_2.y -> logicalOperator_4.in2;
                    connect compareToZero_2.y -> logicalOperator_4.in1;
                    connect memory_2.out1 -> compareToZero_2.u;
                    connect memory_2.out1 -> compareToZero2_2.u;
                    connect in1 -> memory_2.in1;
                    connect in1 -> compareToZero1_2.u;
                    connect in1 -> compareToZero3_2.u;
                    connect memory1_2.out1 -> condition_12.in1;
                  }
                  component SwitchBlock_11{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition_13{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock1_6{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition1_7{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock2_3{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition2_3{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock3_3{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition3_3{
                    port in B in1;
                    port out B out1;



                  }

                  instance Constant1_7 constant1_7;
                  instance Constant3_1 constant3_1;
                  instance RelOp1_2 relOp1_2;
                  instance RelOp3_1 relOp3_1;
                  instance VERSION_INFO_19 vERSION_INFO_19;
                  instance V_LimSetValueMinus v_LimSetValueMinus;
                  instance V_LimSetValuePlus v_LimSetValuePlus;
                  instance RisingEdgeDetector_1 risingEdgeDetector_1;
                  instance RisingEdgeDetector1_1 risingEdgeDetector1_1;
                  instance SwitchBlock_11 switchBlock_11;
                  instance Condition_13 condition_13;
                  instance SwitchBlock1_6 switchBlock1_6;
                  instance Condition1_7 condition1_7;
                  instance SwitchBlock2_3 switchBlock2_3;
                  instance Condition2_3 condition2_3;
                  instance SwitchBlock3_3 switchBlock3_3;
                  instance Condition3_3 condition3_3;

                  connect switchBlock_11.out1 -> out1;
                  connect switchBlock2_3.out1 -> out2;
                  connect in2 -> v_LimSetValueMinus.v_LimiterSetValue;
                  connect in1 -> v_LimSetValuePlus.v_LimiterSetValue;
                  connect relOp3_1.out1 -> risingEdgeDetector_1.in1;
                  connect relOp1_2.out1 -> risingEdgeDetector1_1.in1;
                  connect risingEdgeDetector_1.out1 -> condition_13.in1;
                  connect v_LimSetValuePlus.out1 -> switchBlock_11.ifIn;
                  connect condition_13.out1 -> switchBlock_11.condition;
                  connect risingEdgeDetector1_1.out1 -> condition1_7.in1;
                  connect v_LimSetValueMinus.out1 -> switchBlock1_6.ifIn;
                  connect condition1_7.out1 -> switchBlock1_6.condition;
                  connect in3 -> switchBlock1_6.elseIn;
                  connect switchBlock1_6.out1 -> switchBlock_11.elseIn;
                  connect risingEdgeDetector_1.out1 -> condition2_3.in1;
                  connect v_LimSetValuePlus.out2 -> switchBlock2_3.ifIn;
                  connect condition2_3.out1 -> switchBlock2_3.condition;
                  connect risingEdgeDetector1_1.out1 -> condition3_3.in1;
                  connect v_LimSetValueMinus.out2 -> switchBlock3_3.ifIn;
                  connect condition3_3.out1 -> switchBlock3_3.condition;
                  connect in4 -> switchBlock3_3.elseIn;
                  connect switchBlock3_3.out1 -> switchBlock2_3.elseIn;
                  connect constant1_7.out1 -> relOp1_2.in2;
                  connect constant3_1.out1 -> relOp3_1.in2;
                  connect leverUp_stat -> relOp3_1.in1;
                  connect leverDown_stat -> relOp1_2.in1;
                }
                component Limiter_StartUpSetValue{
                  port out Number out1;

                  component Constant_25{
                    port out Number out1;



                  }
                  component VERSION_INFO_22{

                    component Copyright_22{



                    }

                    instance Copyright_22 copyright_22;

                  }

                  instance Constant_25 constant_25;
                  instance VERSION_INFO_22 vERSION_INFO_22;

                  connect constant_25.out1 -> out1;
                }
                component LogicalOperator_5{
                  port in B in1;
                  port in B in2;
                  port out B out1;



                }
                component MinMax_2{
                  port in Number in1;
                  port in Number in2;
                  port out Number out1;



                }
                component SwitchBlock_12{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number vMax_kmh;



                }
                component SysInit_1{
                  port out Number y;

                  component Memory_Init_1{
                    port in Number in1;
                    port out Number out1;



                  }
                  component Zero_Init_1{
                    port out Number out1;



                  }

                  instance Memory_Init_1 memory_Init_1;
                  instance Zero_Init_1 zero_Init_1;

                  connect memory_Init_1.out1 -> y;
                  connect zero_Init_1.out1 -> memory_Init_1.in1;
                }
                component VERSION_INFO_23{

                  component Copyright_23{



                  }

                  instance Copyright_23 copyright_23;

                }
                component RisingEdgeDetector_2{
                  port in B in1;
                  port out B out1;

                  component CompareToZero_3{
                    port in B u;
                    port out B y;

                    component Compare_11{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_26{
                      port out Number out1;



                    }

                    instance Compare_11 compare_11;
                    instance Constant_26 constant_26;

                    connect compare_11.out1 -> y;
                    connect u -> compare_11.in1;
                    connect constant_26.out1 -> compare_11.in2;
                  }
                  component CompareToZero1_3{
                    port in B u;
                    port out B y;

                    component Compare_12{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_27{
                      port out Number out1;



                    }

                    instance Compare_12 compare_12;
                    instance Constant_27 constant_27;

                    connect compare_12.out1 -> y;
                    connect u -> compare_12.in1;
                    connect constant_27.out1 -> compare_12.in2;
                  }
                  component CompareToZero2_3{
                    port in B u;
                    port out B y;

                    component Compare_13{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_28{
                      port out Number out1;



                    }

                    instance Compare_13 compare_13;
                    instance Constant_28 constant_28;

                    connect compare_13.out1 -> y;
                    connect u -> compare_13.in1;
                    connect constant_28.out1 -> compare_13.in2;
                  }
                  component CompareToZero3_3{
                    port in B u;
                    port out B y;

                    component Compare_14{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_29{
                      port out Number out1;



                    }

                    instance Compare_14 compare_14;
                    instance Constant_29 constant_29;

                    connect compare_14.out1 -> y;
                    connect u -> compare_14.in1;
                    connect constant_29.out1 -> compare_14.in2;
                  }
                  component CompareToZero4_3{
                    port in B u;
                    port out B y;

                    component Compare_15{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_30{
                      port out Number out1;



                    }

                    instance Compare_15 compare_15;
                    instance Constant_30 constant_30;

                    connect compare_15.out1 -> y;
                    connect u -> compare_15.in1;
                    connect constant_30.out1 -> compare_15.in2;
                  }
                  component Constant_31{
                    port out Number out1;



                  }
                  component Constant1_10{
                    port out B out1;



                  }
                  component LogicalOperator_6{
                    port in B in1;
                    port in B in2;
                    port in B in3;
                    port out B out1;



                  }
                  component LogicalOperator1_4{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator2_4{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component Memory_3{
                    port in B in1;
                    port out B out1;



                  }
                  component Memory1_3{
                    port in Number in1;
                    port out Number out1;



                  }
                  component Memory2_3{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock_13{
                    port in B condition;
                    port in B elseIn;
                    port in B ifIn;
                    port out B out1;



                  }
                  component Condition_14{
                    port in Number in1;
                    port out B out1;



                  }

                  instance CompareToZero_3 compareToZero_3;
                  instance CompareToZero1_3 compareToZero1_3;
                  instance CompareToZero2_3 compareToZero2_3;
                  instance CompareToZero3_3 compareToZero3_3;
                  instance CompareToZero4_3 compareToZero4_3;
                  instance Constant_31 constant_31;
                  instance Constant1_10 constant1_10;
                  instance LogicalOperator_6 logicalOperator_6;
                  instance LogicalOperator1_4 logicalOperator1_4;
                  instance LogicalOperator2_4 logicalOperator2_4;
                  instance Memory_3 memory_3;
                  instance Memory1_3 memory1_3;
                  instance Memory2_3 memory2_3;
                  instance SwitchBlock_13 switchBlock_13;
                  instance Condition_14 condition_14;

                  connect switchBlock_13.out1 -> out1;
                  connect compareToZero4_3.y -> logicalOperator_6.in3;
                  connect memory2_3.out1 -> compareToZero4_3.u;
                  connect logicalOperator_6.out1 -> logicalOperator2_4.in1;
                  connect constant1_10.out1 -> switchBlock_13.elseIn;
                  connect constant_31.out1 -> memory1_3.in1;
                  connect condition_14.out1 -> switchBlock_13.condition;
                  connect logicalOperator2_4.out1 -> switchBlock_13.ifIn;
                  connect logicalOperator2_4.out1 -> memory2_3.in1;
                  connect logicalOperator1_4.out1 -> logicalOperator2_4.in2;
                  connect compareToZero3_3.y -> logicalOperator1_4.in2;
                  connect compareToZero2_3.y -> logicalOperator1_4.in1;
                  connect compareToZero1_3.y -> logicalOperator_6.in2;
                  connect compareToZero_3.y -> logicalOperator_6.in1;
                  connect memory_3.out1 -> compareToZero_3.u;
                  connect memory_3.out1 -> compareToZero2_3.u;
                  connect in1 -> memory_3.in1;
                  connect in1 -> compareToZero1_3.u;
                  connect in1 -> compareToZero3_3.u;
                  connect memory1_3.out1 -> condition_14.in1;
                }
                component RisingEdgeDetector1_2{
                  port in Number in1;
                  port out B out1;

                  component CompareToZero_4{
                    port in Number u;
                    port out B y;

                    component Compare_16{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_32{
                      port out Number out1;



                    }

                    instance Compare_16 compare_16;
                    instance Constant_32 constant_32;

                    connect compare_16.out1 -> y;
                    connect u -> compare_16.in1;
                    connect constant_32.out1 -> compare_16.in2;
                  }
                  component CompareToZero1_4{
                    port in Number u;
                    port out B y;

                    component Compare_17{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_33{
                      port out Number out1;



                    }

                    instance Compare_17 compare_17;
                    instance Constant_33 constant_33;

                    connect compare_17.out1 -> y;
                    connect u -> compare_17.in1;
                    connect constant_33.out1 -> compare_17.in2;
                  }
                  component CompareToZero2_4{
                    port in Number u;
                    port out B y;

                    component Compare_18{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_34{
                      port out Number out1;



                    }

                    instance Compare_18 compare_18;
                    instance Constant_34 constant_34;

                    connect compare_18.out1 -> y;
                    connect u -> compare_18.in1;
                    connect constant_34.out1 -> compare_18.in2;
                  }
                  component CompareToZero3_4{
                    port in Number u;
                    port out B y;

                    component Compare_19{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_35{
                      port out Number out1;



                    }

                    instance Compare_19 compare_19;
                    instance Constant_35 constant_35;

                    connect compare_19.out1 -> y;
                    connect u -> compare_19.in1;
                    connect constant_35.out1 -> compare_19.in2;
                  }
                  component CompareToZero4_4{
                    port in B u;
                    port out B y;

                    component Compare_20{
                      port in B in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_36{
                      port out Number out1;



                    }

                    instance Compare_20 compare_20;
                    instance Constant_36 constant_36;

                    connect compare_20.out1 -> y;
                    connect u -> compare_20.in1;
                    connect constant_36.out1 -> compare_20.in2;
                  }
                  component Constant_37{
                    port out Number out1;



                  }
                  component Constant1_11{
                    port out B out1;



                  }
                  component LogicalOperator_7{
                    port in B in1;
                    port in B in2;
                    port in B in3;
                    port out B out1;



                  }
                  component LogicalOperator1_5{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator2_5{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component Memory_4{
                    port in Number in1;
                    port out Number out1;



                  }
                  component Memory1_4{
                    port in Number in1;
                    port out Number out1;



                  }
                  component Memory2_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock_14{
                    port in B condition;
                    port in B elseIn;
                    port in B ifIn;
                    port out B out1;



                  }
                  component Condition_15{
                    port in Number in1;
                    port out B out1;



                  }

                  instance CompareToZero_4 compareToZero_4;
                  instance CompareToZero1_4 compareToZero1_4;
                  instance CompareToZero2_4 compareToZero2_4;
                  instance CompareToZero3_4 compareToZero3_4;
                  instance CompareToZero4_4 compareToZero4_4;
                  instance Constant_37 constant_37;
                  instance Constant1_11 constant1_11;
                  instance LogicalOperator_7 logicalOperator_7;
                  instance LogicalOperator1_5 logicalOperator1_5;
                  instance LogicalOperator2_5 logicalOperator2_5;
                  instance Memory_4 memory_4;
                  instance Memory1_4 memory1_4;
                  instance Memory2_4 memory2_4;
                  instance SwitchBlock_14 switchBlock_14;
                  instance Condition_15 condition_15;

                  connect switchBlock_14.out1 -> out1;
                  connect compareToZero4_4.y -> logicalOperator_7.in3;
                  connect memory2_4.out1 -> compareToZero4_4.u;
                  connect logicalOperator_7.out1 -> logicalOperator2_5.in1;
                  connect constant1_11.out1 -> switchBlock_14.elseIn;
                  connect constant_37.out1 -> memory1_4.in1;
                  connect condition_15.out1 -> switchBlock_14.condition;
                  connect logicalOperator2_5.out1 -> switchBlock_14.ifIn;
                  connect logicalOperator2_5.out1 -> memory2_4.in1;
                  connect logicalOperator1_5.out1 -> logicalOperator2_5.in2;
                  connect compareToZero3_4.y -> logicalOperator1_5.in2;
                  connect compareToZero2_4.y -> logicalOperator1_5.in1;
                  connect compareToZero1_4.y -> logicalOperator_7.in2;
                  connect compareToZero_4.y -> logicalOperator_7.in1;
                  connect memory_4.out1 -> compareToZero_4.u;
                  connect memory_4.out1 -> compareToZero2_4.u;
                  connect in1 -> memory_4.in1;
                  connect in1 -> compareToZero1_4.u;
                  connect in1 -> compareToZero3_4.u;
                  connect memory1_4.out1 -> condition_15.in1;
                }
                component SwitchBlock1_7{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition_16{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock2_4{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition1_8{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock3_4{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition2_4{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock4_2{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition3_4{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock5_2{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition4_2{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock6_2{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition5_2{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock7_2{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition6_2{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock8_1{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition7_2{
                  port in B in1;
                  port out B out1;



                }
                component SwitchBlock9_1{
                  port in B condition;
                  port in Number elseIn;
                  port in Number ifIn;
                  port out Number out1;



                }
                component Condition8_1{
                  port in B in1;
                  port out B out1;



                }
                component Condition9_1{
                  port in B in1;
                  port out B out1;



                }

                instance Constant_11 constant_11;
                instance Limiter_Enabled limiter_Enabled;
                instance Limiter_InitialSetValue limiter_InitialSetValue;
                instance Limiter_SetValue limiter_SetValue;
                instance Limiter_StartUpSetValue limiter_StartUpSetValue;
                instance LogicalOperator_5 logicalOperator_5;
                instance MinMax_2 minMax_2;
                instance SwitchBlock_12 switchBlock_12;
                instance SysInit_1 sysInit_1;
                instance VERSION_INFO_23 vERSION_INFO_23;
                instance RisingEdgeDetector_2 risingEdgeDetector_2;
                instance RisingEdgeDetector1_2 risingEdgeDetector1_2;
                instance SwitchBlock1_7 switchBlock1_7;
                instance Condition_16 condition_16;
                instance SwitchBlock2_4 switchBlock2_4;
                instance Condition1_8 condition1_8;
                instance SwitchBlock3_4 switchBlock3_4;
                instance Condition2_4 condition2_4;
                instance SwitchBlock4_2 switchBlock4_2;
                instance Condition3_4 condition3_4;
                instance SwitchBlock5_2 switchBlock5_2;
                instance Condition4_2 condition4_2;
                instance SwitchBlock6_2 switchBlock6_2;
                instance Condition5_2 condition5_2;
                instance SwitchBlock7_2 switchBlock7_2;
                instance Condition6_2 condition6_2;
                instance SwitchBlock8_1 switchBlock8_1;
                instance Condition7_2 condition7_2;
                instance SwitchBlock9_1 switchBlock9_1;
                instance Condition8_1 condition8_1;
                instance Condition9_1 condition9_1;

                connect limiter_Enabled.limiter_active_b -> limiter_active_b;
                connect switchBlock1_7.out1 -> out1;
                connect switchBlock8_1.out1 -> out2;
                connect switchBlock_12.vMax_kmh -> vMax_kmh;
                connect condition9_1.out1 -> switchBlock_12.condition;
                connect limiter_b -> risingEdgeDetector_2.in1;
                connect sysInit_1.y -> risingEdgeDetector1_2.in1;
                connect risingEdgeDetector1_2.out1 -> condition_16.in1;
                connect limiter_StartUpSetValue.out1 -> switchBlock1_7.ifIn;
                connect condition_16.out1 -> switchBlock1_7.condition;
                connect in1 -> switchBlock1_7.elseIn;
                connect risingEdgeDetector_2.out1 -> condition1_8.in1;
                connect limiter_InitialSetValue.out1 -> switchBlock2_4.ifIn;
                connect condition1_8.out1 -> switchBlock2_4.condition;
                connect in2 -> switchBlock2_4.elseIn;
                connect switchBlock2_4.out1 -> limiter_SetValue.in1;
                connect risingEdgeDetector_2.out1 -> condition2_4.in1;
                connect limiter_InitialSetValue.out2 -> switchBlock3_4.ifIn;
                connect condition2_4.out1 -> switchBlock3_4.condition;
                connect in2 -> switchBlock3_4.elseIn;
                connect switchBlock3_4.out1 -> limiter_SetValue.in2;
                connect risingEdgeDetector_2.out1 -> condition3_4.in1;
                connect limiter_InitialSetValue.out3 -> switchBlock4_2.ifIn;
                connect condition3_4.out1 -> switchBlock4_2.condition;
                connect in2 -> switchBlock4_2.elseIn;
                connect switchBlock4_2.out1 -> limiter_SetValue.in3;
                connect limiter_b -> condition4_2.in1;
                connect limiter_SetValue.out1 -> switchBlock5_2.ifIn;
                connect condition4_2.out1 -> switchBlock5_2.condition;
                connect risingEdgeDetector_2.out1 -> condition5_2.in1;
                connect limiter_InitialSetValue.out4 -> switchBlock6_2.ifIn;
                connect condition5_2.out1 -> switchBlock6_2.condition;
                connect in2 -> switchBlock6_2.elseIn;
                connect switchBlock6_2.out1 -> switchBlock5_2.elseIn;
                connect switchBlock5_2.out1 -> limiter_Enabled.in1;
                connect risingEdgeDetector_2.out1 -> condition6_2.in1;
                connect limiter_InitialSetValue.out5 -> switchBlock7_2.ifIn;
                connect condition6_2.out1 -> switchBlock7_2.condition;
                connect in2 -> switchBlock7_2.elseIn;
                connect switchBlock7_2.out1 -> limiter_SetValue.in4;
                connect limiter_b -> condition7_2.in1;
                connect limiter_SetValue.out2 -> switchBlock8_1.ifIn;
                connect condition7_2.out1 -> switchBlock8_1.condition;
                connect risingEdgeDetector_2.out1 -> condition8_1.in1;
                connect limiter_InitialSetValue.out6 -> switchBlock9_1.ifIn;
                connect condition8_1.out1 -> switchBlock9_1.condition;
                connect in2 -> switchBlock9_1.elseIn;
                connect switchBlock9_1.out1 -> switchBlock8_1.elseIn;
                connect logicalOperator_5.out1 -> condition9_1.in1;
                connect constant_11.out1 -> logicalOperator_5.in2;
                connect v_Sign_kmh -> minMax_2.in1;
                connect minMax_2.out1 -> switchBlock_12.ifIn;
                connect sign_b -> logicalOperator_5.in1;
                connect acceleration_pedal_pc -> limiter_Enabled.acceleration_pedal_pc;
                connect limiter_b -> limiter_Enabled.limiter_b;
                connect limiter_Enabled.vMax_kmh -> switchBlock_12.elseIn;
                connect limiter_Enabled.vMax_kmh -> minMax_2.in2;
                connect v_Vehicle_kmh -> limiter_InitialSetValue.v_Vehicle_kmh;
                connect leverUp_stat -> limiter_SetValue.leverUp_stat;
                connect leverDown_stat -> limiter_SetValue.leverDown_stat;
              }
              component VERSION_INFO_24{

                component Copyright_24{



                }

                instance Copyright_24 copyright_24;

              }
              component SwitchBlock_15{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition_17{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock1_8{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition1_9{
                port in Number in1;
                port out B out1;



              }
              component Condition2_5{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock2_5{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component UnitDelay_5{
                port in Number valueIn;
                port out Number valueOut;



              }
              component Condition3_5{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock3_5{
                port in B condition;
                port in B elseIn;
                port in B ifIn;
                port out B out1;



              }
              component UnitDelay1_5{
                port in B valueIn;
                port out B valueOut;



              }

              instance Constant_10 constant_10;
              instance Limiter_Function limiter_Function;
              instance VERSION_INFO_24 vERSION_INFO_24;
              instance SwitchBlock_15 switchBlock_15;
              instance Condition_17 condition_17;
              instance SwitchBlock1_8 switchBlock1_8;
              instance Condition1_9 condition1_9;
              instance Condition2_5 condition2_5;
              instance SwitchBlock2_5 switchBlock2_5;
              instance UnitDelay_5 unitDelay_5;
              instance Condition3_5 condition3_5;
              instance SwitchBlock3_5 switchBlock3_5;
              instance UnitDelay1_5 unitDelay1_5;

              connect switchBlock3_5.out1 -> limiter_active_b;
              connect switchBlock_15.out1 -> out1;
              connect switchBlock1_8.out1 -> out2;
              connect switchBlock2_5.out1 -> vMax_kmh;
              connect in1 -> limiter_Function.in1;
              connect constant_10.out1 -> condition_17.in1;
              connect limiter_Function.out1 -> switchBlock_15.ifIn;
              connect condition_17.out1 -> switchBlock_15.condition;
              connect in2 -> switchBlock_15.elseIn;
              connect in3 -> limiter_Function.in2;
              connect constant_10.out1 -> condition1_9.in1;
              connect limiter_Function.out2 -> switchBlock1_8.ifIn;
              connect condition1_9.out1 -> switchBlock1_8.condition;
              connect in3 -> switchBlock1_8.elseIn;
              connect constant_10.out1 -> condition2_5.in1;
              connect condition2_5.out1 -> switchBlock2_5.condition;
              connect limiter_Function.vMax_kmh -> switchBlock2_5.ifIn;
              connect switchBlock2_5.out1 -> unitDelay_5.valueIn;
              connect unitDelay_5.valueOut -> switchBlock2_5.elseIn;
              connect constant_10.out1 -> condition3_5.in1;
              connect condition3_5.out1 -> switchBlock3_5.condition;
              connect limiter_Function.limiter_active_b -> switchBlock3_5.ifIn;
              connect switchBlock3_5.out1 -> unitDelay1_5.valueIn;
              connect unitDelay1_5.valueOut -> switchBlock3_5.elseIn;
              connect sign_b -> limiter_Function.sign_b;
              connect v_Sign_kmh -> limiter_Function.v_Sign_kmh;
              connect leverDown_stat -> limiter_Function.leverDown_stat;
              connect leverUp_stat -> limiter_Function.leverUp_stat;
              connect v_Vehicle_kmh -> limiter_Function.v_Vehicle_kmh;
              connect acceleration_pedal_pc -> limiter_Function.acceleration_pedal_pc;
              connect limiter_b -> limiter_Function.limiter_b;
            }
            component LogOp_1{
              port in B acusti_warn_b;
              port in B acusti_warn_bIn2;
              port out B acusti_warn_bOut1;



            }
            component Tempomat{
              port in Q brakeForce_pedal_pc;
              port out B cC_active_b;
              port in B cruiseControl_b;
              port in B fTS_active_b;
              port in Number in1;
              port in Q leverDown_Stat;
              port in Q leverUp_Stat;
              port in B limiter_b;
              port out Number out1;
              port out Number out2;
              port in B parkingBrake_b;
              port out Number v_CC_delta_kmh;
              port in Q v_Vehicle_kmh;

              component Constant_38{
                port out Number out1;



              }
              component Tempomat_Function{
                port in Q brakeForce_pedal_pc;
                port out B cC_active_b;
                port in B cruiseControl_b;
                port in B fTS_active_b;
                port in Number in1;
                port in Q leverDown_Stat;
                port in Q leverUp_Stat;
                port in B limiter_b;
                port out Number out1;
                port out Number out2;
                port in B parkingBrake_b;
                port out Number v_CC_delta_kmh;
                port in Q v_Vehicle_kmh;

                component CC_Enabled{
                  port in B cC_active_b;
                  port in Number in1;
                  port out Number v_CC_delta_kmh;
                  port in Q v_Vehicle_kmh;

                  component Tempomat_Active{
                    port in Number in1;
                    port out Number v_CC_delta_kmh;
                    port in Q v_Vehicle_kmh;

                    component Sum_6{
                      port in Number in1;
                      port in Number in2;
                      port out Number v_CC_delta_kmh;



                    }
                    component VERSION_INFO_25{

                      component Copyright_25{



                      }

                      instance Copyright_25 copyright_25;

                    }

                    instance Sum_6 sum_6;
                    instance VERSION_INFO_25 vERSION_INFO_25;

                    connect sum_6.v_CC_delta_kmh -> v_CC_delta_kmh;
                    connect in1 -> sum_6.in2;
                    connect v_Vehicle_kmh -> sum_6.in1;
                  }
                  component Tempomat_Deactive{
                    port out Number v_CC_delta_kmh;

                    component Constant_39{
                      port out Number v_CC_delta_kmh;



                    }
                    component VERSION_INFO_26{

                      component Copyright_26{



                      }

                      instance Copyright_26 copyright_26;

                    }

                    instance Constant_39 constant_39;
                    instance VERSION_INFO_26 vERSION_INFO_26;

                    connect constant_39.v_CC_delta_kmh -> v_CC_delta_kmh;
                  }
                  component VERSION_INFO_27{

                    component Copyright_27{



                    }

                    instance Copyright_27 copyright_27;

                  }
                  component SwitchBlock_16{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition_18{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock1_9{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition1_10{
                    port in B in1;
                    port out B out1;



                  }
                  component UnitDelay_6{
                    port in Number valueIn;
                    port out Number valueOut;



                  }

                  instance Tempomat_Active tempomat_Active;
                  instance Tempomat_Deactive tempomat_Deactive;
                  instance VERSION_INFO_27 vERSION_INFO_27;
                  instance SwitchBlock_16 switchBlock_16;
                  instance Condition_18 condition_18;
                  instance SwitchBlock1_9 switchBlock1_9;
                  instance Condition1_10 condition1_10;
                  instance UnitDelay_6 unitDelay_6;

                  connect switchBlock_16.out1 -> v_CC_delta_kmh;
                  connect in1 -> tempomat_Active.in1;
                  connect cC_active_b -> condition_18.in1;
                  connect condition_18.out1 -> switchBlock_16.condition;
                  connect tempomat_Active.v_CC_delta_kmh -> switchBlock_16.ifIn;
                  connect cC_active_b -> condition1_10.in1;
                  connect condition1_10.out1 -> switchBlock1_9.condition;
                  connect tempomat_Deactive.v_CC_delta_kmh -> switchBlock1_9.ifIn;
                  connect switchBlock1_9.out1 -> switchBlock_16.elseIn;
                  connect switchBlock_16.out1 -> unitDelay_6.valueIn;
                  connect unitDelay_6.valueOut -> switchBlock1_9.elseIn;
                  connect v_Vehicle_kmh -> tempomat_Active.v_Vehicle_kmh;
                }
                component CC_On_Off{
                  port in Q brakeForce_pedal_pc;
                  port out B cC_active_b;
                  port in B cruiseControl_b;
                  port in B fTS_active_b;
                  port in Q leverDown_stat;
                  port in Q leverUp_stat;
                  port in B limiter_b;
                  port in B parkingBrake_b;
                  port in Q v_Vehicle_kmh;

                  component Constant_40{
                    port out Number out1;



                  }
                  component Constant1_12{
                    port out Number out1;



                  }
                  component Constant2_3{
                    port out Number out1;



                  }
                  component Constant3_2{
                    port out Number out1;



                  }
                  component EdgeFalling{
                    port in B iV;
                    port in B r;
                    port in B u;
                    port out B y;

                    component LogOp_A_2{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogOp_N_3{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_U_2{
                      port in B in1;
                      port out B out1;



                    }
                    component Switch_R_3{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_19{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_A_2 logOp_A_2;
                    instance LogOp_N_3 logOp_N_3;
                    instance Memory_U_2 memory_U_2;
                    instance Switch_R_3 switch_R_3;
                    instance Condition_19 condition_19;

                    connect logOp_A_2.out1 -> y;
                    connect condition_19.out1 -> switch_R_3.condition;
                    connect r -> condition_19.in1;
                    connect switch_R_3.out1 -> logOp_A_2.in2;
                    connect u -> logOp_N_3.in1;
                    connect u -> memory_U_2.in1;
                    connect logOp_N_3.out1 -> logOp_A_2.in1;
                    connect memory_U_2.out1 -> switch_R_3.elseIn;
                    connect iV -> switch_R_3.ifIn;
                  }
                  component EdgeRising1{
                    port in B iV;
                    port in B r;
                    port in B u;
                    port out B y;

                    component LogOp_A_3{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogOp_N_4{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_U_3{
                      port in B in1;
                      port out B out1;



                    }
                    component Switch_R_4{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_20{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_A_3 logOp_A_3;
                    instance LogOp_N_4 logOp_N_4;
                    instance Memory_U_3 memory_U_3;
                    instance Switch_R_4 switch_R_4;
                    instance Condition_20 condition_20;

                    connect logOp_A_3.out1 -> y;
                    connect condition_20.out1 -> switch_R_4.condition;
                    connect r -> condition_20.in1;
                    connect iV -> switch_R_4.ifIn;
                    connect memory_U_3.out1 -> switch_R_4.elseIn;
                    connect switch_R_4.out1 -> logOp_N_4.in1;
                    connect u -> memory_U_3.in1;
                    connect u -> logOp_A_3.in1;
                    connect logOp_N_4.out1 -> logOp_A_3.in2;
                  }
                  component FalseBlock1_1{
                    port out B y;

                    component Zero_3{
                      port out B out1;



                    }

                    instance Zero_3 zero_3;

                    connect zero_3.out1 -> y;
                  }
                  component FalseBlock2_1{
                    port out B y;

                    component Zero_4{
                      port out B out1;



                    }

                    instance Zero_4 zero_4;

                    connect zero_4.out1 -> y;
                  }
                  component LogicalOperator_8{
                    port in B in1;
                    port in B in2;
                    port in B in3;
                    port in B in4;
                    port out B out1;



                  }
                  component LogicalOperator1_6{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator2_6{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator3_1{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator4_1{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator5_1{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator6_1{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator7{
                    port in B in1;
                    port out B out1;



                  }
                  component RSFlipFlop_2{
                    port out B nOT_Q;
                    port out B q;
                    port in B r;
                    port in B s;

                    component LogOp_N_5{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_Q_2{
                      port in B in1;
                      port out B out1;



                    }
                    component One_S_2{
                      port out B out1;



                    }
                    component Switch_R_5{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Switch_S_2{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Zero_R_2{
                      port out B out1;



                    }
                    component Condition_21{
                      port in B in1;
                      port out B out1;



                    }
                    component Condition1_11{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_N_5 logOp_N_5;
                    instance Memory_Q_2 memory_Q_2;
                    instance One_S_2 one_S_2;
                    instance Switch_R_5 switch_R_5;
                    instance Switch_S_2 switch_S_2;
                    instance Zero_R_2 zero_R_2;
                    instance Condition_21 condition_21;
                    instance Condition1_11 condition1_11;

                    connect logOp_N_5.out1 -> nOT_Q;
                    connect switch_R_5.out1 -> q;
                    connect condition_21.out1 -> switch_S_2.condition;
                    connect condition1_11.out1 -> switch_R_5.condition;
                    connect s -> condition_21.in1;
                    connect r -> condition1_11.in1;
                    connect memory_Q_2.out1 -> switch_S_2.elseIn;
                    connect switch_S_2.out1 -> switch_R_5.elseIn;
                    connect one_S_2.out1 -> switch_S_2.ifIn;
                    connect switch_R_5.out1 -> memory_Q_2.in1;
                    connect switch_R_5.out1 -> logOp_N_5.in1;
                    connect zero_R_2.out1 -> switch_R_5.ifIn;
                  }
                  component RelOp_6{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component RelOp1_3{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component RelOp2_2{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component RelOp3_2{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component Terminator_3{
                    port in B in1;



                  }
                  component VERSION_INFO_28{

                    component Copyright_28{



                    }

                    instance Copyright_28 copyright_28;

                  }

                  instance Constant_40 constant_40;
                  instance Constant1_12 constant1_12;
                  instance Constant2_3 constant2_3;
                  instance Constant3_2 constant3_2;
                  instance EdgeFalling edgeFalling;
                  instance EdgeRising1 edgeRising1;
                  instance FalseBlock1_1 falseBlock1_1;
                  instance FalseBlock2_1 falseBlock2_1;
                  instance LogicalOperator_8 logicalOperator_8;
                  instance LogicalOperator1_6 logicalOperator1_6;
                  instance LogicalOperator2_6 logicalOperator2_6;
                  instance LogicalOperator3_1 logicalOperator3_1;
                  instance LogicalOperator4_1 logicalOperator4_1;
                  instance LogicalOperator5_1 logicalOperator5_1;
                  instance LogicalOperator6_1 logicalOperator6_1;
                  instance LogicalOperator7 logicalOperator7;
                  instance RSFlipFlop_2 rSFlipFlop_2;
                  instance RelOp_6 relOp_6;
                  instance RelOp1_3 relOp1_3;
                  instance RelOp2_2 relOp2_2;
                  instance RelOp3_2 relOp3_2;
                  instance Terminator_3 terminator_3;
                  instance VERSION_INFO_28 vERSION_INFO_28;

                  connect rSFlipFlop_2.q -> cC_active_b;
                  connect fTS_active_b -> logicalOperator7.in1;
                  connect logicalOperator7.out1 -> logicalOperator1_6.in2;
                  connect logicalOperator1_6.out1 -> logicalOperator_8.in4;
                  connect edgeRising1.y -> logicalOperator3_1.in1;
                  connect logicalOperator6_1.out1 -> edgeRising1.u;
                  connect logicalOperator6_1.out1 -> logicalOperator2_6.in1;
                  connect falseBlock2_1.y -> edgeRising1.iV;
                  connect logicalOperator2_6.out1 -> edgeRising1.r;
                  connect logicalOperator3_1.out1 -> logicalOperator4_1.in2;
                  connect constant3_2.out1 -> relOp3_2.in2;
                  connect constant2_3.out1 -> relOp_6.in2;
                  connect relOp_6.out1 -> logicalOperator6_1.in2;
                  connect relOp3_2.out1 -> logicalOperator6_1.in1;
                  connect logicalOperator5_1.out1 -> logicalOperator4_1.in1;
                  connect limiter_b -> logicalOperator5_1.in1;
                  connect cruiseControl_b -> edgeFalling.r;
                  connect cruiseControl_b -> edgeFalling.u;
                  connect cruiseControl_b -> logicalOperator3_1.in2;
                  connect falseBlock1_1.y -> edgeFalling.iV;
                  connect edgeFalling.y -> logicalOperator_8.in1;
                  connect v_Vehicle_kmh -> relOp1_3.in1;
                  connect leverUp_stat -> relOp3_2.in1;
                  connect leverDown_stat -> relOp_6.in1;
                  connect relOp1_3.out1 -> logicalOperator1_6.in1;
                  connect constant1_12.out1 -> relOp1_3.in2;
                  connect brakeForce_pedal_pc -> relOp2_2.in1;
                  connect rSFlipFlop_2.nOT_Q -> terminator_3.in1;
                  connect parkingBrake_b -> logicalOperator_8.in2;
                  connect constant_40.out1 -> relOp2_2.in2;
                  connect relOp2_2.out1 -> logicalOperator_8.in3;
                  connect logicalOperator_8.out1 -> rSFlipFlop_2.r;
                  connect logicalOperator4_1.out1 -> rSFlipFlop_2.s;
                }
                component CC_SetValue{
                  port in B cC_enabled_b;
                  port in B cruiseControl_b;
                  port in Number in1;
                  port in Q leverDown_Stat;
                  port in Q leverUp_Stat;
                  port in B limiter_b;
                  port out Number out1;
                  port out Number out2;
                  port out Number out3;
                  port in Q v_Vehicle_kmh;

                  component CC_ChangeSetValue{
                    port in Number in1;
                    port in Q leverDown_stat;
                    port in Q leverUp_stat;
                    port out Number out1;
                    port out Number out2;
                    port out Number out3;
                    port out Number out4;
                    port out Number out5;
                    port out Number out6;
                    port out Number out7;

                    component CC_ChangeSetValue_Lvl2_Repeater{
                      port in Number in1;
                      port in Number in10;
                      port in Number in11;
                      port in Number in2;
                      port in Number in3;
                      port in Number in4;
                      port in Number in5;
                      port in Number in6;
                      port in Number in7;
                      port in Number in8;
                      port in Number in9;
                      port in Q leverDown_Stat;
                      port in Q leverUp_Stat;
                      port out Number out1;
                      port out Number out2;
                      port out Number out3;
                      port out Number out4;
                      port out Number out5;
                      port out Number out6;
                      port out Number out7;

                      component Constant_41{
                        port out B out1;



                      }
                      component Constant1_13{
                        port out B out1;



                      }
                      component Constant2_4{
                        port out Number out1;



                      }
                      component Constant3_3{
                        port out Number out1;



                      }
                      component Constant4_1{
                        port out B out1;



                      }
                      component Constant5_1{
                        port out Number out1;



                      }
                      component Constant6_1{
                        port out Number out1;



                      }
                      component Constant7_1{
                        port out B out1;



                      }
                      component CountDown_RE{
                        port in B e;
                        port in Number iV;
                        port in B r;
                        port out B y;

                        component LogOp_C{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_C{
                          port in Number in1;
                          port out Number out1;



                        }
                        component One_C{
                          port out Number out1;



                        }
                        component RelOp_C{
                          port in Number in1;
                          port in Number in2;
                          port out B out1;



                        }
                        component RelOp_Y{
                          port in Number in1;
                          port in Number in2;
                          port out B out1;



                        }
                        component Sum_C{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Switch_C{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component Switch_R_6{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component Zero_C{
                          port out Number out1;



                        }
                        component Zero_Y{
                          port out Number out1;



                        }
                        component Condition_22{
                          port in B in1;
                          port out B out1;



                        }
                        component Condition1_12{
                          port in B in1;
                          port out B out1;



                        }

                        instance LogOp_C logOp_C;
                        instance Memory_C memory_C;
                        instance One_C one_C;
                        instance RelOp_C relOp_C;
                        instance RelOp_Y relOp_Y;
                        instance Sum_C sum_C;
                        instance Switch_C switch_C;
                        instance Switch_R_6 switch_R_6;
                        instance Zero_C zero_C;
                        instance Zero_Y zero_Y;
                        instance Condition_22 condition_22;
                        instance Condition1_12 condition1_12;

                        connect relOp_Y.out1 -> y;
                        connect condition1_12.out1 -> switch_R_6.condition;
                        connect condition_22.out1 -> switch_C.condition;
                        connect logOp_C.out1 -> condition_22.in1;
                        connect r -> condition1_12.in1;
                        connect zero_Y.out1 -> relOp_Y.in2;
                        connect iV -> switch_R_6.ifIn;
                        connect e -> logOp_C.in1;
                        connect relOp_C.out1 -> logOp_C.in2;
                        connect switch_R_6.out1 -> memory_C.in1;
                        connect switch_R_6.out1 -> relOp_Y.in1;
                        connect zero_C.out1 -> relOp_C.in2;
                        connect switch_C.out1 -> switch_R_6.elseIn;
                        connect one_C.out1 -> sum_C.in2;
                        connect sum_C.out1 -> switch_C.ifIn;
                        connect memory_C.out1 -> relOp_C.in1;
                        connect memory_C.out1 -> sum_C.in1;
                        connect memory_C.out1 -> switch_C.elseIn;
                      }
                      component DEMO_FAS_Repeater_Time{
                        port out Number out1;



                      }
                      component LogicalOperator_9{
                        port in B in1;
                        port out B out1;



                      }
                      component LogicalOperator1_7{
                        port in B in1;
                        port in B in2;
                        port in B in3;
                        port out B out1;



                      }
                      component LogicalOperator2_7{
                        port in B in1;
                        port out B out1;



                      }
                      component LogicalOperator3_2{
                        port in B in1;
                        port in B in2;
                        port in B in3;
                        port in B in4;
                        port out B out1;



                      }
                      component RelOp1_4{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp2_3{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp3_3{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp4_1{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component SwitchBlock_17{
                        port in B condition;
                        port in B elseIn;
                        port in B ifIn;
                        port out B out1;



                      }
                      component SwitchBlock1_10{
                        port in B condition;
                        port in B elseIn;
                        port in B ifIn;
                        port out B out1;



                      }
                      component SwitchBlock2_6{
                        port in B condition;
                        port in B elseIn;
                        port in B ifIn;
                        port out B out1;



                      }
                      component SwitchBlock3_6{
                        port in B condition;
                        port in B elseIn;
                        port in B ifIn;
                        port out B out1;



                      }
                      component SysInit_2{
                        port out B y;

                        component Memory_Init_2{
                          port in B in1;
                          port out B out1;



                        }
                        component Zero_Init_2{
                          port out B out1;



                        }

                        instance Memory_Init_2 memory_Init_2;
                        instance Zero_Init_2 zero_Init_2;

                        connect memory_Init_2.out1 -> y;
                        connect zero_Init_2.out1 -> memory_Init_2.in1;
                      }
                      component UnitDelay_7{
                        port in B in1;
                        port out B out1;



                      }
                      component VERSION_INFO_29{

                        component Copyright_29{



                        }

                        instance Copyright_29 copyright_29;

                      }
                      component V_SetValueMinus_1{
                        port out Number out1;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port in Number v_CCSetValue;

                        component Parameter_3{
                          port out Number out1;



                        }
                        component Sum_7{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component VERSION_INFO_30{

                          component Copyright_30{



                          }

                          instance Copyright_30 copyright_30;

                        }

                        instance Parameter_3 parameter_3;
                        instance Sum_7 sum_7;
                        instance VERSION_INFO_30 vERSION_INFO_30;

                        connect sum_7.out1 -> out1;
                        connect sum_7.out1 -> out2;
                        connect sum_7.out1 -> out3;
                        connect sum_7.out1 -> out4;
                        connect sum_7.out1 -> out5;
                        connect sum_7.out1 -> out6;
                        connect sum_7.out1 -> out7;
                        connect parameter_3.out1 -> sum_7.in2;
                        connect v_CCSetValue -> sum_7.in1;
                      }
                      component V_SetValueMinusLvl2_1{
                        port out Number out1;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port in Number v_CCSetValue;

                        component Constant1_14{
                          port out Number out1;



                        }
                        component DEMO_FAS_CC_Lvl2_Round_1{
                          port out Number out1;



                        }
                        component MathFunction_1{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum_8{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component SwitchBlock1_11{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component SwitchBlock3_7{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component VERSION_INFO_31{

                          component Copyright_31{



                          }

                          instance Copyright_31 copyright_31;

                        }
                        component Condition_23{
                          port in Number in1;
                          port out B out1;



                        }
                        component Condition1_13{
                          port in Number in1;
                          port out B out1;



                        }

                        instance Constant1_14 constant1_14;
                        instance DEMO_FAS_CC_Lvl2_Round_1 dEMO_FAS_CC_Lvl2_Round_1;
                        instance MathFunction_1 mathFunction_1;
                        instance Sum_8 sum_8;
                        instance SwitchBlock1_11 switchBlock1_11;
                        instance SwitchBlock3_7 switchBlock3_7;
                        instance VERSION_INFO_31 vERSION_INFO_31;
                        instance Condition_23 condition_23;
                        instance Condition1_13 condition1_13;

                        connect switchBlock1_11.out1 -> out1;
                        connect switchBlock1_11.out1 -> out2;
                        connect switchBlock1_11.out1 -> out3;
                        connect switchBlock1_11.out1 -> out4;
                        connect switchBlock1_11.out1 -> out5;
                        connect switchBlock1_11.out1 -> out6;
                        connect switchBlock1_11.out1 -> out7;
                        connect condition1_13.out1 -> switchBlock3_7.condition;
                        connect condition_23.out1 -> switchBlock1_11.condition;
                        connect sum_8.out1 -> condition_23.in1;
                        connect mathFunction_1.out1 -> condition1_13.in1;
                        connect switchBlock3_7.out1 -> sum_8.in2;
                        connect constant1_14.out1 -> switchBlock3_7.elseIn;
                        connect mathFunction_1.out1 -> switchBlock3_7.ifIn;
                        connect dEMO_FAS_CC_Lvl2_Round_1.out1 -> mathFunction_1.in2;
                        connect v_CCSetValue -> mathFunction_1.in1;
                        connect v_CCSetValue -> sum_8.in1;
                        connect v_CCSetValue -> switchBlock1_11.elseIn;
                        connect sum_8.out1 -> switchBlock1_11.ifIn;
                      }
                      component V_SetValuePlus_1{
                        port out Number out1;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port in Number v_CCSetValue;

                        component Parameter_4{
                          port out Number out1;



                        }
                        component Sum_9{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component VERSION_INFO_32{

                          component Copyright_32{



                          }

                          instance Copyright_32 copyright_32;

                        }

                        instance Parameter_4 parameter_4;
                        instance Sum_9 sum_9;
                        instance VERSION_INFO_32 vERSION_INFO_32;

                        connect sum_9.out1 -> out1;
                        connect sum_9.out1 -> out2;
                        connect sum_9.out1 -> out3;
                        connect sum_9.out1 -> out4;
                        connect sum_9.out1 -> out5;
                        connect sum_9.out1 -> out6;
                        connect sum_9.out1 -> out7;
                        connect parameter_4.out1 -> sum_9.in2;
                        connect v_CCSetValue -> sum_9.in1;
                      }
                      component V_SetValuePlusLvl2_1{
                        port out Number out1;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port in Number v_CCSetValue;

                        component DEMO_FAS_CC_Lvl2_Round_2{
                          port out Number out1;



                        }
                        component MathFunction_2{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum_10{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum1_2{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component VERSION_INFO_33{

                          component Copyright_33{



                          }

                          instance Copyright_33 copyright_33;

                        }

                        instance DEMO_FAS_CC_Lvl2_Round_2 dEMO_FAS_CC_Lvl2_Round_2;
                        instance MathFunction_2 mathFunction_2;
                        instance Sum_10 sum_10;
                        instance Sum1_2 sum1_2;
                        instance VERSION_INFO_33 vERSION_INFO_33;

                        connect sum_10.out1 -> out1;
                        connect sum_10.out1 -> out2;
                        connect sum_10.out1 -> out3;
                        connect sum_10.out1 -> out4;
                        connect sum_10.out1 -> out5;
                        connect sum_10.out1 -> out6;
                        connect sum_10.out1 -> out7;
                        connect sum1_2.out1 -> sum_10.in2;
                        connect mathFunction_2.out1 -> sum1_2.in1;
                        connect dEMO_FAS_CC_Lvl2_Round_2.out1 -> mathFunction_2.in2;
                        connect dEMO_FAS_CC_Lvl2_Round_2.out1 -> sum1_2.in2;
                        connect v_CCSetValue -> mathFunction_2.in1;
                        connect v_CCSetValue -> sum_10.in1;
                      }
                      component RisingEdgeDetector_3{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_5{
                          port in B u;
                          port out B y;

                          component Compare_21{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_42{
                            port out Number out1;



                          }

                          instance Compare_21 compare_21;
                          instance Constant_42 constant_42;

                          connect compare_21.out1 -> y;
                          connect u -> compare_21.in1;
                          connect constant_42.out1 -> compare_21.in2;
                        }
                        component CompareToZero1_5{
                          port in B u;
                          port out B y;

                          component Compare_22{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_43{
                            port out Number out1;



                          }

                          instance Compare_22 compare_22;
                          instance Constant_43 constant_43;

                          connect compare_22.out1 -> y;
                          connect u -> compare_22.in1;
                          connect constant_43.out1 -> compare_22.in2;
                        }
                        component CompareToZero2_5{
                          port in B u;
                          port out B y;

                          component Compare_23{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_44{
                            port out Number out1;



                          }

                          instance Compare_23 compare_23;
                          instance Constant_44 constant_44;

                          connect compare_23.out1 -> y;
                          connect u -> compare_23.in1;
                          connect constant_44.out1 -> compare_23.in2;
                        }
                        component CompareToZero3_5{
                          port in B u;
                          port out B y;

                          component Compare_24{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_45{
                            port out Number out1;



                          }

                          instance Compare_24 compare_24;
                          instance Constant_45 constant_45;

                          connect compare_24.out1 -> y;
                          connect u -> compare_24.in1;
                          connect constant_45.out1 -> compare_24.in2;
                        }
                        component CompareToZero4_5{
                          port in B u;
                          port out B y;

                          component Compare_25{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_46{
                            port out Number out1;



                          }

                          instance Compare_25 compare_25;
                          instance Constant_46 constant_46;

                          connect compare_25.out1 -> y;
                          connect u -> compare_25.in1;
                          connect constant_46.out1 -> compare_25.in2;
                        }
                        component Constant_47{
                          port out Number out1;



                        }
                        component Constant1_15{
                          port out B out1;



                        }
                        component LogicalOperator_10{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_8{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_8{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_5{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_5{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_5{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_18{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_24{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_5 compareToZero_5;
                        instance CompareToZero1_5 compareToZero1_5;
                        instance CompareToZero2_5 compareToZero2_5;
                        instance CompareToZero3_5 compareToZero3_5;
                        instance CompareToZero4_5 compareToZero4_5;
                        instance Constant_47 constant_47;
                        instance Constant1_15 constant1_15;
                        instance LogicalOperator_10 logicalOperator_10;
                        instance LogicalOperator1_8 logicalOperator1_8;
                        instance LogicalOperator2_8 logicalOperator2_8;
                        instance Memory_5 memory_5;
                        instance Memory1_5 memory1_5;
                        instance Memory2_5 memory2_5;
                        instance SwitchBlock_18 switchBlock_18;
                        instance Condition_24 condition_24;

                        connect switchBlock_18.out1 -> out1;
                        connect compareToZero4_5.y -> logicalOperator_10.in3;
                        connect memory2_5.out1 -> compareToZero4_5.u;
                        connect logicalOperator_10.out1 -> logicalOperator2_8.in1;
                        connect constant1_15.out1 -> switchBlock_18.elseIn;
                        connect constant_47.out1 -> memory1_5.in1;
                        connect condition_24.out1 -> switchBlock_18.condition;
                        connect logicalOperator2_8.out1 -> switchBlock_18.ifIn;
                        connect logicalOperator2_8.out1 -> memory2_5.in1;
                        connect logicalOperator1_8.out1 -> logicalOperator2_8.in2;
                        connect compareToZero3_5.y -> logicalOperator1_8.in2;
                        connect compareToZero2_5.y -> logicalOperator1_8.in1;
                        connect compareToZero1_5.y -> logicalOperator_10.in2;
                        connect compareToZero_5.y -> logicalOperator_10.in1;
                        connect memory_5.out1 -> compareToZero_5.u;
                        connect memory_5.out1 -> compareToZero2_5.u;
                        connect in1 -> memory_5.in1;
                        connect in1 -> compareToZero1_5.u;
                        connect in1 -> compareToZero3_5.u;
                        connect memory1_5.out1 -> condition_24.in1;
                      }
                      component RisingEdgeDetector1_3{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_6{
                          port in B u;
                          port out B y;

                          component Compare_26{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_48{
                            port out Number out1;



                          }

                          instance Compare_26 compare_26;
                          instance Constant_48 constant_48;

                          connect compare_26.out1 -> y;
                          connect u -> compare_26.in1;
                          connect constant_48.out1 -> compare_26.in2;
                        }
                        component CompareToZero1_6{
                          port in B u;
                          port out B y;

                          component Compare_27{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_49{
                            port out Number out1;



                          }

                          instance Compare_27 compare_27;
                          instance Constant_49 constant_49;

                          connect compare_27.out1 -> y;
                          connect u -> compare_27.in1;
                          connect constant_49.out1 -> compare_27.in2;
                        }
                        component CompareToZero2_6{
                          port in B u;
                          port out B y;

                          component Compare_28{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_50{
                            port out Number out1;



                          }

                          instance Compare_28 compare_28;
                          instance Constant_50 constant_50;

                          connect compare_28.out1 -> y;
                          connect u -> compare_28.in1;
                          connect constant_50.out1 -> compare_28.in2;
                        }
                        component CompareToZero3_6{
                          port in B u;
                          port out B y;

                          component Compare_29{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_51{
                            port out Number out1;



                          }

                          instance Compare_29 compare_29;
                          instance Constant_51 constant_51;

                          connect compare_29.out1 -> y;
                          connect u -> compare_29.in1;
                          connect constant_51.out1 -> compare_29.in2;
                        }
                        component CompareToZero4_6{
                          port in B u;
                          port out B y;

                          component Compare_30{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_52{
                            port out Number out1;



                          }

                          instance Compare_30 compare_30;
                          instance Constant_52 constant_52;

                          connect compare_30.out1 -> y;
                          connect u -> compare_30.in1;
                          connect constant_52.out1 -> compare_30.in2;
                        }
                        component Constant_53{
                          port out Number out1;



                        }
                        component Constant1_16{
                          port out B out1;



                        }
                        component LogicalOperator_11{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_9{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_9{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_6{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_6{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_6{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_19{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_25{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_6 compareToZero_6;
                        instance CompareToZero1_6 compareToZero1_6;
                        instance CompareToZero2_6 compareToZero2_6;
                        instance CompareToZero3_6 compareToZero3_6;
                        instance CompareToZero4_6 compareToZero4_6;
                        instance Constant_53 constant_53;
                        instance Constant1_16 constant1_16;
                        instance LogicalOperator_11 logicalOperator_11;
                        instance LogicalOperator1_9 logicalOperator1_9;
                        instance LogicalOperator2_9 logicalOperator2_9;
                        instance Memory_6 memory_6;
                        instance Memory1_6 memory1_6;
                        instance Memory2_6 memory2_6;
                        instance SwitchBlock_19 switchBlock_19;
                        instance Condition_25 condition_25;

                        connect switchBlock_19.out1 -> out1;
                        connect compareToZero4_6.y -> logicalOperator_11.in3;
                        connect memory2_6.out1 -> compareToZero4_6.u;
                        connect logicalOperator_11.out1 -> logicalOperator2_9.in1;
                        connect constant1_16.out1 -> switchBlock_19.elseIn;
                        connect constant_53.out1 -> memory1_6.in1;
                        connect condition_25.out1 -> switchBlock_19.condition;
                        connect logicalOperator2_9.out1 -> switchBlock_19.ifIn;
                        connect logicalOperator2_9.out1 -> memory2_6.in1;
                        connect logicalOperator1_9.out1 -> logicalOperator2_9.in2;
                        connect compareToZero3_6.y -> logicalOperator1_9.in2;
                        connect compareToZero2_6.y -> logicalOperator1_9.in1;
                        connect compareToZero1_6.y -> logicalOperator_11.in2;
                        connect compareToZero_6.y -> logicalOperator_11.in1;
                        connect memory_6.out1 -> compareToZero_6.u;
                        connect memory_6.out1 -> compareToZero2_6.u;
                        connect in1 -> memory_6.in1;
                        connect in1 -> compareToZero1_6.u;
                        connect in1 -> compareToZero3_6.u;
                        connect memory1_6.out1 -> condition_25.in1;
                      }
                      component RisingEdgeDetector2_1{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_7{
                          port in B u;
                          port out B y;

                          component Compare_31{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_54{
                            port out Number out1;



                          }

                          instance Compare_31 compare_31;
                          instance Constant_54 constant_54;

                          connect compare_31.out1 -> y;
                          connect u -> compare_31.in1;
                          connect constant_54.out1 -> compare_31.in2;
                        }
                        component CompareToZero1_7{
                          port in B u;
                          port out B y;

                          component Compare_32{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_55{
                            port out Number out1;



                          }

                          instance Compare_32 compare_32;
                          instance Constant_55 constant_55;

                          connect compare_32.out1 -> y;
                          connect u -> compare_32.in1;
                          connect constant_55.out1 -> compare_32.in2;
                        }
                        component CompareToZero2_7{
                          port in B u;
                          port out B y;

                          component Compare_33{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_56{
                            port out Number out1;



                          }

                          instance Compare_33 compare_33;
                          instance Constant_56 constant_56;

                          connect compare_33.out1 -> y;
                          connect u -> compare_33.in1;
                          connect constant_56.out1 -> compare_33.in2;
                        }
                        component CompareToZero3_7{
                          port in B u;
                          port out B y;

                          component Compare_34{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_57{
                            port out Number out1;



                          }

                          instance Compare_34 compare_34;
                          instance Constant_57 constant_57;

                          connect compare_34.out1 -> y;
                          connect u -> compare_34.in1;
                          connect constant_57.out1 -> compare_34.in2;
                        }
                        component CompareToZero4_7{
                          port in B u;
                          port out B y;

                          component Compare_35{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_58{
                            port out Number out1;



                          }

                          instance Compare_35 compare_35;
                          instance Constant_58 constant_58;

                          connect compare_35.out1 -> y;
                          connect u -> compare_35.in1;
                          connect constant_58.out1 -> compare_35.in2;
                        }
                        component Constant_59{
                          port out Number out1;



                        }
                        component Constant1_17{
                          port out B out1;



                        }
                        component LogicalOperator_12{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_10{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_10{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_7{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_7{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_7{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_20{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_26{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_7 compareToZero_7;
                        instance CompareToZero1_7 compareToZero1_7;
                        instance CompareToZero2_7 compareToZero2_7;
                        instance CompareToZero3_7 compareToZero3_7;
                        instance CompareToZero4_7 compareToZero4_7;
                        instance Constant_59 constant_59;
                        instance Constant1_17 constant1_17;
                        instance LogicalOperator_12 logicalOperator_12;
                        instance LogicalOperator1_10 logicalOperator1_10;
                        instance LogicalOperator2_10 logicalOperator2_10;
                        instance Memory_7 memory_7;
                        instance Memory1_7 memory1_7;
                        instance Memory2_7 memory2_7;
                        instance SwitchBlock_20 switchBlock_20;
                        instance Condition_26 condition_26;

                        connect switchBlock_20.out1 -> out1;
                        connect compareToZero4_7.y -> logicalOperator_12.in3;
                        connect memory2_7.out1 -> compareToZero4_7.u;
                        connect logicalOperator_12.out1 -> logicalOperator2_10.in1;
                        connect constant1_17.out1 -> switchBlock_20.elseIn;
                        connect constant_59.out1 -> memory1_7.in1;
                        connect condition_26.out1 -> switchBlock_20.condition;
                        connect logicalOperator2_10.out1 -> switchBlock_20.ifIn;
                        connect logicalOperator2_10.out1 -> memory2_7.in1;
                        connect logicalOperator1_10.out1 -> logicalOperator2_10.in2;
                        connect compareToZero3_7.y -> logicalOperator1_10.in2;
                        connect compareToZero2_7.y -> logicalOperator1_10.in1;
                        connect compareToZero1_7.y -> logicalOperator_12.in2;
                        connect compareToZero_7.y -> logicalOperator_12.in1;
                        connect memory_7.out1 -> compareToZero_7.u;
                        connect memory_7.out1 -> compareToZero2_7.u;
                        connect in1 -> memory_7.in1;
                        connect in1 -> compareToZero1_7.u;
                        connect in1 -> compareToZero3_7.u;
                        connect memory1_7.out1 -> condition_26.in1;
                      }
                      component RisingEdgeDetector3_1{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_8{
                          port in B u;
                          port out B y;

                          component Compare_36{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_60{
                            port out Number out1;



                          }

                          instance Compare_36 compare_36;
                          instance Constant_60 constant_60;

                          connect compare_36.out1 -> y;
                          connect u -> compare_36.in1;
                          connect constant_60.out1 -> compare_36.in2;
                        }
                        component CompareToZero1_8{
                          port in B u;
                          port out B y;

                          component Compare_37{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_61{
                            port out Number out1;



                          }

                          instance Compare_37 compare_37;
                          instance Constant_61 constant_61;

                          connect compare_37.out1 -> y;
                          connect u -> compare_37.in1;
                          connect constant_61.out1 -> compare_37.in2;
                        }
                        component CompareToZero2_8{
                          port in B u;
                          port out B y;

                          component Compare_38{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_62{
                            port out Number out1;



                          }

                          instance Compare_38 compare_38;
                          instance Constant_62 constant_62;

                          connect compare_38.out1 -> y;
                          connect u -> compare_38.in1;
                          connect constant_62.out1 -> compare_38.in2;
                        }
                        component CompareToZero3_8{
                          port in B u;
                          port out B y;

                          component Compare_39{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_63{
                            port out Number out1;



                          }

                          instance Compare_39 compare_39;
                          instance Constant_63 constant_63;

                          connect compare_39.out1 -> y;
                          connect u -> compare_39.in1;
                          connect constant_63.out1 -> compare_39.in2;
                        }
                        component CompareToZero4_8{
                          port in B u;
                          port out B y;

                          component Compare_40{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_64{
                            port out Number out1;



                          }

                          instance Compare_40 compare_40;
                          instance Constant_64 constant_64;

                          connect compare_40.out1 -> y;
                          connect u -> compare_40.in1;
                          connect constant_64.out1 -> compare_40.in2;
                        }
                        component Constant_65{
                          port out Number out1;



                        }
                        component Constant1_18{
                          port out B out1;



                        }
                        component LogicalOperator_13{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_11{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_11{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_8{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_8{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_8{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_21{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_27{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_8 compareToZero_8;
                        instance CompareToZero1_8 compareToZero1_8;
                        instance CompareToZero2_8 compareToZero2_8;
                        instance CompareToZero3_8 compareToZero3_8;
                        instance CompareToZero4_8 compareToZero4_8;
                        instance Constant_65 constant_65;
                        instance Constant1_18 constant1_18;
                        instance LogicalOperator_13 logicalOperator_13;
                        instance LogicalOperator1_11 logicalOperator1_11;
                        instance LogicalOperator2_11 logicalOperator2_11;
                        instance Memory_8 memory_8;
                        instance Memory1_8 memory1_8;
                        instance Memory2_8 memory2_8;
                        instance SwitchBlock_21 switchBlock_21;
                        instance Condition_27 condition_27;

                        connect switchBlock_21.out1 -> out1;
                        connect compareToZero4_8.y -> logicalOperator_13.in3;
                        connect memory2_8.out1 -> compareToZero4_8.u;
                        connect logicalOperator_13.out1 -> logicalOperator2_11.in1;
                        connect constant1_18.out1 -> switchBlock_21.elseIn;
                        connect constant_65.out1 -> memory1_8.in1;
                        connect condition_27.out1 -> switchBlock_21.condition;
                        connect logicalOperator2_11.out1 -> switchBlock_21.ifIn;
                        connect logicalOperator2_11.out1 -> memory2_8.in1;
                        connect logicalOperator1_11.out1 -> logicalOperator2_11.in2;
                        connect compareToZero3_8.y -> logicalOperator1_11.in2;
                        connect compareToZero2_8.y -> logicalOperator1_11.in1;
                        connect compareToZero1_8.y -> logicalOperator_13.in2;
                        connect compareToZero_8.y -> logicalOperator_13.in1;
                        connect memory_8.out1 -> compareToZero_8.u;
                        connect memory_8.out1 -> compareToZero2_8.u;
                        connect in1 -> memory_8.in1;
                        connect in1 -> compareToZero1_8.u;
                        connect in1 -> compareToZero3_8.u;
                        connect memory1_8.out1 -> condition_27.in1;
                      }
                      component SwitchBlock4_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition_28{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock5_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition1_14{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock6_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition2_6{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock7_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition3_6{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock8_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition4_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock9_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition5_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock10_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition6_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock11_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition7_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock12_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition8_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock13_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition9_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock14_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition10_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock15_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition11_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock16_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition12_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock17_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition13_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock18_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition14_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock19_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition15_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock20_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition16_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock21_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition17_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock22_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition18_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock23_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition19_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock24_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition20_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock25_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition21_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock26_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition22_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock27_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition23_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock28_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition24_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock29_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition25_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock30_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition26_1{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock31_1{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition27_1{
                        port in B in1;
                        port out B out1;



                      }
                      component Condition28_1{
                        port in B in1;
                        port out B out1;



                      }
                      component Condition29_1{
                        port in B in1;
                        port out B out1;



                      }
                      component Condition30_1{
                        port in B in1;
                        port out B out1;



                      }
                      component Condition31_1{
                        port in B in1;
                        port out B out1;



                      }

                      instance Constant_41 constant_41;
                      instance Constant1_13 constant1_13;
                      instance Constant2_4 constant2_4;
                      instance Constant3_3 constant3_3;
                      instance Constant4_1 constant4_1;
                      instance Constant5_1 constant5_1;
                      instance Constant6_1 constant6_1;
                      instance Constant7_1 constant7_1;
                      instance CountDown_RE countDown_RE;
                      instance DEMO_FAS_Repeater_Time dEMO_FAS_Repeater_Time;
                      instance LogicalOperator_9 logicalOperator_9;
                      instance LogicalOperator1_7 logicalOperator1_7;
                      instance LogicalOperator2_7 logicalOperator2_7;
                      instance LogicalOperator3_2 logicalOperator3_2;
                      instance RelOp1_4 relOp1_4;
                      instance RelOp2_3 relOp2_3;
                      instance RelOp3_3 relOp3_3;
                      instance RelOp4_1 relOp4_1;
                      instance SwitchBlock_17 switchBlock_17;
                      instance SwitchBlock1_10 switchBlock1_10;
                      instance SwitchBlock2_6 switchBlock2_6;
                      instance SwitchBlock3_6 switchBlock3_6;
                      instance SysInit_2 sysInit_2;
                      instance UnitDelay_7 unitDelay_7;
                      instance VERSION_INFO_29 vERSION_INFO_29;
                      instance V_SetValueMinus_1 v_SetValueMinus_1;
                      instance V_SetValueMinusLvl2_1 v_SetValueMinusLvl2_1;
                      instance V_SetValuePlus_1 v_SetValuePlus_1;
                      instance V_SetValuePlusLvl2_1 v_SetValuePlusLvl2_1;
                      instance RisingEdgeDetector_3 risingEdgeDetector_3;
                      instance RisingEdgeDetector1_3 risingEdgeDetector1_3;
                      instance RisingEdgeDetector2_1 risingEdgeDetector2_1;
                      instance RisingEdgeDetector3_1 risingEdgeDetector3_1;
                      instance SwitchBlock4_3 switchBlock4_3;
                      instance Condition_28 condition_28;
                      instance SwitchBlock5_3 switchBlock5_3;
                      instance Condition1_14 condition1_14;
                      instance SwitchBlock6_3 switchBlock6_3;
                      instance Condition2_6 condition2_6;
                      instance SwitchBlock7_3 switchBlock7_3;
                      instance Condition3_6 condition3_6;
                      instance SwitchBlock8_2 switchBlock8_2;
                      instance Condition4_3 condition4_3;
                      instance SwitchBlock9_2 switchBlock9_2;
                      instance Condition5_3 condition5_3;
                      instance SwitchBlock10_1 switchBlock10_1;
                      instance Condition6_3 condition6_3;
                      instance SwitchBlock11_1 switchBlock11_1;
                      instance Condition7_3 condition7_3;
                      instance SwitchBlock12_1 switchBlock12_1;
                      instance Condition8_2 condition8_2;
                      instance SwitchBlock13_1 switchBlock13_1;
                      instance Condition9_2 condition9_2;
                      instance SwitchBlock14_1 switchBlock14_1;
                      instance Condition10_1 condition10_1;
                      instance SwitchBlock15_1 switchBlock15_1;
                      instance Condition11_1 condition11_1;
                      instance SwitchBlock16_1 switchBlock16_1;
                      instance Condition12_1 condition12_1;
                      instance SwitchBlock17_1 switchBlock17_1;
                      instance Condition13_1 condition13_1;
                      instance SwitchBlock18_1 switchBlock18_1;
                      instance Condition14_1 condition14_1;
                      instance SwitchBlock19_1 switchBlock19_1;
                      instance Condition15_1 condition15_1;
                      instance SwitchBlock20_1 switchBlock20_1;
                      instance Condition16_1 condition16_1;
                      instance SwitchBlock21_1 switchBlock21_1;
                      instance Condition17_1 condition17_1;
                      instance SwitchBlock22_1 switchBlock22_1;
                      instance Condition18_1 condition18_1;
                      instance SwitchBlock23_1 switchBlock23_1;
                      instance Condition19_1 condition19_1;
                      instance SwitchBlock24_1 switchBlock24_1;
                      instance Condition20_1 condition20_1;
                      instance SwitchBlock25_1 switchBlock25_1;
                      instance Condition21_1 condition21_1;
                      instance SwitchBlock26_1 switchBlock26_1;
                      instance Condition22_1 condition22_1;
                      instance SwitchBlock27_1 switchBlock27_1;
                      instance Condition23_1 condition23_1;
                      instance SwitchBlock28_1 switchBlock28_1;
                      instance Condition24_1 condition24_1;
                      instance SwitchBlock29_1 switchBlock29_1;
                      instance Condition25_1 condition25_1;
                      instance SwitchBlock30_1 switchBlock30_1;
                      instance Condition26_1 condition26_1;
                      instance SwitchBlock31_1 switchBlock31_1;
                      instance Condition27_1 condition27_1;
                      instance Condition28_1 condition28_1;
                      instance Condition29_1 condition29_1;
                      instance Condition30_1 condition30_1;
                      instance Condition31_1 condition31_1;

                      connect switchBlock4_3.out1 -> out1;
                      connect switchBlock8_2.out1 -> out2;
                      connect switchBlock12_1.out1 -> out3;
                      connect switchBlock16_1.out1 -> out4;
                      connect switchBlock20_1.out1 -> out5;
                      connect switchBlock24_1.out1 -> out6;
                      connect switchBlock28_1.out1 -> out7;
                      connect condition29_1.out1 -> switchBlock_17.condition;
                      connect condition31_1.out1 -> switchBlock2_6.condition;
                      connect condition28_1.out1 -> switchBlock3_6.condition;
                      connect condition30_1.out1 -> switchBlock1_10.condition;
                      connect in2 -> v_SetValuePlus_1.v_CCSetValue;
                      connect in4 -> v_SetValuePlusLvl2_1.v_CCSetValue;
                      connect in1 -> v_SetValueMinusLvl2_1.v_CCSetValue;
                      connect in3 -> v_SetValueMinus_1.v_CCSetValue;
                      connect switchBlock_17.out1 -> risingEdgeDetector_3.in1;
                      connect switchBlock3_6.out1 -> risingEdgeDetector1_3.in1;
                      connect switchBlock1_10.out1 -> risingEdgeDetector2_1.in1;
                      connect switchBlock2_6.out1 -> risingEdgeDetector3_1.in1;
                      connect risingEdgeDetector3_1.out1 -> condition_28.in1;
                      connect v_SetValuePlusLvl2_1.out1 -> switchBlock4_3.ifIn;
                      connect condition_28.out1 -> switchBlock4_3.condition;
                      connect risingEdgeDetector_3.out1 -> condition1_14.in1;
                      connect v_SetValuePlus_1.out1 -> switchBlock5_3.ifIn;
                      connect condition1_14.out1 -> switchBlock5_3.condition;
                      connect risingEdgeDetector1_3.out1 -> condition2_6.in1;
                      connect v_SetValueMinusLvl2_1.out1 -> switchBlock6_3.ifIn;
                      connect condition2_6.out1 -> switchBlock6_3.condition;
                      connect risingEdgeDetector2_1.out1 -> condition3_6.in1;
                      connect v_SetValueMinus_1.out1 -> switchBlock7_3.ifIn;
                      connect condition3_6.out1 -> switchBlock7_3.condition;
                      connect in5 -> switchBlock7_3.elseIn;
                      connect switchBlock7_3.out1 -> switchBlock6_3.elseIn;
                      connect switchBlock6_3.out1 -> switchBlock5_3.elseIn;
                      connect switchBlock5_3.out1 -> switchBlock4_3.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition4_3.in1;
                      connect v_SetValuePlusLvl2_1.out2 -> switchBlock8_2.ifIn;
                      connect condition4_3.out1 -> switchBlock8_2.condition;
                      connect risingEdgeDetector_3.out1 -> condition5_3.in1;
                      connect v_SetValuePlus_1.out2 -> switchBlock9_2.ifIn;
                      connect condition5_3.out1 -> switchBlock9_2.condition;
                      connect risingEdgeDetector1_3.out1 -> condition6_3.in1;
                      connect v_SetValueMinusLvl2_1.out2 -> switchBlock10_1.ifIn;
                      connect condition6_3.out1 -> switchBlock10_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition7_3.in1;
                      connect v_SetValueMinus_1.out2 -> switchBlock11_1.ifIn;
                      connect condition7_3.out1 -> switchBlock11_1.condition;
                      connect in6 -> switchBlock11_1.elseIn;
                      connect switchBlock11_1.out1 -> switchBlock10_1.elseIn;
                      connect switchBlock10_1.out1 -> switchBlock9_2.elseIn;
                      connect switchBlock9_2.out1 -> switchBlock8_2.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition8_2.in1;
                      connect v_SetValuePlusLvl2_1.out3 -> switchBlock12_1.ifIn;
                      connect condition8_2.out1 -> switchBlock12_1.condition;
                      connect risingEdgeDetector_3.out1 -> condition9_2.in1;
                      connect v_SetValuePlus_1.out3 -> switchBlock13_1.ifIn;
                      connect condition9_2.out1 -> switchBlock13_1.condition;
                      connect risingEdgeDetector1_3.out1 -> condition10_1.in1;
                      connect v_SetValueMinusLvl2_1.out3 -> switchBlock14_1.ifIn;
                      connect condition10_1.out1 -> switchBlock14_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition11_1.in1;
                      connect v_SetValueMinus_1.out3 -> switchBlock15_1.ifIn;
                      connect condition11_1.out1 -> switchBlock15_1.condition;
                      connect in7 -> switchBlock15_1.elseIn;
                      connect switchBlock15_1.out1 -> switchBlock14_1.elseIn;
                      connect switchBlock14_1.out1 -> switchBlock13_1.elseIn;
                      connect switchBlock13_1.out1 -> switchBlock12_1.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition12_1.in1;
                      connect v_SetValuePlusLvl2_1.out4 -> switchBlock16_1.ifIn;
                      connect condition12_1.out1 -> switchBlock16_1.condition;
                      connect risingEdgeDetector_3.out1 -> condition13_1.in1;
                      connect v_SetValuePlus_1.out4 -> switchBlock17_1.ifIn;
                      connect condition13_1.out1 -> switchBlock17_1.condition;
                      connect risingEdgeDetector1_3.out1 -> condition14_1.in1;
                      connect v_SetValueMinusLvl2_1.out4 -> switchBlock18_1.ifIn;
                      connect condition14_1.out1 -> switchBlock18_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition15_1.in1;
                      connect v_SetValueMinus_1.out4 -> switchBlock19_1.ifIn;
                      connect condition15_1.out1 -> switchBlock19_1.condition;
                      connect in8 -> switchBlock19_1.elseIn;
                      connect switchBlock19_1.out1 -> switchBlock18_1.elseIn;
                      connect switchBlock18_1.out1 -> switchBlock17_1.elseIn;
                      connect switchBlock17_1.out1 -> switchBlock16_1.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition16_1.in1;
                      connect v_SetValuePlusLvl2_1.out5 -> switchBlock20_1.ifIn;
                      connect condition16_1.out1 -> switchBlock20_1.condition;
                      connect risingEdgeDetector_3.out1 -> condition17_1.in1;
                      connect v_SetValuePlus_1.out5 -> switchBlock21_1.ifIn;
                      connect condition17_1.out1 -> switchBlock21_1.condition;
                      connect risingEdgeDetector1_3.out1 -> condition18_1.in1;
                      connect v_SetValueMinusLvl2_1.out5 -> switchBlock22_1.ifIn;
                      connect condition18_1.out1 -> switchBlock22_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition19_1.in1;
                      connect v_SetValueMinus_1.out5 -> switchBlock23_1.ifIn;
                      connect condition19_1.out1 -> switchBlock23_1.condition;
                      connect in9 -> switchBlock23_1.elseIn;
                      connect switchBlock23_1.out1 -> switchBlock22_1.elseIn;
                      connect switchBlock22_1.out1 -> switchBlock21_1.elseIn;
                      connect switchBlock21_1.out1 -> switchBlock20_1.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition20_1.in1;
                      connect v_SetValuePlusLvl2_1.out6 -> switchBlock24_1.ifIn;
                      connect condition20_1.out1 -> switchBlock24_1.condition;
                      connect risingEdgeDetector_3.out1 -> condition21_1.in1;
                      connect v_SetValuePlus_1.out6 -> switchBlock25_1.ifIn;
                      connect condition21_1.out1 -> switchBlock25_1.condition;
                      connect risingEdgeDetector1_3.out1 -> condition22_1.in1;
                      connect v_SetValueMinusLvl2_1.out6 -> switchBlock26_1.ifIn;
                      connect condition22_1.out1 -> switchBlock26_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition23_1.in1;
                      connect v_SetValueMinus_1.out6 -> switchBlock27_1.ifIn;
                      connect condition23_1.out1 -> switchBlock27_1.condition;
                      connect in10 -> switchBlock27_1.elseIn;
                      connect switchBlock27_1.out1 -> switchBlock26_1.elseIn;
                      connect switchBlock26_1.out1 -> switchBlock25_1.elseIn;
                      connect switchBlock25_1.out1 -> switchBlock24_1.elseIn;
                      connect risingEdgeDetector3_1.out1 -> condition24_1.in1;
                      connect v_SetValuePlusLvl2_1.out7 -> switchBlock28_1.ifIn;
                      connect condition24_1.out1 -> switchBlock28_1.condition;
                      connect risingEdgeDetector_3.out1 -> condition25_1.in1;
                      connect v_SetValuePlus_1.out7 -> switchBlock29_1.ifIn;
                      connect condition25_1.out1 -> switchBlock29_1.condition;
                      connect risingEdgeDetector1_3.out1 -> condition26_1.in1;
                      connect v_SetValueMinusLvl2_1.out7 -> switchBlock30_1.ifIn;
                      connect condition26_1.out1 -> switchBlock30_1.condition;
                      connect risingEdgeDetector2_1.out1 -> condition27_1.in1;
                      connect v_SetValueMinus_1.out7 -> switchBlock31_1.ifIn;
                      connect condition27_1.out1 -> switchBlock31_1.condition;
                      connect in11 -> switchBlock31_1.elseIn;
                      connect switchBlock31_1.out1 -> switchBlock30_1.elseIn;
                      connect switchBlock30_1.out1 -> switchBlock29_1.elseIn;
                      connect switchBlock29_1.out1 -> switchBlock28_1.elseIn;
                      connect logicalOperator2_7.out1 -> condition28_1.in1;
                      connect logicalOperator2_7.out1 -> condition29_1.in1;
                      connect logicalOperator2_7.out1 -> condition30_1.in1;
                      connect logicalOperator2_7.out1 -> condition31_1.in1;
                      connect constant7_1.out1 -> switchBlock3_6.ifIn;
                      connect logicalOperator2_7.out1 -> unitDelay_7.in1;
                      connect relOp4_1.out1 -> switchBlock3_6.elseIn;
                      connect relOp4_1.out1 -> logicalOperator3_2.in1;
                      connect leverDown_Stat -> relOp1_4.in1;
                      connect leverDown_Stat -> relOp4_1.in1;
                      connect constant6_1.out1 -> relOp4_1.in2;
                      connect leverUp_Stat -> relOp3_3.in1;
                      connect leverUp_Stat -> relOp2_3.in1;
                      connect constant5_1.out1 -> relOp2_3.in2;
                      connect constant4_1.out1 -> switchBlock2_6.ifIn;
                      connect relOp2_3.out1 -> switchBlock2_6.elseIn;
                      connect relOp2_3.out1 -> logicalOperator3_2.in4;
                      connect constant2_4.out1 -> relOp1_4.in2;
                      connect constant3_3.out1 -> relOp3_3.in2;
                      connect sysInit_2.y -> logicalOperator1_7.in3;
                      connect logicalOperator3_2.out1 -> logicalOperator_9.in1;
                      connect logicalOperator3_2.out1 -> countDown_RE.e;
                      connect constant1_13.out1 -> switchBlock1_10.ifIn;
                      connect constant_41.out1 -> switchBlock_17.ifIn;
                      connect unitDelay_7.out1 -> logicalOperator1_7.in1;
                      connect logicalOperator1_7.out1 -> countDown_RE.r;
                      connect logicalOperator_9.out1 -> logicalOperator1_7.in2;
                      connect dEMO_FAS_Repeater_Time.out1 -> countDown_RE.iV;
                      connect countDown_RE.y -> logicalOperator2_7.in1;
                      connect relOp3_3.out1 -> switchBlock_17.elseIn;
                      connect relOp3_3.out1 -> logicalOperator3_2.in3;
                      connect relOp1_4.out1 -> switchBlock1_10.elseIn;
                      connect relOp1_4.out1 -> logicalOperator3_2.in2;
                    }
                    component CC_ChangeSetValue_Lvl2_no_Repeater{
                      port in Number in1;
                      port in Q leverDown_stat;
                      port in Q leverUp_stat;
                      port out Number out1;
                      port out Number out10;
                      port out Number out11;
                      port out Number out12;
                      port out Number out13;
                      port out Number out14;
                      port out Number out15;
                      port out Number out16;
                      port out Number out17;
                      port out Number out18;
                      port out Number out2;
                      port out Number out3;
                      port out Number out4;
                      port out Number out5;
                      port out Number out6;
                      port out Number out7;
                      port out Number out8;
                      port out Number out9;

                      component Constant1_19{
                        port out Number out1;



                      }
                      component Constant2_5{
                        port out Number out1;



                      }
                      component Constant3_4{
                        port out Number out1;



                      }
                      component Constant4_2{
                        port out Number out1;



                      }
                      component RelOp1_5{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp2_4{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp3_4{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component RelOp4_2{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component VERSION_INFO_34{

                        component Copyright_34{



                        }

                        instance Copyright_34 copyright_34;

                      }
                      component V_SetValueMinus_2{
                        port out Number out1;
                        port out Number out10;
                        port out Number out11;
                        port out Number out12;
                        port out Number out13;
                        port out Number out14;
                        port out Number out15;
                        port out Number out16;
                        port out Number out17;
                        port out Number out18;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port out Number out8;
                        port out Number out9;
                        port in Number v_CCSetValue;

                        component Parameter_5{
                          port out Number out1;



                        }
                        component Sum_11{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component SwitchBlock_22{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component VERSION_INFO_35{

                          component Copyright_35{



                          }

                          instance Copyright_35 copyright_35;

                        }
                        component Condition_29{
                          port in Number in1;
                          port out B out1;



                        }

                        instance Parameter_5 parameter_5;
                        instance Sum_11 sum_11;
                        instance SwitchBlock_22 switchBlock_22;
                        instance VERSION_INFO_35 vERSION_INFO_35;
                        instance Condition_29 condition_29;

                        connect switchBlock_22.out1 -> out1;
                        connect switchBlock_22.out1 -> out10;
                        connect switchBlock_22.out1 -> out11;
                        connect switchBlock_22.out1 -> out12;
                        connect switchBlock_22.out1 -> out13;
                        connect switchBlock_22.out1 -> out14;
                        connect switchBlock_22.out1 -> out15;
                        connect switchBlock_22.out1 -> out16;
                        connect switchBlock_22.out1 -> out17;
                        connect switchBlock_22.out1 -> out18;
                        connect switchBlock_22.out1 -> out2;
                        connect switchBlock_22.out1 -> out3;
                        connect switchBlock_22.out1 -> out4;
                        connect switchBlock_22.out1 -> out5;
                        connect switchBlock_22.out1 -> out6;
                        connect switchBlock_22.out1 -> out7;
                        connect switchBlock_22.out1 -> out8;
                        connect switchBlock_22.out1 -> out9;
                        connect condition_29.out1 -> switchBlock_22.condition;
                        connect sum_11.out1 -> condition_29.in1;
                        connect sum_11.out1 -> switchBlock_22.ifIn;
                        connect v_CCSetValue -> sum_11.in1;
                        connect v_CCSetValue -> switchBlock_22.elseIn;
                        connect parameter_5.out1 -> sum_11.in2;
                      }
                      component V_SetValueMinusLvl2_2{
                        port out Number out1;
                        port out Number out10;
                        port out Number out11;
                        port out Number out12;
                        port out Number out13;
                        port out Number out14;
                        port out Number out15;
                        port out Number out16;
                        port out Number out17;
                        port out Number out18;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port out Number out8;
                        port out Number out9;
                        port in Number v_CCSetValue;

                        component Constant1_20{
                          port out Number out1;



                        }
                        component DEMO_FAS_CC_Lvl2_Round_3{
                          port out Number out1;



                        }
                        component MathFunction_3{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum_12{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component SwitchBlock1_12{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component SwitchBlock3_8{
                          port in B condition;
                          port in Number elseIn;
                          port in Number ifIn;
                          port out Number out1;



                        }
                        component VERSION_INFO_36{

                          component Copyright_36{



                          }

                          instance Copyright_36 copyright_36;

                        }
                        component Condition_30{
                          port in Number in1;
                          port out B out1;



                        }
                        component Condition1_15{
                          port in Number in1;
                          port out B out1;



                        }

                        instance Constant1_20 constant1_20;
                        instance DEMO_FAS_CC_Lvl2_Round_3 dEMO_FAS_CC_Lvl2_Round_3;
                        instance MathFunction_3 mathFunction_3;
                        instance Sum_12 sum_12;
                        instance SwitchBlock1_12 switchBlock1_12;
                        instance SwitchBlock3_8 switchBlock3_8;
                        instance VERSION_INFO_36 vERSION_INFO_36;
                        instance Condition_30 condition_30;
                        instance Condition1_15 condition1_15;

                        connect switchBlock1_12.out1 -> out1;
                        connect switchBlock1_12.out1 -> out10;
                        connect switchBlock1_12.out1 -> out11;
                        connect switchBlock1_12.out1 -> out12;
                        connect switchBlock1_12.out1 -> out13;
                        connect switchBlock1_12.out1 -> out14;
                        connect switchBlock1_12.out1 -> out15;
                        connect switchBlock1_12.out1 -> out16;
                        connect switchBlock1_12.out1 -> out17;
                        connect switchBlock1_12.out1 -> out18;
                        connect switchBlock1_12.out1 -> out2;
                        connect switchBlock1_12.out1 -> out3;
                        connect switchBlock1_12.out1 -> out4;
                        connect switchBlock1_12.out1 -> out5;
                        connect switchBlock1_12.out1 -> out6;
                        connect switchBlock1_12.out1 -> out7;
                        connect switchBlock1_12.out1 -> out8;
                        connect switchBlock1_12.out1 -> out9;
                        connect condition1_15.out1 -> switchBlock3_8.condition;
                        connect condition_30.out1 -> switchBlock1_12.condition;
                        connect sum_12.out1 -> condition_30.in1;
                        connect mathFunction_3.out1 -> condition1_15.in1;
                        connect switchBlock3_8.out1 -> sum_12.in2;
                        connect constant1_20.out1 -> switchBlock3_8.elseIn;
                        connect mathFunction_3.out1 -> switchBlock3_8.ifIn;
                        connect dEMO_FAS_CC_Lvl2_Round_3.out1 -> mathFunction_3.in2;
                        connect v_CCSetValue -> mathFunction_3.in1;
                        connect v_CCSetValue -> sum_12.in1;
                        connect v_CCSetValue -> switchBlock1_12.elseIn;
                        connect sum_12.out1 -> switchBlock1_12.ifIn;
                      }
                      component V_SetValuePlus_2{
                        port out Number out1;
                        port out Number out10;
                        port out Number out11;
                        port out Number out12;
                        port out Number out13;
                        port out Number out14;
                        port out Number out15;
                        port out Number out16;
                        port out Number out17;
                        port out Number out18;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port out Number out8;
                        port out Number out9;
                        port in Number v_CCSetValue;

                        component Parameter_6{
                          port out Number out1;



                        }
                        component Sum_13{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component VERSION_INFO_37{

                          component Copyright_37{



                          }

                          instance Copyright_37 copyright_37;

                        }

                        instance Parameter_6 parameter_6;
                        instance Sum_13 sum_13;
                        instance VERSION_INFO_37 vERSION_INFO_37;

                        connect sum_13.out1 -> out1;
                        connect sum_13.out1 -> out10;
                        connect sum_13.out1 -> out11;
                        connect sum_13.out1 -> out12;
                        connect sum_13.out1 -> out13;
                        connect sum_13.out1 -> out14;
                        connect sum_13.out1 -> out15;
                        connect sum_13.out1 -> out16;
                        connect sum_13.out1 -> out17;
                        connect sum_13.out1 -> out18;
                        connect sum_13.out1 -> out2;
                        connect sum_13.out1 -> out3;
                        connect sum_13.out1 -> out4;
                        connect sum_13.out1 -> out5;
                        connect sum_13.out1 -> out6;
                        connect sum_13.out1 -> out7;
                        connect sum_13.out1 -> out8;
                        connect sum_13.out1 -> out9;
                        connect parameter_6.out1 -> sum_13.in2;
                        connect v_CCSetValue -> sum_13.in1;
                      }
                      component V_SetValuePlusLvl2_2{
                        port out Number out1;
                        port out Number out10;
                        port out Number out11;
                        port out Number out12;
                        port out Number out13;
                        port out Number out14;
                        port out Number out15;
                        port out Number out16;
                        port out Number out17;
                        port out Number out18;
                        port out Number out2;
                        port out Number out3;
                        port out Number out4;
                        port out Number out5;
                        port out Number out6;
                        port out Number out7;
                        port out Number out8;
                        port out Number out9;
                        port in Number v_CCSetValue;

                        component DEMO_FAS_CC_Lvl2_Round_4{
                          port out Number out1;



                        }
                        component MathFunction_4{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum_14{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component Sum1_3{
                          port in Number in1;
                          port in Number in2;
                          port out Number out1;



                        }
                        component VERSION_INFO_38{

                          component Copyright_38{



                          }

                          instance Copyright_38 copyright_38;

                        }

                        instance DEMO_FAS_CC_Lvl2_Round_4 dEMO_FAS_CC_Lvl2_Round_4;
                        instance MathFunction_4 mathFunction_4;
                        instance Sum_14 sum_14;
                        instance Sum1_3 sum1_3;
                        instance VERSION_INFO_38 vERSION_INFO_38;

                        connect sum_14.out1 -> out1;
                        connect sum_14.out1 -> out10;
                        connect sum_14.out1 -> out11;
                        connect sum_14.out1 -> out12;
                        connect sum_14.out1 -> out13;
                        connect sum_14.out1 -> out14;
                        connect sum_14.out1 -> out15;
                        connect sum_14.out1 -> out16;
                        connect sum_14.out1 -> out17;
                        connect sum_14.out1 -> out18;
                        connect sum_14.out1 -> out2;
                        connect sum_14.out1 -> out3;
                        connect sum_14.out1 -> out4;
                        connect sum_14.out1 -> out5;
                        connect sum_14.out1 -> out6;
                        connect sum_14.out1 -> out7;
                        connect sum_14.out1 -> out8;
                        connect sum_14.out1 -> out9;
                        connect sum1_3.out1 -> sum_14.in2;
                        connect mathFunction_4.out1 -> sum1_3.in1;
                        connect dEMO_FAS_CC_Lvl2_Round_4.out1 -> mathFunction_4.in2;
                        connect dEMO_FAS_CC_Lvl2_Round_4.out1 -> sum1_3.in2;
                        connect v_CCSetValue -> mathFunction_4.in1;
                        connect v_CCSetValue -> sum_14.in1;
                      }
                      component RisingEdgeDetector_4{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_9{
                          port in B u;
                          port out B y;

                          component Compare_41{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_66{
                            port out Number out1;



                          }

                          instance Compare_41 compare_41;
                          instance Constant_66 constant_66;

                          connect compare_41.out1 -> y;
                          connect u -> compare_41.in1;
                          connect constant_66.out1 -> compare_41.in2;
                        }
                        component CompareToZero1_9{
                          port in B u;
                          port out B y;

                          component Compare_42{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_67{
                            port out Number out1;



                          }

                          instance Compare_42 compare_42;
                          instance Constant_67 constant_67;

                          connect compare_42.out1 -> y;
                          connect u -> compare_42.in1;
                          connect constant_67.out1 -> compare_42.in2;
                        }
                        component CompareToZero2_9{
                          port in B u;
                          port out B y;

                          component Compare_43{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_68{
                            port out Number out1;



                          }

                          instance Compare_43 compare_43;
                          instance Constant_68 constant_68;

                          connect compare_43.out1 -> y;
                          connect u -> compare_43.in1;
                          connect constant_68.out1 -> compare_43.in2;
                        }
                        component CompareToZero3_9{
                          port in B u;
                          port out B y;

                          component Compare_44{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_69{
                            port out Number out1;



                          }

                          instance Compare_44 compare_44;
                          instance Constant_69 constant_69;

                          connect compare_44.out1 -> y;
                          connect u -> compare_44.in1;
                          connect constant_69.out1 -> compare_44.in2;
                        }
                        component CompareToZero4_9{
                          port in B u;
                          port out B y;

                          component Compare_45{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_70{
                            port out Number out1;



                          }

                          instance Compare_45 compare_45;
                          instance Constant_70 constant_70;

                          connect compare_45.out1 -> y;
                          connect u -> compare_45.in1;
                          connect constant_70.out1 -> compare_45.in2;
                        }
                        component Constant_71{
                          port out Number out1;



                        }
                        component Constant1_21{
                          port out B out1;



                        }
                        component LogicalOperator_14{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_12{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_12{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_9{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_9{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_9{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_23{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_31{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_9 compareToZero_9;
                        instance CompareToZero1_9 compareToZero1_9;
                        instance CompareToZero2_9 compareToZero2_9;
                        instance CompareToZero3_9 compareToZero3_9;
                        instance CompareToZero4_9 compareToZero4_9;
                        instance Constant_71 constant_71;
                        instance Constant1_21 constant1_21;
                        instance LogicalOperator_14 logicalOperator_14;
                        instance LogicalOperator1_12 logicalOperator1_12;
                        instance LogicalOperator2_12 logicalOperator2_12;
                        instance Memory_9 memory_9;
                        instance Memory1_9 memory1_9;
                        instance Memory2_9 memory2_9;
                        instance SwitchBlock_23 switchBlock_23;
                        instance Condition_31 condition_31;

                        connect switchBlock_23.out1 -> out1;
                        connect compareToZero4_9.y -> logicalOperator_14.in3;
                        connect memory2_9.out1 -> compareToZero4_9.u;
                        connect logicalOperator_14.out1 -> logicalOperator2_12.in1;
                        connect constant1_21.out1 -> switchBlock_23.elseIn;
                        connect constant_71.out1 -> memory1_9.in1;
                        connect condition_31.out1 -> switchBlock_23.condition;
                        connect logicalOperator2_12.out1 -> switchBlock_23.ifIn;
                        connect logicalOperator2_12.out1 -> memory2_9.in1;
                        connect logicalOperator1_12.out1 -> logicalOperator2_12.in2;
                        connect compareToZero3_9.y -> logicalOperator1_12.in2;
                        connect compareToZero2_9.y -> logicalOperator1_12.in1;
                        connect compareToZero1_9.y -> logicalOperator_14.in2;
                        connect compareToZero_9.y -> logicalOperator_14.in1;
                        connect memory_9.out1 -> compareToZero_9.u;
                        connect memory_9.out1 -> compareToZero2_9.u;
                        connect in1 -> memory_9.in1;
                        connect in1 -> compareToZero1_9.u;
                        connect in1 -> compareToZero3_9.u;
                        connect memory1_9.out1 -> condition_31.in1;
                      }
                      component RisingEdgeDetector1_4{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_10{
                          port in B u;
                          port out B y;

                          component Compare_46{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_72{
                            port out Number out1;



                          }

                          instance Compare_46 compare_46;
                          instance Constant_72 constant_72;

                          connect compare_46.out1 -> y;
                          connect u -> compare_46.in1;
                          connect constant_72.out1 -> compare_46.in2;
                        }
                        component CompareToZero1_10{
                          port in B u;
                          port out B y;

                          component Compare_47{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_73{
                            port out Number out1;



                          }

                          instance Compare_47 compare_47;
                          instance Constant_73 constant_73;

                          connect compare_47.out1 -> y;
                          connect u -> compare_47.in1;
                          connect constant_73.out1 -> compare_47.in2;
                        }
                        component CompareToZero2_10{
                          port in B u;
                          port out B y;

                          component Compare_48{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_74{
                            port out Number out1;



                          }

                          instance Compare_48 compare_48;
                          instance Constant_74 constant_74;

                          connect compare_48.out1 -> y;
                          connect u -> compare_48.in1;
                          connect constant_74.out1 -> compare_48.in2;
                        }
                        component CompareToZero3_10{
                          port in B u;
                          port out B y;

                          component Compare_49{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_75{
                            port out Number out1;



                          }

                          instance Compare_49 compare_49;
                          instance Constant_75 constant_75;

                          connect compare_49.out1 -> y;
                          connect u -> compare_49.in1;
                          connect constant_75.out1 -> compare_49.in2;
                        }
                        component CompareToZero4_10{
                          port in B u;
                          port out B y;

                          component Compare_50{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_76{
                            port out Number out1;



                          }

                          instance Compare_50 compare_50;
                          instance Constant_76 constant_76;

                          connect compare_50.out1 -> y;
                          connect u -> compare_50.in1;
                          connect constant_76.out1 -> compare_50.in2;
                        }
                        component Constant_77{
                          port out Number out1;



                        }
                        component Constant1_22{
                          port out B out1;



                        }
                        component LogicalOperator_15{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_13{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_13{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_10{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_10{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_10{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_24{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_32{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_10 compareToZero_10;
                        instance CompareToZero1_10 compareToZero1_10;
                        instance CompareToZero2_10 compareToZero2_10;
                        instance CompareToZero3_10 compareToZero3_10;
                        instance CompareToZero4_10 compareToZero4_10;
                        instance Constant_77 constant_77;
                        instance Constant1_22 constant1_22;
                        instance LogicalOperator_15 logicalOperator_15;
                        instance LogicalOperator1_13 logicalOperator1_13;
                        instance LogicalOperator2_13 logicalOperator2_13;
                        instance Memory_10 memory_10;
                        instance Memory1_10 memory1_10;
                        instance Memory2_10 memory2_10;
                        instance SwitchBlock_24 switchBlock_24;
                        instance Condition_32 condition_32;

                        connect switchBlock_24.out1 -> out1;
                        connect compareToZero4_10.y -> logicalOperator_15.in3;
                        connect memory2_10.out1 -> compareToZero4_10.u;
                        connect logicalOperator_15.out1 -> logicalOperator2_13.in1;
                        connect constant1_22.out1 -> switchBlock_24.elseIn;
                        connect constant_77.out1 -> memory1_10.in1;
                        connect condition_32.out1 -> switchBlock_24.condition;
                        connect logicalOperator2_13.out1 -> switchBlock_24.ifIn;
                        connect logicalOperator2_13.out1 -> memory2_10.in1;
                        connect logicalOperator1_13.out1 -> logicalOperator2_13.in2;
                        connect compareToZero3_10.y -> logicalOperator1_13.in2;
                        connect compareToZero2_10.y -> logicalOperator1_13.in1;
                        connect compareToZero1_10.y -> logicalOperator_15.in2;
                        connect compareToZero_10.y -> logicalOperator_15.in1;
                        connect memory_10.out1 -> compareToZero_10.u;
                        connect memory_10.out1 -> compareToZero2_10.u;
                        connect in1 -> memory_10.in1;
                        connect in1 -> compareToZero1_10.u;
                        connect in1 -> compareToZero3_10.u;
                        connect memory1_10.out1 -> condition_32.in1;
                      }
                      component RisingEdgeDetector2_2{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_11{
                          port in B u;
                          port out B y;

                          component Compare_51{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_78{
                            port out Number out1;



                          }

                          instance Compare_51 compare_51;
                          instance Constant_78 constant_78;

                          connect compare_51.out1 -> y;
                          connect u -> compare_51.in1;
                          connect constant_78.out1 -> compare_51.in2;
                        }
                        component CompareToZero1_11{
                          port in B u;
                          port out B y;

                          component Compare_52{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_79{
                            port out Number out1;



                          }

                          instance Compare_52 compare_52;
                          instance Constant_79 constant_79;

                          connect compare_52.out1 -> y;
                          connect u -> compare_52.in1;
                          connect constant_79.out1 -> compare_52.in2;
                        }
                        component CompareToZero2_11{
                          port in B u;
                          port out B y;

                          component Compare_53{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_80{
                            port out Number out1;



                          }

                          instance Compare_53 compare_53;
                          instance Constant_80 constant_80;

                          connect compare_53.out1 -> y;
                          connect u -> compare_53.in1;
                          connect constant_80.out1 -> compare_53.in2;
                        }
                        component CompareToZero3_11{
                          port in B u;
                          port out B y;

                          component Compare_54{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_81{
                            port out Number out1;



                          }

                          instance Compare_54 compare_54;
                          instance Constant_81 constant_81;

                          connect compare_54.out1 -> y;
                          connect u -> compare_54.in1;
                          connect constant_81.out1 -> compare_54.in2;
                        }
                        component CompareToZero4_11{
                          port in B u;
                          port out B y;

                          component Compare_55{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_82{
                            port out Number out1;



                          }

                          instance Compare_55 compare_55;
                          instance Constant_82 constant_82;

                          connect compare_55.out1 -> y;
                          connect u -> compare_55.in1;
                          connect constant_82.out1 -> compare_55.in2;
                        }
                        component Constant_83{
                          port out Number out1;



                        }
                        component Constant1_23{
                          port out B out1;



                        }
                        component LogicalOperator_16{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_14{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_14{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_11{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_11{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_11{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_25{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_33{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_11 compareToZero_11;
                        instance CompareToZero1_11 compareToZero1_11;
                        instance CompareToZero2_11 compareToZero2_11;
                        instance CompareToZero3_11 compareToZero3_11;
                        instance CompareToZero4_11 compareToZero4_11;
                        instance Constant_83 constant_83;
                        instance Constant1_23 constant1_23;
                        instance LogicalOperator_16 logicalOperator_16;
                        instance LogicalOperator1_14 logicalOperator1_14;
                        instance LogicalOperator2_14 logicalOperator2_14;
                        instance Memory_11 memory_11;
                        instance Memory1_11 memory1_11;
                        instance Memory2_11 memory2_11;
                        instance SwitchBlock_25 switchBlock_25;
                        instance Condition_33 condition_33;

                        connect switchBlock_25.out1 -> out1;
                        connect compareToZero4_11.y -> logicalOperator_16.in3;
                        connect memory2_11.out1 -> compareToZero4_11.u;
                        connect logicalOperator_16.out1 -> logicalOperator2_14.in1;
                        connect constant1_23.out1 -> switchBlock_25.elseIn;
                        connect constant_83.out1 -> memory1_11.in1;
                        connect condition_33.out1 -> switchBlock_25.condition;
                        connect logicalOperator2_14.out1 -> switchBlock_25.ifIn;
                        connect logicalOperator2_14.out1 -> memory2_11.in1;
                        connect logicalOperator1_14.out1 -> logicalOperator2_14.in2;
                        connect compareToZero3_11.y -> logicalOperator1_14.in2;
                        connect compareToZero2_11.y -> logicalOperator1_14.in1;
                        connect compareToZero1_11.y -> logicalOperator_16.in2;
                        connect compareToZero_11.y -> logicalOperator_16.in1;
                        connect memory_11.out1 -> compareToZero_11.u;
                        connect memory_11.out1 -> compareToZero2_11.u;
                        connect in1 -> memory_11.in1;
                        connect in1 -> compareToZero1_11.u;
                        connect in1 -> compareToZero3_11.u;
                        connect memory1_11.out1 -> condition_33.in1;
                      }
                      component RisingEdgeDetector3_2{
                        port in B in1;
                        port out B out1;

                        component CompareToZero_12{
                          port in B u;
                          port out B y;

                          component Compare_56{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_84{
                            port out Number out1;



                          }

                          instance Compare_56 compare_56;
                          instance Constant_84 constant_84;

                          connect compare_56.out1 -> y;
                          connect u -> compare_56.in1;
                          connect constant_84.out1 -> compare_56.in2;
                        }
                        component CompareToZero1_12{
                          port in B u;
                          port out B y;

                          component Compare_57{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_85{
                            port out Number out1;



                          }

                          instance Compare_57 compare_57;
                          instance Constant_85 constant_85;

                          connect compare_57.out1 -> y;
                          connect u -> compare_57.in1;
                          connect constant_85.out1 -> compare_57.in2;
                        }
                        component CompareToZero2_12{
                          port in B u;
                          port out B y;

                          component Compare_58{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_86{
                            port out Number out1;



                          }

                          instance Compare_58 compare_58;
                          instance Constant_86 constant_86;

                          connect compare_58.out1 -> y;
                          connect u -> compare_58.in1;
                          connect constant_86.out1 -> compare_58.in2;
                        }
                        component CompareToZero3_12{
                          port in B u;
                          port out B y;

                          component Compare_59{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_87{
                            port out Number out1;



                          }

                          instance Compare_59 compare_59;
                          instance Constant_87 constant_87;

                          connect compare_59.out1 -> y;
                          connect u -> compare_59.in1;
                          connect constant_87.out1 -> compare_59.in2;
                        }
                        component CompareToZero4_12{
                          port in B u;
                          port out B y;

                          component Compare_60{
                            port in B in1;
                            port in Number in2;
                            port out B out1;



                          }
                          component Constant_88{
                            port out Number out1;



                          }

                          instance Compare_60 compare_60;
                          instance Constant_88 constant_88;

                          connect compare_60.out1 -> y;
                          connect u -> compare_60.in1;
                          connect constant_88.out1 -> compare_60.in2;
                        }
                        component Constant_89{
                          port out Number out1;



                        }
                        component Constant1_24{
                          port out B out1;



                        }
                        component LogicalOperator_17{
                          port in B in1;
                          port in B in2;
                          port in B in3;
                          port out B out1;



                        }
                        component LogicalOperator1_15{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component LogicalOperator2_15{
                          port in B in1;
                          port in B in2;
                          port out B out1;



                        }
                        component Memory_12{
                          port in B in1;
                          port out B out1;



                        }
                        component Memory1_12{
                          port in Number in1;
                          port out Number out1;



                        }
                        component Memory2_12{
                          port in B in1;
                          port out B out1;



                        }
                        component SwitchBlock_26{
                          port in B condition;
                          port in B elseIn;
                          port in B ifIn;
                          port out B out1;



                        }
                        component Condition_34{
                          port in Number in1;
                          port out B out1;



                        }

                        instance CompareToZero_12 compareToZero_12;
                        instance CompareToZero1_12 compareToZero1_12;
                        instance CompareToZero2_12 compareToZero2_12;
                        instance CompareToZero3_12 compareToZero3_12;
                        instance CompareToZero4_12 compareToZero4_12;
                        instance Constant_89 constant_89;
                        instance Constant1_24 constant1_24;
                        instance LogicalOperator_17 logicalOperator_17;
                        instance LogicalOperator1_15 logicalOperator1_15;
                        instance LogicalOperator2_15 logicalOperator2_15;
                        instance Memory_12 memory_12;
                        instance Memory1_12 memory1_12;
                        instance Memory2_12 memory2_12;
                        instance SwitchBlock_26 switchBlock_26;
                        instance Condition_34 condition_34;

                        connect switchBlock_26.out1 -> out1;
                        connect compareToZero4_12.y -> logicalOperator_17.in3;
                        connect memory2_12.out1 -> compareToZero4_12.u;
                        connect logicalOperator_17.out1 -> logicalOperator2_15.in1;
                        connect constant1_24.out1 -> switchBlock_26.elseIn;
                        connect constant_89.out1 -> memory1_12.in1;
                        connect condition_34.out1 -> switchBlock_26.condition;
                        connect logicalOperator2_15.out1 -> switchBlock_26.ifIn;
                        connect logicalOperator2_15.out1 -> memory2_12.in1;
                        connect logicalOperator1_15.out1 -> logicalOperator2_15.in2;
                        connect compareToZero3_12.y -> logicalOperator1_15.in2;
                        connect compareToZero2_12.y -> logicalOperator1_15.in1;
                        connect compareToZero1_12.y -> logicalOperator_17.in2;
                        connect compareToZero_12.y -> logicalOperator_17.in1;
                        connect memory_12.out1 -> compareToZero_12.u;
                        connect memory_12.out1 -> compareToZero2_12.u;
                        connect in1 -> memory_12.in1;
                        connect in1 -> compareToZero1_12.u;
                        connect in1 -> compareToZero3_12.u;
                        connect memory1_12.out1 -> condition_34.in1;
                      }
                      component SwitchBlock_27{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition_35{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock1_13{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition1_16{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock2_7{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition2_7{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock3_9{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition3_7{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock4_4{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition4_4{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock5_4{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition5_4{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock6_4{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition6_4{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock7_4{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition7_4{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock8_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition8_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock9_3{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition9_3{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock10_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition10_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock11_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition11_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock12_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition12_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock13_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition13_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock14_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition14_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock15_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition15_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock16_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition16_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock17_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition17_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock18_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition18_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock19_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition19_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock20_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition20_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock21_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition21_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock22_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition22_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock23_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition23_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock24_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition24_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock25_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition25_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock26_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition26_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock27_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition27_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock28_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition28_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock29_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition29_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock30_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition30_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock31_2{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition31_2{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock32{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition32{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock33{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition33{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock34{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition34{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock35{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition35{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock36{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition36{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock37{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition37{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock38{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition38{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock39{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition39{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock40{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition40{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock41{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition41{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock42{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition42{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock43{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition43{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock44{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition44{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock45{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition45{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock46{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition46{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock47{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition47{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock48{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition48{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock49{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition49{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock50{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition50{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock51{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition51{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock52{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition52{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock53{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition53{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock54{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition54{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock55{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition55{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock56{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition56{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock57{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition57{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock58{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition58{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock59{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition59{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock60{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition60{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock61{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition61{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock62{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition62{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock63{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition63{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock64{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition64{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock65{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition65{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock66{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition66{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock67{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition67{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock68{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition68{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock69{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition69{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock70{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition70{
                        port in B in1;
                        port out B out1;



                      }
                      component SwitchBlock71{
                        port in B condition;
                        port in Number elseIn;
                        port in Number ifIn;
                        port out Number out1;



                      }
                      component Condition71{
                        port in B in1;
                        port out B out1;



                      }

                      instance Constant1_19 constant1_19;
                      instance Constant2_5 constant2_5;
                      instance Constant3_4 constant3_4;
                      instance Constant4_2 constant4_2;
                      instance RelOp1_5 relOp1_5;
                      instance RelOp2_4 relOp2_4;
                      instance RelOp3_4 relOp3_4;
                      instance RelOp4_2 relOp4_2;
                      instance VERSION_INFO_34 vERSION_INFO_34;
                      instance V_SetValueMinus_2 v_SetValueMinus_2;
                      instance V_SetValueMinusLvl2_2 v_SetValueMinusLvl2_2;
                      instance V_SetValuePlus_2 v_SetValuePlus_2;
                      instance V_SetValuePlusLvl2_2 v_SetValuePlusLvl2_2;
                      instance RisingEdgeDetector_4 risingEdgeDetector_4;
                      instance RisingEdgeDetector1_4 risingEdgeDetector1_4;
                      instance RisingEdgeDetector2_2 risingEdgeDetector2_2;
                      instance RisingEdgeDetector3_2 risingEdgeDetector3_2;
                      instance SwitchBlock_27 switchBlock_27;
                      instance Condition_35 condition_35;
                      instance SwitchBlock1_13 switchBlock1_13;
                      instance Condition1_16 condition1_16;
                      instance SwitchBlock2_7 switchBlock2_7;
                      instance Condition2_7 condition2_7;
                      instance SwitchBlock3_9 switchBlock3_9;
                      instance Condition3_7 condition3_7;
                      instance SwitchBlock4_4 switchBlock4_4;
                      instance Condition4_4 condition4_4;
                      instance SwitchBlock5_4 switchBlock5_4;
                      instance Condition5_4 condition5_4;
                      instance SwitchBlock6_4 switchBlock6_4;
                      instance Condition6_4 condition6_4;
                      instance SwitchBlock7_4 switchBlock7_4;
                      instance Condition7_4 condition7_4;
                      instance SwitchBlock8_3 switchBlock8_3;
                      instance Condition8_3 condition8_3;
                      instance SwitchBlock9_3 switchBlock9_3;
                      instance Condition9_3 condition9_3;
                      instance SwitchBlock10_2 switchBlock10_2;
                      instance Condition10_2 condition10_2;
                      instance SwitchBlock11_2 switchBlock11_2;
                      instance Condition11_2 condition11_2;
                      instance SwitchBlock12_2 switchBlock12_2;
                      instance Condition12_2 condition12_2;
                      instance SwitchBlock13_2 switchBlock13_2;
                      instance Condition13_2 condition13_2;
                      instance SwitchBlock14_2 switchBlock14_2;
                      instance Condition14_2 condition14_2;
                      instance SwitchBlock15_2 switchBlock15_2;
                      instance Condition15_2 condition15_2;
                      instance SwitchBlock16_2 switchBlock16_2;
                      instance Condition16_2 condition16_2;
                      instance SwitchBlock17_2 switchBlock17_2;
                      instance Condition17_2 condition17_2;
                      instance SwitchBlock18_2 switchBlock18_2;
                      instance Condition18_2 condition18_2;
                      instance SwitchBlock19_2 switchBlock19_2;
                      instance Condition19_2 condition19_2;
                      instance SwitchBlock20_2 switchBlock20_2;
                      instance Condition20_2 condition20_2;
                      instance SwitchBlock21_2 switchBlock21_2;
                      instance Condition21_2 condition21_2;
                      instance SwitchBlock22_2 switchBlock22_2;
                      instance Condition22_2 condition22_2;
                      instance SwitchBlock23_2 switchBlock23_2;
                      instance Condition23_2 condition23_2;
                      instance SwitchBlock24_2 switchBlock24_2;
                      instance Condition24_2 condition24_2;
                      instance SwitchBlock25_2 switchBlock25_2;
                      instance Condition25_2 condition25_2;
                      instance SwitchBlock26_2 switchBlock26_2;
                      instance Condition26_2 condition26_2;
                      instance SwitchBlock27_2 switchBlock27_2;
                      instance Condition27_2 condition27_2;
                      instance SwitchBlock28_2 switchBlock28_2;
                      instance Condition28_2 condition28_2;
                      instance SwitchBlock29_2 switchBlock29_2;
                      instance Condition29_2 condition29_2;
                      instance SwitchBlock30_2 switchBlock30_2;
                      instance Condition30_2 condition30_2;
                      instance SwitchBlock31_2 switchBlock31_2;
                      instance Condition31_2 condition31_2;
                      instance SwitchBlock32 switchBlock32;
                      instance Condition32 condition32;
                      instance SwitchBlock33 switchBlock33;
                      instance Condition33 condition33;
                      instance SwitchBlock34 switchBlock34;
                      instance Condition34 condition34;
                      instance SwitchBlock35 switchBlock35;
                      instance Condition35 condition35;
                      instance SwitchBlock36 switchBlock36;
                      instance Condition36 condition36;
                      instance SwitchBlock37 switchBlock37;
                      instance Condition37 condition37;
                      instance SwitchBlock38 switchBlock38;
                      instance Condition38 condition38;
                      instance SwitchBlock39 switchBlock39;
                      instance Condition39 condition39;
                      instance SwitchBlock40 switchBlock40;
                      instance Condition40 condition40;
                      instance SwitchBlock41 switchBlock41;
                      instance Condition41 condition41;
                      instance SwitchBlock42 switchBlock42;
                      instance Condition42 condition42;
                      instance SwitchBlock43 switchBlock43;
                      instance Condition43 condition43;
                      instance SwitchBlock44 switchBlock44;
                      instance Condition44 condition44;
                      instance SwitchBlock45 switchBlock45;
                      instance Condition45 condition45;
                      instance SwitchBlock46 switchBlock46;
                      instance Condition46 condition46;
                      instance SwitchBlock47 switchBlock47;
                      instance Condition47 condition47;
                      instance SwitchBlock48 switchBlock48;
                      instance Condition48 condition48;
                      instance SwitchBlock49 switchBlock49;
                      instance Condition49 condition49;
                      instance SwitchBlock50 switchBlock50;
                      instance Condition50 condition50;
                      instance SwitchBlock51 switchBlock51;
                      instance Condition51 condition51;
                      instance SwitchBlock52 switchBlock52;
                      instance Condition52 condition52;
                      instance SwitchBlock53 switchBlock53;
                      instance Condition53 condition53;
                      instance SwitchBlock54 switchBlock54;
                      instance Condition54 condition54;
                      instance SwitchBlock55 switchBlock55;
                      instance Condition55 condition55;
                      instance SwitchBlock56 switchBlock56;
                      instance Condition56 condition56;
                      instance SwitchBlock57 switchBlock57;
                      instance Condition57 condition57;
                      instance SwitchBlock58 switchBlock58;
                      instance Condition58 condition58;
                      instance SwitchBlock59 switchBlock59;
                      instance Condition59 condition59;
                      instance SwitchBlock60 switchBlock60;
                      instance Condition60 condition60;
                      instance SwitchBlock61 switchBlock61;
                      instance Condition61 condition61;
                      instance SwitchBlock62 switchBlock62;
                      instance Condition62 condition62;
                      instance SwitchBlock63 switchBlock63;
                      instance Condition63 condition63;
                      instance SwitchBlock64 switchBlock64;
                      instance Condition64 condition64;
                      instance SwitchBlock65 switchBlock65;
                      instance Condition65 condition65;
                      instance SwitchBlock66 switchBlock66;
                      instance Condition66 condition66;
                      instance SwitchBlock67 switchBlock67;
                      instance Condition67 condition67;
                      instance SwitchBlock68 switchBlock68;
                      instance Condition68 condition68;
                      instance SwitchBlock69 switchBlock69;
                      instance Condition69 condition69;
                      instance SwitchBlock70 switchBlock70;
                      instance Condition70 condition70;
                      instance SwitchBlock71 switchBlock71;
                      instance Condition71 condition71;

                      connect switchBlock_27.out1 -> out1;
                      connect switchBlock36.out1 -> out10;
                      connect switchBlock40.out1 -> out11;
                      connect switchBlock44.out1 -> out12;
                      connect switchBlock48.out1 -> out13;
                      connect switchBlock52.out1 -> out14;
                      connect switchBlock56.out1 -> out15;
                      connect switchBlock60.out1 -> out16;
                      connect switchBlock64.out1 -> out17;
                      connect switchBlock68.out1 -> out18;
                      connect switchBlock4_4.out1 -> out2;
                      connect switchBlock8_3.out1 -> out3;
                      connect switchBlock12_2.out1 -> out4;
                      connect switchBlock16_2.out1 -> out5;
                      connect switchBlock20_2.out1 -> out6;
                      connect switchBlock24_2.out1 -> out7;
                      connect switchBlock28_2.out1 -> out8;
                      connect switchBlock32.out1 -> out9;
                      connect in1 -> v_SetValuePlusLvl2_2.v_CCSetValue;
                      connect in1 -> v_SetValuePlus_2.v_CCSetValue;
                      connect in1 -> v_SetValueMinus_2.v_CCSetValue;
                      connect in1 -> v_SetValueMinusLvl2_2.v_CCSetValue;
                      connect relOp2_4.out1 -> risingEdgeDetector_4.in1;
                      connect relOp3_4.out1 -> risingEdgeDetector1_4.in1;
                      connect relOp4_2.out1 -> risingEdgeDetector2_2.in1;
                      connect relOp1_5.out1 -> risingEdgeDetector3_2.in1;
                      connect risingEdgeDetector1_4.out1 -> condition_35.in1;
                      connect v_SetValuePlusLvl2_2.out1 -> switchBlock_27.ifIn;
                      connect condition_35.out1 -> switchBlock_27.condition;
                      connect risingEdgeDetector3_2.out1 -> condition1_16.in1;
                      connect v_SetValuePlus_2.out1 -> switchBlock1_13.ifIn;
                      connect condition1_16.out1 -> switchBlock1_13.condition;
                      connect risingEdgeDetector2_2.out1 -> condition2_7.in1;
                      connect v_SetValueMinusLvl2_2.out1 -> switchBlock2_7.ifIn;
                      connect condition2_7.out1 -> switchBlock2_7.condition;
                      connect risingEdgeDetector_4.out1 -> condition3_7.in1;
                      connect v_SetValueMinus_2.out1 -> switchBlock3_9.ifIn;
                      connect condition3_7.out1 -> switchBlock3_9.condition;
                      connect in1 -> switchBlock3_9.elseIn;
                      connect switchBlock3_9.out1 -> switchBlock2_7.elseIn;
                      connect switchBlock2_7.out1 -> switchBlock1_13.elseIn;
                      connect switchBlock1_13.out1 -> switchBlock_27.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition4_4.in1;
                      connect v_SetValuePlusLvl2_2.out2 -> switchBlock4_4.ifIn;
                      connect condition4_4.out1 -> switchBlock4_4.condition;
                      connect risingEdgeDetector3_2.out1 -> condition5_4.in1;
                      connect v_SetValuePlus_2.out2 -> switchBlock5_4.ifIn;
                      connect condition5_4.out1 -> switchBlock5_4.condition;
                      connect risingEdgeDetector2_2.out1 -> condition6_4.in1;
                      connect v_SetValueMinusLvl2_2.out2 -> switchBlock6_4.ifIn;
                      connect condition6_4.out1 -> switchBlock6_4.condition;
                      connect risingEdgeDetector_4.out1 -> condition7_4.in1;
                      connect v_SetValueMinus_2.out2 -> switchBlock7_4.ifIn;
                      connect condition7_4.out1 -> switchBlock7_4.condition;
                      connect in1 -> switchBlock7_4.elseIn;
                      connect switchBlock7_4.out1 -> switchBlock6_4.elseIn;
                      connect switchBlock6_4.out1 -> switchBlock5_4.elseIn;
                      connect switchBlock5_4.out1 -> switchBlock4_4.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition8_3.in1;
                      connect v_SetValuePlusLvl2_2.out3 -> switchBlock8_3.ifIn;
                      connect condition8_3.out1 -> switchBlock8_3.condition;
                      connect risingEdgeDetector3_2.out1 -> condition9_3.in1;
                      connect v_SetValuePlus_2.out3 -> switchBlock9_3.ifIn;
                      connect condition9_3.out1 -> switchBlock9_3.condition;
                      connect risingEdgeDetector2_2.out1 -> condition10_2.in1;
                      connect v_SetValueMinusLvl2_2.out3 -> switchBlock10_2.ifIn;
                      connect condition10_2.out1 -> switchBlock10_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition11_2.in1;
                      connect v_SetValueMinus_2.out3 -> switchBlock11_2.ifIn;
                      connect condition11_2.out1 -> switchBlock11_2.condition;
                      connect in1 -> switchBlock11_2.elseIn;
                      connect switchBlock11_2.out1 -> switchBlock10_2.elseIn;
                      connect switchBlock10_2.out1 -> switchBlock9_3.elseIn;
                      connect switchBlock9_3.out1 -> switchBlock8_3.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition12_2.in1;
                      connect v_SetValuePlusLvl2_2.out4 -> switchBlock12_2.ifIn;
                      connect condition12_2.out1 -> switchBlock12_2.condition;
                      connect risingEdgeDetector3_2.out1 -> condition13_2.in1;
                      connect v_SetValuePlus_2.out4 -> switchBlock13_2.ifIn;
                      connect condition13_2.out1 -> switchBlock13_2.condition;
                      connect risingEdgeDetector2_2.out1 -> condition14_2.in1;
                      connect v_SetValueMinusLvl2_2.out4 -> switchBlock14_2.ifIn;
                      connect condition14_2.out1 -> switchBlock14_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition15_2.in1;
                      connect v_SetValueMinus_2.out4 -> switchBlock15_2.ifIn;
                      connect condition15_2.out1 -> switchBlock15_2.condition;
                      connect in1 -> switchBlock15_2.elseIn;
                      connect switchBlock15_2.out1 -> switchBlock14_2.elseIn;
                      connect switchBlock14_2.out1 -> switchBlock13_2.elseIn;
                      connect switchBlock13_2.out1 -> switchBlock12_2.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition16_2.in1;
                      connect v_SetValuePlusLvl2_2.out5 -> switchBlock16_2.ifIn;
                      connect condition16_2.out1 -> switchBlock16_2.condition;
                      connect risingEdgeDetector3_2.out1 -> condition17_2.in1;
                      connect v_SetValuePlus_2.out5 -> switchBlock17_2.ifIn;
                      connect condition17_2.out1 -> switchBlock17_2.condition;
                      connect risingEdgeDetector2_2.out1 -> condition18_2.in1;
                      connect v_SetValueMinusLvl2_2.out5 -> switchBlock18_2.ifIn;
                      connect condition18_2.out1 -> switchBlock18_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition19_2.in1;
                      connect v_SetValueMinus_2.out5 -> switchBlock19_2.ifIn;
                      connect condition19_2.out1 -> switchBlock19_2.condition;
                      connect in1 -> switchBlock19_2.elseIn;
                      connect switchBlock19_2.out1 -> switchBlock18_2.elseIn;
                      connect switchBlock18_2.out1 -> switchBlock17_2.elseIn;
                      connect switchBlock17_2.out1 -> switchBlock16_2.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition20_2.in1;
                      connect v_SetValuePlusLvl2_2.out6 -> switchBlock20_2.ifIn;
                      connect condition20_2.out1 -> switchBlock20_2.condition;
                      connect risingEdgeDetector3_2.out1 -> condition21_2.in1;
                      connect v_SetValuePlus_2.out6 -> switchBlock21_2.ifIn;
                      connect condition21_2.out1 -> switchBlock21_2.condition;
                      connect risingEdgeDetector2_2.out1 -> condition22_2.in1;
                      connect v_SetValueMinusLvl2_2.out6 -> switchBlock22_2.ifIn;
                      connect condition22_2.out1 -> switchBlock22_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition23_2.in1;
                      connect v_SetValueMinus_2.out6 -> switchBlock23_2.ifIn;
                      connect condition23_2.out1 -> switchBlock23_2.condition;
                      connect in1 -> switchBlock23_2.elseIn;
                      connect switchBlock23_2.out1 -> switchBlock22_2.elseIn;
                      connect switchBlock22_2.out1 -> switchBlock21_2.elseIn;
                      connect switchBlock21_2.out1 -> switchBlock20_2.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition24_2.in1;
                      connect v_SetValuePlusLvl2_2.out7 -> switchBlock24_2.ifIn;
                      connect condition24_2.out1 -> switchBlock24_2.condition;
                      connect risingEdgeDetector3_2.out1 -> condition25_2.in1;
                      connect v_SetValuePlus_2.out7 -> switchBlock25_2.ifIn;
                      connect condition25_2.out1 -> switchBlock25_2.condition;
                      connect risingEdgeDetector2_2.out1 -> condition26_2.in1;
                      connect v_SetValueMinusLvl2_2.out7 -> switchBlock26_2.ifIn;
                      connect condition26_2.out1 -> switchBlock26_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition27_2.in1;
                      connect v_SetValueMinus_2.out7 -> switchBlock27_2.ifIn;
                      connect condition27_2.out1 -> switchBlock27_2.condition;
                      connect in1 -> switchBlock27_2.elseIn;
                      connect switchBlock27_2.out1 -> switchBlock26_2.elseIn;
                      connect switchBlock26_2.out1 -> switchBlock25_2.elseIn;
                      connect switchBlock25_2.out1 -> switchBlock24_2.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition28_2.in1;
                      connect v_SetValuePlusLvl2_2.out8 -> switchBlock28_2.ifIn;
                      connect condition28_2.out1 -> switchBlock28_2.condition;
                      connect risingEdgeDetector3_2.out1 -> condition29_2.in1;
                      connect v_SetValuePlus_2.out8 -> switchBlock29_2.ifIn;
                      connect condition29_2.out1 -> switchBlock29_2.condition;
                      connect risingEdgeDetector2_2.out1 -> condition30_2.in1;
                      connect v_SetValueMinusLvl2_2.out8 -> switchBlock30_2.ifIn;
                      connect condition30_2.out1 -> switchBlock30_2.condition;
                      connect risingEdgeDetector_4.out1 -> condition31_2.in1;
                      connect v_SetValueMinus_2.out8 -> switchBlock31_2.ifIn;
                      connect condition31_2.out1 -> switchBlock31_2.condition;
                      connect in1 -> switchBlock31_2.elseIn;
                      connect switchBlock31_2.out1 -> switchBlock30_2.elseIn;
                      connect switchBlock30_2.out1 -> switchBlock29_2.elseIn;
                      connect switchBlock29_2.out1 -> switchBlock28_2.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition32.in1;
                      connect v_SetValuePlusLvl2_2.out9 -> switchBlock32.ifIn;
                      connect condition32.out1 -> switchBlock32.condition;
                      connect risingEdgeDetector3_2.out1 -> condition33.in1;
                      connect v_SetValuePlus_2.out9 -> switchBlock33.ifIn;
                      connect condition33.out1 -> switchBlock33.condition;
                      connect risingEdgeDetector2_2.out1 -> condition34.in1;
                      connect v_SetValueMinusLvl2_2.out9 -> switchBlock34.ifIn;
                      connect condition34.out1 -> switchBlock34.condition;
                      connect risingEdgeDetector_4.out1 -> condition35.in1;
                      connect v_SetValueMinus_2.out9 -> switchBlock35.ifIn;
                      connect condition35.out1 -> switchBlock35.condition;
                      connect in1 -> switchBlock35.elseIn;
                      connect switchBlock35.out1 -> switchBlock34.elseIn;
                      connect switchBlock34.out1 -> switchBlock33.elseIn;
                      connect switchBlock33.out1 -> switchBlock32.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition36.in1;
                      connect v_SetValuePlusLvl2_2.out10 -> switchBlock36.ifIn;
                      connect condition36.out1 -> switchBlock36.condition;
                      connect risingEdgeDetector3_2.out1 -> condition37.in1;
                      connect v_SetValuePlus_2.out10 -> switchBlock37.ifIn;
                      connect condition37.out1 -> switchBlock37.condition;
                      connect risingEdgeDetector2_2.out1 -> condition38.in1;
                      connect v_SetValueMinusLvl2_2.out10 -> switchBlock38.ifIn;
                      connect condition38.out1 -> switchBlock38.condition;
                      connect risingEdgeDetector_4.out1 -> condition39.in1;
                      connect v_SetValueMinus_2.out10 -> switchBlock39.ifIn;
                      connect condition39.out1 -> switchBlock39.condition;
                      connect in1 -> switchBlock39.elseIn;
                      connect switchBlock39.out1 -> switchBlock38.elseIn;
                      connect switchBlock38.out1 -> switchBlock37.elseIn;
                      connect switchBlock37.out1 -> switchBlock36.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition40.in1;
                      connect v_SetValuePlusLvl2_2.out11 -> switchBlock40.ifIn;
                      connect condition40.out1 -> switchBlock40.condition;
                      connect risingEdgeDetector3_2.out1 -> condition41.in1;
                      connect v_SetValuePlus_2.out11 -> switchBlock41.ifIn;
                      connect condition41.out1 -> switchBlock41.condition;
                      connect risingEdgeDetector2_2.out1 -> condition42.in1;
                      connect v_SetValueMinusLvl2_2.out11 -> switchBlock42.ifIn;
                      connect condition42.out1 -> switchBlock42.condition;
                      connect risingEdgeDetector_4.out1 -> condition43.in1;
                      connect v_SetValueMinus_2.out11 -> switchBlock43.ifIn;
                      connect condition43.out1 -> switchBlock43.condition;
                      connect in1 -> switchBlock43.elseIn;
                      connect switchBlock43.out1 -> switchBlock42.elseIn;
                      connect switchBlock42.out1 -> switchBlock41.elseIn;
                      connect switchBlock41.out1 -> switchBlock40.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition44.in1;
                      connect v_SetValuePlusLvl2_2.out12 -> switchBlock44.ifIn;
                      connect condition44.out1 -> switchBlock44.condition;
                      connect risingEdgeDetector3_2.out1 -> condition45.in1;
                      connect v_SetValuePlus_2.out12 -> switchBlock45.ifIn;
                      connect condition45.out1 -> switchBlock45.condition;
                      connect risingEdgeDetector2_2.out1 -> condition46.in1;
                      connect v_SetValueMinusLvl2_2.out12 -> switchBlock46.ifIn;
                      connect condition46.out1 -> switchBlock46.condition;
                      connect risingEdgeDetector_4.out1 -> condition47.in1;
                      connect v_SetValueMinus_2.out12 -> switchBlock47.ifIn;
                      connect condition47.out1 -> switchBlock47.condition;
                      connect in1 -> switchBlock47.elseIn;
                      connect switchBlock47.out1 -> switchBlock46.elseIn;
                      connect switchBlock46.out1 -> switchBlock45.elseIn;
                      connect switchBlock45.out1 -> switchBlock44.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition48.in1;
                      connect v_SetValuePlusLvl2_2.out13 -> switchBlock48.ifIn;
                      connect condition48.out1 -> switchBlock48.condition;
                      connect risingEdgeDetector3_2.out1 -> condition49.in1;
                      connect v_SetValuePlus_2.out13 -> switchBlock49.ifIn;
                      connect condition49.out1 -> switchBlock49.condition;
                      connect risingEdgeDetector2_2.out1 -> condition50.in1;
                      connect v_SetValueMinusLvl2_2.out13 -> switchBlock50.ifIn;
                      connect condition50.out1 -> switchBlock50.condition;
                      connect risingEdgeDetector_4.out1 -> condition51.in1;
                      connect v_SetValueMinus_2.out13 -> switchBlock51.ifIn;
                      connect condition51.out1 -> switchBlock51.condition;
                      connect in1 -> switchBlock51.elseIn;
                      connect switchBlock51.out1 -> switchBlock50.elseIn;
                      connect switchBlock50.out1 -> switchBlock49.elseIn;
                      connect switchBlock49.out1 -> switchBlock48.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition52.in1;
                      connect v_SetValuePlusLvl2_2.out14 -> switchBlock52.ifIn;
                      connect condition52.out1 -> switchBlock52.condition;
                      connect risingEdgeDetector3_2.out1 -> condition53.in1;
                      connect v_SetValuePlus_2.out14 -> switchBlock53.ifIn;
                      connect condition53.out1 -> switchBlock53.condition;
                      connect risingEdgeDetector2_2.out1 -> condition54.in1;
                      connect v_SetValueMinusLvl2_2.out14 -> switchBlock54.ifIn;
                      connect condition54.out1 -> switchBlock54.condition;
                      connect risingEdgeDetector_4.out1 -> condition55.in1;
                      connect v_SetValueMinus_2.out14 -> switchBlock55.ifIn;
                      connect condition55.out1 -> switchBlock55.condition;
                      connect in1 -> switchBlock55.elseIn;
                      connect switchBlock55.out1 -> switchBlock54.elseIn;
                      connect switchBlock54.out1 -> switchBlock53.elseIn;
                      connect switchBlock53.out1 -> switchBlock52.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition56.in1;
                      connect v_SetValuePlusLvl2_2.out15 -> switchBlock56.ifIn;
                      connect condition56.out1 -> switchBlock56.condition;
                      connect risingEdgeDetector3_2.out1 -> condition57.in1;
                      connect v_SetValuePlus_2.out15 -> switchBlock57.ifIn;
                      connect condition57.out1 -> switchBlock57.condition;
                      connect risingEdgeDetector2_2.out1 -> condition58.in1;
                      connect v_SetValueMinusLvl2_2.out15 -> switchBlock58.ifIn;
                      connect condition58.out1 -> switchBlock58.condition;
                      connect risingEdgeDetector_4.out1 -> condition59.in1;
                      connect v_SetValueMinus_2.out15 -> switchBlock59.ifIn;
                      connect condition59.out1 -> switchBlock59.condition;
                      connect in1 -> switchBlock59.elseIn;
                      connect switchBlock59.out1 -> switchBlock58.elseIn;
                      connect switchBlock58.out1 -> switchBlock57.elseIn;
                      connect switchBlock57.out1 -> switchBlock56.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition60.in1;
                      connect v_SetValuePlusLvl2_2.out16 -> switchBlock60.ifIn;
                      connect condition60.out1 -> switchBlock60.condition;
                      connect risingEdgeDetector3_2.out1 -> condition61.in1;
                      connect v_SetValuePlus_2.out16 -> switchBlock61.ifIn;
                      connect condition61.out1 -> switchBlock61.condition;
                      connect risingEdgeDetector2_2.out1 -> condition62.in1;
                      connect v_SetValueMinusLvl2_2.out16 -> switchBlock62.ifIn;
                      connect condition62.out1 -> switchBlock62.condition;
                      connect risingEdgeDetector_4.out1 -> condition63.in1;
                      connect v_SetValueMinus_2.out16 -> switchBlock63.ifIn;
                      connect condition63.out1 -> switchBlock63.condition;
                      connect in1 -> switchBlock63.elseIn;
                      connect switchBlock63.out1 -> switchBlock62.elseIn;
                      connect switchBlock62.out1 -> switchBlock61.elseIn;
                      connect switchBlock61.out1 -> switchBlock60.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition64.in1;
                      connect v_SetValuePlusLvl2_2.out17 -> switchBlock64.ifIn;
                      connect condition64.out1 -> switchBlock64.condition;
                      connect risingEdgeDetector3_2.out1 -> condition65.in1;
                      connect v_SetValuePlus_2.out17 -> switchBlock65.ifIn;
                      connect condition65.out1 -> switchBlock65.condition;
                      connect risingEdgeDetector2_2.out1 -> condition66.in1;
                      connect v_SetValueMinusLvl2_2.out17 -> switchBlock66.ifIn;
                      connect condition66.out1 -> switchBlock66.condition;
                      connect risingEdgeDetector_4.out1 -> condition67.in1;
                      connect v_SetValueMinus_2.out17 -> switchBlock67.ifIn;
                      connect condition67.out1 -> switchBlock67.condition;
                      connect in1 -> switchBlock67.elseIn;
                      connect switchBlock67.out1 -> switchBlock66.elseIn;
                      connect switchBlock66.out1 -> switchBlock65.elseIn;
                      connect switchBlock65.out1 -> switchBlock64.elseIn;
                      connect risingEdgeDetector1_4.out1 -> condition68.in1;
                      connect v_SetValuePlusLvl2_2.out18 -> switchBlock68.ifIn;
                      connect condition68.out1 -> switchBlock68.condition;
                      connect risingEdgeDetector3_2.out1 -> condition69.in1;
                      connect v_SetValuePlus_2.out18 -> switchBlock69.ifIn;
                      connect condition69.out1 -> switchBlock69.condition;
                      connect risingEdgeDetector2_2.out1 -> condition70.in1;
                      connect v_SetValueMinusLvl2_2.out18 -> switchBlock70.ifIn;
                      connect condition70.out1 -> switchBlock70.condition;
                      connect risingEdgeDetector_4.out1 -> condition71.in1;
                      connect v_SetValueMinus_2.out18 -> switchBlock71.ifIn;
                      connect condition71.out1 -> switchBlock71.condition;
                      connect in1 -> switchBlock71.elseIn;
                      connect switchBlock71.out1 -> switchBlock70.elseIn;
                      connect switchBlock70.out1 -> switchBlock69.elseIn;
                      connect switchBlock69.out1 -> switchBlock68.elseIn;
                      connect constant4_2.out1 -> relOp4_2.in2;
                      connect leverDown_stat -> relOp2_4.in1;
                      connect leverDown_stat -> relOp4_2.in1;
                      connect constant2_5.out1 -> relOp2_4.in2;
                      connect constant1_19.out1 -> relOp1_5.in2;
                      connect constant3_4.out1 -> relOp3_4.in2;
                      connect leverUp_stat -> relOp3_4.in1;
                      connect leverUp_stat -> relOp1_5.in1;
                    }
                    component Constant_90{
                      port out Number out1;



                    }
                    component VERSION_INFO_39{

                      component Copyright_39{



                      }

                      instance Copyright_39 copyright_39;

                    }
                    component SwitchBlock_28{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition_36{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock1_14{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition1_17{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock2_8{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition2_8{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock3_10{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition3_8{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock4_5{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition4_5{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock5_5{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition5_5{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock6_5{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition6_5{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock7_5{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition7_5{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock8_4{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition8_4{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock9_4{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition9_4{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock10_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition10_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock11_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition11_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock12_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition12_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock13_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition13_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock14_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition14_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock15_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition15_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock16_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition16_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock17_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition17_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock18_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition18_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock19_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition19_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock20_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition20_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock21_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition21_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock22_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition22_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock23_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition23_3{
                      port in Number in1;
                      port out B out1;



                    }
                    component SwitchBlock24_3{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition24_3{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CC_ChangeSetValue_Lvl2_Repeater cC_ChangeSetValue_Lvl2_Repeater;
                    instance CC_ChangeSetValue_Lvl2_no_Repeater cC_ChangeSetValue_Lvl2_no_Repeater;
                    instance Constant_90 constant_90;
                    instance VERSION_INFO_39 vERSION_INFO_39;
                    instance SwitchBlock_28 switchBlock_28;
                    instance Condition_36 condition_36;
                    instance SwitchBlock1_14 switchBlock1_14;
                    instance Condition1_17 condition1_17;
                    instance SwitchBlock2_8 switchBlock2_8;
                    instance Condition2_8 condition2_8;
                    instance SwitchBlock3_10 switchBlock3_10;
                    instance Condition3_8 condition3_8;
                    instance SwitchBlock4_5 switchBlock4_5;
                    instance Condition4_5 condition4_5;
                    instance SwitchBlock5_5 switchBlock5_5;
                    instance Condition5_5 condition5_5;
                    instance SwitchBlock6_5 switchBlock6_5;
                    instance Condition6_5 condition6_5;
                    instance SwitchBlock7_5 switchBlock7_5;
                    instance Condition7_5 condition7_5;
                    instance SwitchBlock8_4 switchBlock8_4;
                    instance Condition8_4 condition8_4;
                    instance SwitchBlock9_4 switchBlock9_4;
                    instance Condition9_4 condition9_4;
                    instance SwitchBlock10_3 switchBlock10_3;
                    instance Condition10_3 condition10_3;
                    instance SwitchBlock11_3 switchBlock11_3;
                    instance Condition11_3 condition11_3;
                    instance SwitchBlock12_3 switchBlock12_3;
                    instance Condition12_3 condition12_3;
                    instance SwitchBlock13_3 switchBlock13_3;
                    instance Condition13_3 condition13_3;
                    instance SwitchBlock14_3 switchBlock14_3;
                    instance Condition14_3 condition14_3;
                    instance SwitchBlock15_3 switchBlock15_3;
                    instance Condition15_3 condition15_3;
                    instance SwitchBlock16_3 switchBlock16_3;
                    instance Condition16_3 condition16_3;
                    instance SwitchBlock17_3 switchBlock17_3;
                    instance Condition17_3 condition17_3;
                    instance SwitchBlock18_3 switchBlock18_3;
                    instance Condition18_3 condition18_3;
                    instance SwitchBlock19_3 switchBlock19_3;
                    instance Condition19_3 condition19_3;
                    instance SwitchBlock20_3 switchBlock20_3;
                    instance Condition20_3 condition20_3;
                    instance SwitchBlock21_3 switchBlock21_3;
                    instance Condition21_3 condition21_3;
                    instance SwitchBlock22_3 switchBlock22_3;
                    instance Condition22_3 condition22_3;
                    instance SwitchBlock23_3 switchBlock23_3;
                    instance Condition23_3 condition23_3;
                    instance SwitchBlock24_3 switchBlock24_3;
                    instance Condition24_3 condition24_3;

                    connect switchBlock5_5.out1 -> out1;
                    connect switchBlock8_4.out1 -> out2;
                    connect switchBlock11_3.out1 -> out3;
                    connect switchBlock14_3.out1 -> out4;
                    connect switchBlock17_3.out1 -> out5;
                    connect switchBlock20_3.out1 -> out6;
                    connect switchBlock23_3.out1 -> out7;
                    connect in1 -> cC_ChangeSetValue_Lvl2_no_Repeater.in1;
                    connect constant_90.out1 -> condition_36.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out1 -> switchBlock_28.ifIn;
                    connect condition_36.out1 -> switchBlock_28.condition;
                    connect in1 -> switchBlock_28.elseIn;
                    connect switchBlock_28.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in1;
                    connect constant_90.out1 -> condition1_17.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out2 -> switchBlock1_14.ifIn;
                    connect condition1_17.out1 -> switchBlock1_14.condition;
                    connect in1 -> switchBlock1_14.elseIn;
                    connect switchBlock1_14.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in2;
                    connect constant_90.out1 -> condition2_8.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out3 -> switchBlock2_8.ifIn;
                    connect condition2_8.out1 -> switchBlock2_8.condition;
                    connect in1 -> switchBlock2_8.elseIn;
                    connect switchBlock2_8.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in3;
                    connect constant_90.out1 -> condition3_8.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out4 -> switchBlock3_10.ifIn;
                    connect condition3_8.out1 -> switchBlock3_10.condition;
                    connect in1 -> switchBlock3_10.elseIn;
                    connect switchBlock3_10.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in4;
                    connect constant_90.out1 -> condition4_5.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out5 -> switchBlock4_5.ifIn;
                    connect condition4_5.out1 -> switchBlock4_5.condition;
                    connect in1 -> switchBlock4_5.elseIn;
                    connect switchBlock4_5.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in5;
                    connect constant_90.out1 -> condition5_5.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out1 -> switchBlock5_5.ifIn;
                    connect condition5_5.out1 -> switchBlock5_5.condition;
                    connect constant_90.out1 -> condition6_5.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out6 -> switchBlock6_5.ifIn;
                    connect condition6_5.out1 -> switchBlock6_5.condition;
                    connect in1 -> switchBlock6_5.elseIn;
                    connect switchBlock6_5.out1 -> switchBlock5_5.elseIn;
                    connect constant_90.out1 -> condition7_5.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out7 -> switchBlock7_5.ifIn;
                    connect condition7_5.out1 -> switchBlock7_5.condition;
                    connect in1 -> switchBlock7_5.elseIn;
                    connect switchBlock7_5.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in6;
                    connect constant_90.out1 -> condition8_4.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out2 -> switchBlock8_4.ifIn;
                    connect condition8_4.out1 -> switchBlock8_4.condition;
                    connect constant_90.out1 -> condition9_4.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out8 -> switchBlock9_4.ifIn;
                    connect condition9_4.out1 -> switchBlock9_4.condition;
                    connect in1 -> switchBlock9_4.elseIn;
                    connect switchBlock9_4.out1 -> switchBlock8_4.elseIn;
                    connect constant_90.out1 -> condition10_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out9 -> switchBlock10_3.ifIn;
                    connect condition10_3.out1 -> switchBlock10_3.condition;
                    connect in1 -> switchBlock10_3.elseIn;
                    connect switchBlock10_3.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in7;
                    connect constant_90.out1 -> condition11_3.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out3 -> switchBlock11_3.ifIn;
                    connect condition11_3.out1 -> switchBlock11_3.condition;
                    connect constant_90.out1 -> condition12_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out10 -> switchBlock12_3.ifIn;
                    connect condition12_3.out1 -> switchBlock12_3.condition;
                    connect in1 -> switchBlock12_3.elseIn;
                    connect switchBlock12_3.out1 -> switchBlock11_3.elseIn;
                    connect constant_90.out1 -> condition13_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out11 -> switchBlock13_3.ifIn;
                    connect condition13_3.out1 -> switchBlock13_3.condition;
                    connect in1 -> switchBlock13_3.elseIn;
                    connect switchBlock13_3.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in8;
                    connect constant_90.out1 -> condition14_3.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out4 -> switchBlock14_3.ifIn;
                    connect condition14_3.out1 -> switchBlock14_3.condition;
                    connect constant_90.out1 -> condition15_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out12 -> switchBlock15_3.ifIn;
                    connect condition15_3.out1 -> switchBlock15_3.condition;
                    connect in1 -> switchBlock15_3.elseIn;
                    connect switchBlock15_3.out1 -> switchBlock14_3.elseIn;
                    connect constant_90.out1 -> condition16_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out13 -> switchBlock16_3.ifIn;
                    connect condition16_3.out1 -> switchBlock16_3.condition;
                    connect in1 -> switchBlock16_3.elseIn;
                    connect switchBlock16_3.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in9;
                    connect constant_90.out1 -> condition17_3.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out5 -> switchBlock17_3.ifIn;
                    connect condition17_3.out1 -> switchBlock17_3.condition;
                    connect constant_90.out1 -> condition18_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out14 -> switchBlock18_3.ifIn;
                    connect condition18_3.out1 -> switchBlock18_3.condition;
                    connect in1 -> switchBlock18_3.elseIn;
                    connect switchBlock18_3.out1 -> switchBlock17_3.elseIn;
                    connect constant_90.out1 -> condition19_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out15 -> switchBlock19_3.ifIn;
                    connect condition19_3.out1 -> switchBlock19_3.condition;
                    connect in1 -> switchBlock19_3.elseIn;
                    connect switchBlock19_3.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in10;
                    connect constant_90.out1 -> condition20_3.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out6 -> switchBlock20_3.ifIn;
                    connect condition20_3.out1 -> switchBlock20_3.condition;
                    connect constant_90.out1 -> condition21_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out16 -> switchBlock21_3.ifIn;
                    connect condition21_3.out1 -> switchBlock21_3.condition;
                    connect in1 -> switchBlock21_3.elseIn;
                    connect switchBlock21_3.out1 -> switchBlock20_3.elseIn;
                    connect constant_90.out1 -> condition22_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out17 -> switchBlock22_3.ifIn;
                    connect condition22_3.out1 -> switchBlock22_3.condition;
                    connect in1 -> switchBlock22_3.elseIn;
                    connect switchBlock22_3.out1 -> cC_ChangeSetValue_Lvl2_Repeater.in11;
                    connect constant_90.out1 -> condition23_3.in1;
                    connect cC_ChangeSetValue_Lvl2_Repeater.out7 -> switchBlock23_3.ifIn;
                    connect condition23_3.out1 -> switchBlock23_3.condition;
                    connect constant_90.out1 -> condition24_3.in1;
                    connect cC_ChangeSetValue_Lvl2_no_Repeater.out18 -> switchBlock24_3.ifIn;
                    connect condition24_3.out1 -> switchBlock24_3.condition;
                    connect in1 -> switchBlock24_3.elseIn;
                    connect switchBlock24_3.out1 -> switchBlock23_3.elseIn;
                    connect leverDown_stat -> cC_ChangeSetValue_Lvl2_no_Repeater.leverDown_stat;
                    connect leverDown_stat -> cC_ChangeSetValue_Lvl2_Repeater.leverDown_Stat;
                    connect leverUp_stat -> cC_ChangeSetValue_Lvl2_no_Repeater.leverUp_stat;
                    connect leverUp_stat -> cC_ChangeSetValue_Lvl2_Repeater.leverUp_Stat;
                  }
                  component CC_InitialSetValue{
                    port in Number in1;
                    port in Number in2;
                    port in Number in3;
                    port in Number in4;
                    port out Number out1;
                    port out Number out2;
                    port out Number out3;
                    port in Q v_Vehicle_kmh;

                    component CC_NoInitialSetValue{
                      port out Number out1;
                      port out Number out2;
                      port out Number out3;
                      port in Q v_Vehicle_kmh;

                      component VERSION_INFO_40{

                        component Copyright_40{



                        }

                        instance Copyright_40 copyright_40;

                      }

                      instance VERSION_INFO_40 vERSION_INFO_40;

                      connect v_Vehicle_kmh -> out1;
                      connect v_Vehicle_kmh -> out2;
                      connect v_Vehicle_kmh -> out3;
                    }
                    component Constant_91{
                      port out Number out1;



                    }
                    component RelOp_7{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component VERSION_INFO_41{

                      component Copyright_41{



                      }

                      instance Copyright_41 copyright_41;

                    }
                    component SwitchBlock_29{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition_37{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock1_15{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition1_18{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock2_9{
                      port in B condition;
                      port in Number elseIn;
                      port in Number ifIn;
                      port out Number out1;



                    }
                    component Condition2_9{
                      port in B in1;
                      port out B out1;



                    }

                    instance CC_NoInitialSetValue cC_NoInitialSetValue;
                    instance Constant_91 constant_91;
                    instance RelOp_7 relOp_7;
                    instance VERSION_INFO_41 vERSION_INFO_41;
                    instance SwitchBlock_29 switchBlock_29;
                    instance Condition_37 condition_37;
                    instance SwitchBlock1_15 switchBlock1_15;
                    instance Condition1_18 condition1_18;
                    instance SwitchBlock2_9 switchBlock2_9;
                    instance Condition2_9 condition2_9;

                    connect switchBlock_29.out1 -> out1;
                    connect switchBlock1_15.out1 -> out2;
                    connect switchBlock2_9.out1 -> out3;
                    connect in1 -> relOp_7.in1;
                    connect relOp_7.out1 -> condition_37.in1;
                    connect cC_NoInitialSetValue.out1 -> switchBlock_29.ifIn;
                    connect condition_37.out1 -> switchBlock_29.condition;
                    connect in2 -> switchBlock_29.elseIn;
                    connect relOp_7.out1 -> condition1_18.in1;
                    connect cC_NoInitialSetValue.out2 -> switchBlock1_15.ifIn;
                    connect condition1_18.out1 -> switchBlock1_15.condition;
                    connect in3 -> switchBlock1_15.elseIn;
                    connect relOp_7.out1 -> condition2_9.in1;
                    connect cC_NoInitialSetValue.out3 -> switchBlock2_9.ifIn;
                    connect condition2_9.out1 -> switchBlock2_9.condition;
                    connect in4 -> switchBlock2_9.elseIn;
                    connect constant_91.out1 -> relOp_7.in2;
                    connect v_Vehicle_kmh -> cC_NoInitialSetValue.v_Vehicle_kmh;
                  }
                  component CC_OnSet_SetValue{
                    port out Number out1;
                    port out Number out2;
                    port out Number out3;
                    port in Q v_Vehicle_kmh;

                    component VERSION_INFO_42{

                      component Copyright_42{



                      }

                      instance Copyright_42 copyright_42;

                    }

                    instance VERSION_INFO_42 vERSION_INFO_42;

                    connect v_Vehicle_kmh -> out1;
                    connect v_Vehicle_kmh -> out2;
                    connect v_Vehicle_kmh -> out3;
                  }
                  component CC_StartUpSetValue{
                    port out Number out1;
                    port out Number out2;
                    port out Number out3;

                    component Constant_92{
                      port out Number out1;



                    }
                    component VERSION_INFO_43{

                      component Copyright_43{



                      }

                      instance Copyright_43 copyright_43;

                    }

                    instance Constant_92 constant_92;
                    instance VERSION_INFO_43 vERSION_INFO_43;

                    connect constant_92.out1 -> out1;
                    connect constant_92.out1 -> out2;
                    connect constant_92.out1 -> out3;
                  }
                  component CompareToZero_13{
                    port in Number u;
                    port out B y;

                    component Compare_61{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_93{
                      port out Number out1;



                    }

                    instance Compare_61 compare_61;
                    instance Constant_93 constant_93;

                    connect compare_61.out1 -> y;
                    connect u -> compare_61.in1;
                    connect constant_93.out1 -> compare_61.in2;
                  }
                  component CompareToZero1_13{
                    port in Number u;
                    port out B y;

                    component Compare_62{
                      port in Number in1;
                      port in Number in2;
                      port out B out1;



                    }
                    component Constant_94{
                      port out Number out1;



                    }

                    instance Compare_62 compare_62;
                    instance Constant_94 constant_94;

                    connect compare_62.out1 -> y;
                    connect u -> compare_62.in1;
                    connect constant_94.out1 -> compare_62.in2;
                  }
                  component Constant_95{
                    port out Number out1;



                  }
                  component EdgeRising_2{
                    port in B iV;
                    port in B r;
                    port in B u;
                    port out B y;

                    component LogOp_A_4{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogOp_N_6{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_U_4{
                      port in B in1;
                      port out B out1;



                    }
                    component Switch_R_7{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_38{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_A_4 logOp_A_4;
                    instance LogOp_N_6 logOp_N_6;
                    instance Memory_U_4 memory_U_4;
                    instance Switch_R_7 switch_R_7;
                    instance Condition_38 condition_38;

                    connect logOp_A_4.out1 -> y;
                    connect condition_38.out1 -> switch_R_7.condition;
                    connect r -> condition_38.in1;
                    connect logOp_N_6.out1 -> logOp_A_4.in2;
                    connect u -> logOp_A_4.in1;
                    connect u -> memory_U_4.in1;
                    connect switch_R_7.out1 -> logOp_N_6.in1;
                    connect memory_U_4.out1 -> switch_R_7.elseIn;
                    connect iV -> switch_R_7.ifIn;
                  }
                  component FalseBlock_3{
                    port out B y;

                    component Zero_5{
                      port out B out1;



                    }

                    instance Zero_5 zero_5;

                    connect zero_5.out1 -> y;
                  }
                  component LogicalOperator_18{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator1_16{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator2_16{
                    port in B in1;
                    port in B in2;
                    port in B in3;
                    port out B out1;



                  }
                  component LogicalOperator3_3{
                    port in B in1;
                    port in B in2;
                    port out B out1;



                  }
                  component LogicalOperator4_2{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator5_2{
                    port in B in1;
                    port out B out1;



                  }
                  component LogicalOperator6_2{
                    port in B in1;
                    port out B out1;



                  }
                  component RSFlipFlop_3{
                    port out B nOT_Q;
                    port out B q;
                    port in B r;
                    port in B s;

                    component LogOp_N_7{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory_Q_3{
                      port in B in1;
                      port out B out1;



                    }
                    component One_S_3{
                      port out B out1;



                    }
                    component Switch_R_8{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Switch_S_3{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Zero_R_3{
                      port out B out1;



                    }
                    component Condition_39{
                      port in B in1;
                      port out B out1;



                    }
                    component Condition1_19{
                      port in B in1;
                      port out B out1;



                    }

                    instance LogOp_N_7 logOp_N_7;
                    instance Memory_Q_3 memory_Q_3;
                    instance One_S_3 one_S_3;
                    instance Switch_R_8 switch_R_8;
                    instance Switch_S_3 switch_S_3;
                    instance Zero_R_3 zero_R_3;
                    instance Condition_39 condition_39;
                    instance Condition1_19 condition1_19;

                    connect logOp_N_7.out1 -> nOT_Q;
                    connect switch_R_8.out1 -> q;
                    connect condition_39.out1 -> switch_S_3.condition;
                    connect condition1_19.out1 -> switch_R_8.condition;
                    connect s -> condition_39.in1;
                    connect r -> condition1_19.in1;
                    connect memory_Q_3.out1 -> switch_S_3.elseIn;
                    connect switch_S_3.out1 -> switch_R_8.elseIn;
                    connect one_S_3.out1 -> switch_S_3.ifIn;
                    connect switch_R_8.out1 -> memory_Q_3.in1;
                    connect switch_R_8.out1 -> logOp_N_7.in1;
                    connect zero_R_3.out1 -> switch_R_8.ifIn;
                  }
                  component RelOp_8{
                    port in Number in1;
                    port in Number in2;
                    port out B out1;



                  }
                  component SysInit_3{
                    port out Number y;

                    component Memory_Init_3{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Zero_Init_3{
                      port out Number out1;



                    }

                    instance Memory_Init_3 memory_Init_3;
                    instance Zero_Init_3 zero_Init_3;

                    connect memory_Init_3.out1 -> y;
                    connect zero_Init_3.out1 -> memory_Init_3.in1;
                  }
                  component Terminator_4{
                    port in B in1;



                  }
                  component VERSION_INFO_44{

                    component Copyright_44{



                    }

                    instance Copyright_44 copyright_44;

                  }
                  component RisingEdgeDetector_5{
                    port in B in1;
                    port out B out1;

                    component CompareToZero_14{
                      port in B u;
                      port out B y;

                      component Compare_63{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_96{
                        port out Number out1;



                      }

                      instance Compare_63 compare_63;
                      instance Constant_96 constant_96;

                      connect compare_63.out1 -> y;
                      connect u -> compare_63.in1;
                      connect constant_96.out1 -> compare_63.in2;
                    }
                    component CompareToZero1_14{
                      port in B u;
                      port out B y;

                      component Compare_64{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_97{
                        port out Number out1;



                      }

                      instance Compare_64 compare_64;
                      instance Constant_97 constant_97;

                      connect compare_64.out1 -> y;
                      connect u -> compare_64.in1;
                      connect constant_97.out1 -> compare_64.in2;
                    }
                    component CompareToZero2_13{
                      port in B u;
                      port out B y;

                      component Compare_65{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_98{
                        port out Number out1;



                      }

                      instance Compare_65 compare_65;
                      instance Constant_98 constant_98;

                      connect compare_65.out1 -> y;
                      connect u -> compare_65.in1;
                      connect constant_98.out1 -> compare_65.in2;
                    }
                    component CompareToZero3_13{
                      port in B u;
                      port out B y;

                      component Compare_66{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_99{
                        port out Number out1;



                      }

                      instance Compare_66 compare_66;
                      instance Constant_99 constant_99;

                      connect compare_66.out1 -> y;
                      connect u -> compare_66.in1;
                      connect constant_99.out1 -> compare_66.in2;
                    }
                    component CompareToZero4_13{
                      port in B u;
                      port out B y;

                      component Compare_67{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_100{
                        port out Number out1;



                      }

                      instance Compare_67 compare_67;
                      instance Constant_100 constant_100;

                      connect compare_67.out1 -> y;
                      connect u -> compare_67.in1;
                      connect constant_100.out1 -> compare_67.in2;
                    }
                    component Constant_101{
                      port out Number out1;



                    }
                    component Constant1_25{
                      port out B out1;



                    }
                    component LogicalOperator_19{
                      port in B in1;
                      port in B in2;
                      port in B in3;
                      port out B out1;



                    }
                    component LogicalOperator1_17{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogicalOperator2_17{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component Memory_13{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory1_13{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory2_13{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock_30{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_40{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CompareToZero_14 compareToZero_14;
                    instance CompareToZero1_14 compareToZero1_14;
                    instance CompareToZero2_13 compareToZero2_13;
                    instance CompareToZero3_13 compareToZero3_13;
                    instance CompareToZero4_13 compareToZero4_13;
                    instance Constant_101 constant_101;
                    instance Constant1_25 constant1_25;
                    instance LogicalOperator_19 logicalOperator_19;
                    instance LogicalOperator1_17 logicalOperator1_17;
                    instance LogicalOperator2_17 logicalOperator2_17;
                    instance Memory_13 memory_13;
                    instance Memory1_13 memory1_13;
                    instance Memory2_13 memory2_13;
                    instance SwitchBlock_30 switchBlock_30;
                    instance Condition_40 condition_40;

                    connect switchBlock_30.out1 -> out1;
                    connect compareToZero4_13.y -> logicalOperator_19.in3;
                    connect memory2_13.out1 -> compareToZero4_13.u;
                    connect logicalOperator_19.out1 -> logicalOperator2_17.in1;
                    connect constant1_25.out1 -> switchBlock_30.elseIn;
                    connect constant_101.out1 -> memory1_13.in1;
                    connect condition_40.out1 -> switchBlock_30.condition;
                    connect logicalOperator2_17.out1 -> switchBlock_30.ifIn;
                    connect logicalOperator2_17.out1 -> memory2_13.in1;
                    connect logicalOperator1_17.out1 -> logicalOperator2_17.in2;
                    connect compareToZero3_13.y -> logicalOperator1_17.in2;
                    connect compareToZero2_13.y -> logicalOperator1_17.in1;
                    connect compareToZero1_14.y -> logicalOperator_19.in2;
                    connect compareToZero_14.y -> logicalOperator_19.in1;
                    connect memory_13.out1 -> compareToZero_14.u;
                    connect memory_13.out1 -> compareToZero2_13.u;
                    connect in1 -> memory_13.in1;
                    connect in1 -> compareToZero1_14.u;
                    connect in1 -> compareToZero3_13.u;
                    connect memory1_13.out1 -> condition_40.in1;
                  }
                  component RisingEdgeDetector1_5{
                    port in Number in1;
                    port out B out1;

                    component CompareToZero_15{
                      port in Number u;
                      port out B y;

                      component Compare_68{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_102{
                        port out Number out1;



                      }

                      instance Compare_68 compare_68;
                      instance Constant_102 constant_102;

                      connect compare_68.out1 -> y;
                      connect u -> compare_68.in1;
                      connect constant_102.out1 -> compare_68.in2;
                    }
                    component CompareToZero1_15{
                      port in Number u;
                      port out B y;

                      component Compare_69{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_103{
                        port out Number out1;



                      }

                      instance Compare_69 compare_69;
                      instance Constant_103 constant_103;

                      connect compare_69.out1 -> y;
                      connect u -> compare_69.in1;
                      connect constant_103.out1 -> compare_69.in2;
                    }
                    component CompareToZero2_14{
                      port in Number u;
                      port out B y;

                      component Compare_70{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_104{
                        port out Number out1;



                      }

                      instance Compare_70 compare_70;
                      instance Constant_104 constant_104;

                      connect compare_70.out1 -> y;
                      connect u -> compare_70.in1;
                      connect constant_104.out1 -> compare_70.in2;
                    }
                    component CompareToZero3_14{
                      port in Number u;
                      port out B y;

                      component Compare_71{
                        port in Number in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_105{
                        port out Number out1;



                      }

                      instance Compare_71 compare_71;
                      instance Constant_105 constant_105;

                      connect compare_71.out1 -> y;
                      connect u -> compare_71.in1;
                      connect constant_105.out1 -> compare_71.in2;
                    }
                    component CompareToZero4_14{
                      port in B u;
                      port out B y;

                      component Compare_72{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_106{
                        port out Number out1;



                      }

                      instance Compare_72 compare_72;
                      instance Constant_106 constant_106;

                      connect compare_72.out1 -> y;
                      connect u -> compare_72.in1;
                      connect constant_106.out1 -> compare_72.in2;
                    }
                    component Constant_107{
                      port out Number out1;



                    }
                    component Constant1_26{
                      port out B out1;



                    }
                    component LogicalOperator_20{
                      port in B in1;
                      port in B in2;
                      port in B in3;
                      port out B out1;



                    }
                    component LogicalOperator1_18{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogicalOperator2_18{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component Memory_14{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory1_14{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory2_14{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock_31{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_41{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CompareToZero_15 compareToZero_15;
                    instance CompareToZero1_15 compareToZero1_15;
                    instance CompareToZero2_14 compareToZero2_14;
                    instance CompareToZero3_14 compareToZero3_14;
                    instance CompareToZero4_14 compareToZero4_14;
                    instance Constant_107 constant_107;
                    instance Constant1_26 constant1_26;
                    instance LogicalOperator_20 logicalOperator_20;
                    instance LogicalOperator1_18 logicalOperator1_18;
                    instance LogicalOperator2_18 logicalOperator2_18;
                    instance Memory_14 memory_14;
                    instance Memory1_14 memory1_14;
                    instance Memory2_14 memory2_14;
                    instance SwitchBlock_31 switchBlock_31;
                    instance Condition_41 condition_41;

                    connect switchBlock_31.out1 -> out1;
                    connect compareToZero4_14.y -> logicalOperator_20.in3;
                    connect memory2_14.out1 -> compareToZero4_14.u;
                    connect logicalOperator_20.out1 -> logicalOperator2_18.in1;
                    connect constant1_26.out1 -> switchBlock_31.elseIn;
                    connect constant_107.out1 -> memory1_14.in1;
                    connect condition_41.out1 -> switchBlock_31.condition;
                    connect logicalOperator2_18.out1 -> switchBlock_31.ifIn;
                    connect logicalOperator2_18.out1 -> memory2_14.in1;
                    connect logicalOperator1_18.out1 -> logicalOperator2_18.in2;
                    connect compareToZero3_14.y -> logicalOperator1_18.in2;
                    connect compareToZero2_14.y -> logicalOperator1_18.in1;
                    connect compareToZero1_15.y -> logicalOperator_20.in2;
                    connect compareToZero_15.y -> logicalOperator_20.in1;
                    connect memory_14.out1 -> compareToZero_15.u;
                    connect memory_14.out1 -> compareToZero2_14.u;
                    connect in1 -> memory_14.in1;
                    connect in1 -> compareToZero1_15.u;
                    connect in1 -> compareToZero3_14.u;
                    connect memory1_14.out1 -> condition_41.in1;
                  }
                  component RisingEdgeDetector2_3{
                    port in B in1;
                    port out B out1;

                    component CompareToZero_16{
                      port in B u;
                      port out B y;

                      component Compare_73{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_108{
                        port out Number out1;



                      }

                      instance Compare_73 compare_73;
                      instance Constant_108 constant_108;

                      connect compare_73.out1 -> y;
                      connect u -> compare_73.in1;
                      connect constant_108.out1 -> compare_73.in2;
                    }
                    component CompareToZero1_16{
                      port in B u;
                      port out B y;

                      component Compare_74{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_109{
                        port out Number out1;



                      }

                      instance Compare_74 compare_74;
                      instance Constant_109 constant_109;

                      connect compare_74.out1 -> y;
                      connect u -> compare_74.in1;
                      connect constant_109.out1 -> compare_74.in2;
                    }
                    component CompareToZero2_15{
                      port in B u;
                      port out B y;

                      component Compare_75{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_110{
                        port out Number out1;



                      }

                      instance Compare_75 compare_75;
                      instance Constant_110 constant_110;

                      connect compare_75.out1 -> y;
                      connect u -> compare_75.in1;
                      connect constant_110.out1 -> compare_75.in2;
                    }
                    component CompareToZero3_15{
                      port in B u;
                      port out B y;

                      component Compare_76{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_111{
                        port out Number out1;



                      }

                      instance Compare_76 compare_76;
                      instance Constant_111 constant_111;

                      connect compare_76.out1 -> y;
                      connect u -> compare_76.in1;
                      connect constant_111.out1 -> compare_76.in2;
                    }
                    component CompareToZero4_15{
                      port in B u;
                      port out B y;

                      component Compare_77{
                        port in B in1;
                        port in Number in2;
                        port out B out1;



                      }
                      component Constant_112{
                        port out Number out1;



                      }

                      instance Compare_77 compare_77;
                      instance Constant_112 constant_112;

                      connect compare_77.out1 -> y;
                      connect u -> compare_77.in1;
                      connect constant_112.out1 -> compare_77.in2;
                    }
                    component Constant_113{
                      port out Number out1;



                    }
                    component Constant1_27{
                      port out B out1;



                    }
                    component LogicalOperator_21{
                      port in B in1;
                      port in B in2;
                      port in B in3;
                      port out B out1;



                    }
                    component LogicalOperator1_19{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component LogicalOperator2_19{
                      port in B in1;
                      port in B in2;
                      port out B out1;



                    }
                    component Memory_15{
                      port in B in1;
                      port out B out1;



                    }
                    component Memory1_15{
                      port in Number in1;
                      port out Number out1;



                    }
                    component Memory2_15{
                      port in B in1;
                      port out B out1;



                    }
                    component SwitchBlock_32{
                      port in B condition;
                      port in B elseIn;
                      port in B ifIn;
                      port out B out1;



                    }
                    component Condition_42{
                      port in Number in1;
                      port out B out1;



                    }

                    instance CompareToZero_16 compareToZero_16;
                    instance CompareToZero1_16 compareToZero1_16;
                    instance CompareToZero2_15 compareToZero2_15;
                    instance CompareToZero3_15 compareToZero3_15;
                    instance CompareToZero4_15 compareToZero4_15;
                    instance Constant_113 constant_113;
                    instance Constant1_27 constant1_27;
                    instance LogicalOperator_21 logicalOperator_21;
                    instance LogicalOperator1_19 logicalOperator1_19;
                    instance LogicalOperator2_19 logicalOperator2_19;
                    instance Memory_15 memory_15;
                    instance Memory1_15 memory1_15;
                    instance Memory2_15 memory2_15;
                    instance SwitchBlock_32 switchBlock_32;
                    instance Condition_42 condition_42;

                    connect switchBlock_32.out1 -> out1;
                    connect compareToZero4_15.y -> logicalOperator_21.in3;
                    connect memory2_15.out1 -> compareToZero4_15.u;
                    connect logicalOperator_21.out1 -> logicalOperator2_19.in1;
                    connect constant1_27.out1 -> switchBlock_32.elseIn;
                    connect constant_113.out1 -> memory1_15.in1;
                    connect condition_42.out1 -> switchBlock_32.condition;
                    connect logicalOperator2_19.out1 -> switchBlock_32.ifIn;
                    connect logicalOperator2_19.out1 -> memory2_15.in1;
                    connect logicalOperator1_19.out1 -> logicalOperator2_19.in2;
                    connect compareToZero3_15.y -> logicalOperator1_19.in2;
                    connect compareToZero2_15.y -> logicalOperator1_19.in1;
                    connect compareToZero1_16.y -> logicalOperator_21.in2;
                    connect compareToZero_16.y -> logicalOperator_21.in1;
                    connect memory_15.out1 -> compareToZero_16.u;
                    connect memory_15.out1 -> compareToZero2_15.u;
                    connect in1 -> memory_15.in1;
                    connect in1 -> compareToZero1_16.u;
                    connect in1 -> compareToZero3_15.u;
                    connect memory1_15.out1 -> condition_42.in1;
                  }
                  component SwitchBlock_33{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition_43{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock1_16{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition1_20{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock2_10{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition2_10{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock3_11{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition3_9{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock4_6{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition4_6{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock5_6{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition5_6{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock6_6{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition6_6{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock7_6{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition7_6{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock8_5{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition8_5{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock9_5{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition9_5{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock10_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition10_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock11_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition11_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock12_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition12_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock13_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition13_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock14_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition14_4{
                    port in B in1;
                    port out B out1;



                  }
                  component SwitchBlock15_4{
                    port in B condition;
                    port in Number elseIn;
                    port in Number ifIn;
                    port out Number out1;



                  }
                  component Condition15_4{
                    port in B in1;
                    port out B out1;



                  }

                  instance CC_ChangeSetValue cC_ChangeSetValue;
                  instance CC_InitialSetValue cC_InitialSetValue;
                  instance CC_OnSet_SetValue cC_OnSet_SetValue;
                  instance CC_StartUpSetValue cC_StartUpSetValue;
                  instance CompareToZero_13 compareToZero_13;
                  instance CompareToZero1_13 compareToZero1_13;
                  instance Constant_95 constant_95;
                  instance EdgeRising_2 edgeRising_2;
                  instance FalseBlock_3 falseBlock_3;
                  instance LogicalOperator_18 logicalOperator_18;
                  instance LogicalOperator1_16 logicalOperator1_16;
                  instance LogicalOperator2_16 logicalOperator2_16;
                  instance LogicalOperator3_3 logicalOperator3_3;
                  instance LogicalOperator4_2 logicalOperator4_2;
                  instance LogicalOperator5_2 logicalOperator5_2;
                  instance LogicalOperator6_2 logicalOperator6_2;
                  instance RSFlipFlop_3 rSFlipFlop_3;
                  instance RelOp_8 relOp_8;
                  instance SysInit_3 sysInit_3;
                  instance Terminator_4 terminator_4;
                  instance VERSION_INFO_44 vERSION_INFO_44;
                  instance RisingEdgeDetector_5 risingEdgeDetector_5;
                  instance RisingEdgeDetector1_5 risingEdgeDetector1_5;
                  instance RisingEdgeDetector2_3 risingEdgeDetector2_3;
                  instance SwitchBlock_33 switchBlock_33;
                  instance Condition_43 condition_43;
                  instance SwitchBlock1_16 switchBlock1_16;
                  instance Condition1_20 condition1_20;
                  instance SwitchBlock2_10 switchBlock2_10;
                  instance Condition2_10 condition2_10;
                  instance SwitchBlock3_11 switchBlock3_11;
                  instance Condition3_9 condition3_9;
                  instance SwitchBlock4_6 switchBlock4_6;
                  instance Condition4_6 condition4_6;
                  instance SwitchBlock5_6 switchBlock5_6;
                  instance Condition5_6 condition5_6;
                  instance SwitchBlock6_6 switchBlock6_6;
                  instance Condition6_6 condition6_6;
                  instance SwitchBlock7_6 switchBlock7_6;
                  instance Condition7_6 condition7_6;
                  instance SwitchBlock8_5 switchBlock8_5;
                  instance Condition8_5 condition8_5;
                  instance SwitchBlock9_5 switchBlock9_5;
                  instance Condition9_5 condition9_5;
                  instance SwitchBlock10_4 switchBlock10_4;
                  instance Condition10_4 condition10_4;
                  instance SwitchBlock11_4 switchBlock11_4;
                  instance Condition11_4 condition11_4;
                  instance SwitchBlock12_4 switchBlock12_4;
                  instance Condition12_4 condition12_4;
                  instance SwitchBlock13_4 switchBlock13_4;
                  instance Condition13_4 condition13_4;
                  instance SwitchBlock14_4 switchBlock14_4;
                  instance Condition14_4 condition14_4;
                  instance SwitchBlock15_4 switchBlock15_4;
                  instance Condition15_4 condition15_4;

                  connect switchBlock1_16.out1 -> out1;
                  connect switchBlock6_6.out1 -> out2;
                  connect switchBlock11_4.out1 -> out3;
                  connect logicalOperator_18.out1 -> risingEdgeDetector_5.in1;
                  connect sysInit_3.y -> risingEdgeDetector1_5.in1;
                  connect logicalOperator2_16.out1 -> risingEdgeDetector2_3.in1;
                  connect in1 -> cC_ChangeSetValue.in1;
                  connect cC_enabled_b -> condition_43.in1;
                  connect cC_ChangeSetValue.out1 -> switchBlock_33.ifIn;
                  connect condition_43.out1 -> switchBlock_33.condition;
                  connect in1 -> switchBlock_33.elseIn;
                  connect switchBlock_33.out1 -> cC_InitialSetValue.in1;
                  connect risingEdgeDetector1_5.out1 -> condition1_20.in1;
                  connect cC_StartUpSetValue.out1 -> switchBlock1_16.ifIn;
                  connect condition1_20.out1 -> switchBlock1_16.condition;
                  connect risingEdgeDetector2_3.out1 -> condition2_10.in1;
                  connect cC_OnSet_SetValue.out1 -> switchBlock2_10.ifIn;
                  connect condition2_10.out1 -> switchBlock2_10.condition;
                  connect cC_enabled_b -> condition3_9.in1;
                  connect cC_ChangeSetValue.out2 -> switchBlock3_11.ifIn;
                  connect condition3_9.out1 -> switchBlock3_11.condition;
                  connect in1 -> switchBlock3_11.elseIn;
                  connect switchBlock3_11.out1 -> cC_InitialSetValue.in2;
                  connect risingEdgeDetector_5.out1 -> condition4_6.in1;
                  connect cC_InitialSetValue.out1 -> switchBlock4_6.ifIn;
                  connect condition4_6.out1 -> switchBlock4_6.condition;
                  connect cC_enabled_b -> condition5_6.in1;
                  connect cC_ChangeSetValue.out3 -> switchBlock5_6.ifIn;
                  connect condition5_6.out1 -> switchBlock5_6.condition;
                  connect in1 -> switchBlock5_6.elseIn;
                  connect switchBlock5_6.out1 -> switchBlock4_6.elseIn;
                  connect switchBlock4_6.out1 -> switchBlock2_10.elseIn;
                  connect switchBlock2_10.out1 -> switchBlock1_16.elseIn;
                  connect risingEdgeDetector1_5.out1 -> condition6_6.in1;
                  connect cC_StartUpSetValue.out2 -> switchBlock6_6.ifIn;
                  connect condition6_6.out1 -> switchBlock6_6.condition;
                  connect risingEdgeDetector2_3.out1 -> condition7_6.in1;
                  connect cC_OnSet_SetValue.out2 -> switchBlock7_6.ifIn;
                  connect condition7_6.out1 -> switchBlock7_6.condition;
                  connect cC_enabled_b -> condition8_5.in1;
                  connect cC_ChangeSetValue.out4 -> switchBlock8_5.ifIn;
                  connect condition8_5.out1 -> switchBlock8_5.condition;
                  connect in1 -> switchBlock8_5.elseIn;
                  connect switchBlock8_5.out1 -> cC_InitialSetValue.in3;
                  connect risingEdgeDetector_5.out1 -> condition9_5.in1;
                  connect cC_InitialSetValue.out2 -> switchBlock9_5.ifIn;
                  connect condition9_5.out1 -> switchBlock9_5.condition;
                  connect cC_enabled_b -> condition10_4.in1;
                  connect cC_ChangeSetValue.out5 -> switchBlock10_4.ifIn;
                  connect condition10_4.out1 -> switchBlock10_4.condition;
                  connect in1 -> switchBlock10_4.elseIn;
                  connect switchBlock10_4.out1 -> switchBlock9_5.elseIn;
                  connect switchBlock9_5.out1 -> switchBlock7_6.elseIn;
                  connect switchBlock7_6.out1 -> switchBlock6_6.elseIn;
                  connect risingEdgeDetector1_5.out1 -> condition11_4.in1;
                  connect cC_StartUpSetValue.out3 -> switchBlock11_4.ifIn;
                  connect condition11_4.out1 -> switchBlock11_4.condition;
                  connect risingEdgeDetector2_3.out1 -> condition12_4.in1;
                  connect cC_OnSet_SetValue.out3 -> switchBlock12_4.ifIn;
                  connect condition12_4.out1 -> switchBlock12_4.condition;
                  connect cC_enabled_b -> condition13_4.in1;
                  connect cC_ChangeSetValue.out6 -> switchBlock13_4.ifIn;
                  connect condition13_4.out1 -> switchBlock13_4.condition;
                  connect in1 -> switchBlock13_4.elseIn;
                  connect switchBlock13_4.out1 -> cC_InitialSetValue.in4;
                  connect risingEdgeDetector_5.out1 -> condition14_4.in1;
                  connect cC_InitialSetValue.out3 -> switchBlock14_4.ifIn;
                  connect condition14_4.out1 -> switchBlock14_4.condition;
                  connect cC_enabled_b -> condition15_4.in1;
                  connect cC_ChangeSetValue.out7 -> switchBlock15_4.ifIn;
                  connect condition15_4.out1 -> switchBlock15_4.condition;
                  connect in1 -> switchBlock15_4.elseIn;
                  connect switchBlock15_4.out1 -> switchBlock14_4.elseIn;
                  connect switchBlock14_4.out1 -> switchBlock12_4.elseIn;
                  connect switchBlock12_4.out1 -> switchBlock11_4.elseIn;
                  connect compareToZero1_13.y -> logicalOperator3_3.in2;
                  connect compareToZero_13.y -> logicalOperator3_3.in1;
                  connect rSFlipFlop_3.nOT_Q -> terminator_4.in1;
                  connect rSFlipFlop_3.q -> logicalOperator2_16.in3;
                  connect logicalOperator6_2.out1 -> rSFlipFlop_3.r;
                  connect logicalOperator5_2.out1 -> logicalOperator2_16.in1;
                  connect limiter_b -> logicalOperator5_2.in1;
                  connect edgeRising_2.y -> rSFlipFlop_3.s;
                  connect logicalOperator4_2.out1 -> logicalOperator2_16.in2;
                  connect logicalOperator1_16.out1 -> edgeRising_2.r;
                  connect falseBlock_3.y -> edgeRising_2.iV;
                  connect logicalOperator3_3.out1 -> edgeRising_2.u;
                  connect cC_enabled_b -> logicalOperator6_2.in1;
                  connect cC_enabled_b -> logicalOperator1_16.in1;
                  connect leverDown_Stat -> cC_ChangeSetValue.leverDown_stat;
                  connect leverDown_Stat -> compareToZero1_13.u;
                  connect leverUp_Stat -> compareToZero_13.u;
                  connect leverUp_Stat -> cC_ChangeSetValue.leverUp_stat;
                  connect cruiseControl_b -> logicalOperator_18.in1;
                  connect cruiseControl_b -> logicalOperator4_2.in1;
                  connect relOp_8.out1 -> logicalOperator_18.in2;
                  connect constant_95.out1 -> relOp_8.in2;
                  connect v_Vehicle_kmh -> cC_InitialSetValue.v_Vehicle_kmh;
                  connect v_Vehicle_kmh -> cC_OnSet_SetValue.v_Vehicle_kmh;
                  connect v_Vehicle_kmh -> relOp_8.in1;
                }
                component VERSION_INFO_45{

                  component Copyright_45{



                  }

                  instance Copyright_45 copyright_45;

                }

                instance CC_Enabled cC_Enabled;
                instance CC_On_Off cC_On_Off;
                instance CC_SetValue cC_SetValue;
                instance VERSION_INFO_45 vERSION_INFO_45;

                connect cC_On_Off.cC_active_b -> cC_active_b;
                connect cC_SetValue.out2 -> out1;
                connect cC_SetValue.out3 -> out2;
                connect cC_Enabled.v_CC_delta_kmh -> v_CC_delta_kmh;
                connect in1 -> cC_SetValue.in1;
                connect cC_SetValue.out1 -> cC_Enabled.in1;
                connect fTS_active_b -> cC_On_Off.fTS_active_b;
                connect limiter_b -> cC_On_Off.limiter_b;
                connect limiter_b -> cC_SetValue.limiter_b;
                connect cC_On_Off.cC_active_b -> cC_Enabled.cC_active_b;
                connect cC_On_Off.cC_active_b -> cC_SetValue.cC_enabled_b;
                connect brakeForce_pedal_pc -> cC_On_Off.brakeForce_pedal_pc;
                connect parkingBrake_b -> cC_On_Off.parkingBrake_b;
                connect cruiseControl_b -> cC_On_Off.cruiseControl_b;
                connect cruiseControl_b -> cC_SetValue.cruiseControl_b;
                connect v_Vehicle_kmh -> cC_Enabled.v_Vehicle_kmh;
                connect v_Vehicle_kmh -> cC_SetValue.v_Vehicle_kmh;
                connect v_Vehicle_kmh -> cC_On_Off.v_Vehicle_kmh;
                connect leverUp_Stat -> cC_SetValue.leverUp_Stat;
                connect leverUp_Stat -> cC_On_Off.leverUp_stat;
                connect leverDown_Stat -> cC_SetValue.leverDown_Stat;
                connect leverDown_Stat -> cC_On_Off.leverDown_stat;
              }
              component VERSION_INFO_46{

                component Copyright_46{



                }

                instance Copyright_46 copyright_46;

              }
              component SwitchBlock_34{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition_44{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock1_17{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Condition1_21{
                port in Number in1;
                port out B out1;



              }
              component Condition2_11{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock2_11{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component Constant1_28{
                port out Number out1;



              }
              component Condition3_10{
                port in Number in1;
                port out B out1;



              }
              component SwitchBlock3_12{
                port in B condition;
                port in B elseIn;
                port in B ifIn;
                port out B out1;



              }
              component Constant2_6{
                port out B out1;



              }

              instance Constant_38 constant_38;
              instance Tempomat_Function tempomat_Function;
              instance VERSION_INFO_46 vERSION_INFO_46;
              instance SwitchBlock_34 switchBlock_34;
              instance Condition_44 condition_44;
              instance SwitchBlock1_17 switchBlock1_17;
              instance Condition1_21 condition1_21;
              instance Condition2_11 condition2_11;
              instance SwitchBlock2_11 switchBlock2_11;
              instance Constant1_28 constant1_28;
              instance Condition3_10 condition3_10;
              instance SwitchBlock3_12 switchBlock3_12;
              instance Constant2_6 constant2_6;

              connect switchBlock3_12.out1 -> cC_active_b;
              connect switchBlock_34.out1 -> out1;
              connect switchBlock1_17.out1 -> out2;
              connect switchBlock2_11.out1 -> v_CC_delta_kmh;
              connect in1 -> tempomat_Function.in1;
              connect constant_38.out1 -> condition_44.in1;
              connect tempomat_Function.out1 -> switchBlock_34.ifIn;
              connect condition_44.out1 -> switchBlock_34.condition;
              connect in1 -> switchBlock_34.elseIn;
              connect constant_38.out1 -> condition1_21.in1;
              connect tempomat_Function.out2 -> switchBlock1_17.ifIn;
              connect condition1_21.out1 -> switchBlock1_17.condition;
              connect in1 -> switchBlock1_17.elseIn;
              connect constant_38.out1 -> condition2_11.in1;
              connect condition2_11.out1 -> switchBlock2_11.condition;
              connect tempomat_Function.v_CC_delta_kmh -> switchBlock2_11.ifIn;
              connect constant1_28.out1 -> switchBlock2_11.elseIn;
              connect constant_38.out1 -> condition3_10.in1;
              connect condition3_10.out1 -> switchBlock3_12.condition;
              connect tempomat_Function.cC_active_b -> switchBlock3_12.ifIn;
              connect constant2_6.out1 -> switchBlock3_12.elseIn;
              connect fTS_active_b -> tempomat_Function.fTS_active_b;
              connect leverDown_Stat -> tempomat_Function.leverDown_Stat;
              connect leverUp_Stat -> tempomat_Function.leverUp_Stat;
              connect limiter_b -> tempomat_Function.limiter_b;
              connect v_Vehicle_kmh -> tempomat_Function.v_Vehicle_kmh;
              connect cruiseControl_b -> tempomat_Function.cruiseControl_b;
              connect brakeForce_pedal_pc -> tempomat_Function.brakeForce_pedal_pc;
              connect parkingBrake_b -> tempomat_Function.parkingBrake_b;
            }
            component VERSION_INFO_47{

              component Copyright_47{



              }

              instance Copyright_47 copyright_47;

            }
            component VelocityControl{
              port out Q acceleration_pc;
              port in Q acceleration_pedal_pc;
              port in Q brakeForce_Distronic_pc;
              port in Q brakeForce_Emergency_pc;
              port out Q brakeForce_pc;
              port in Q brakeForce_pedal_pc;
              port in Q brakeForceBoosted_pc;
              port in Q decelerator_pc;
              port in Number v_CC_delta_kmh;
              port in Q v_Vehicle_kmh;
              port in Number vMax_kmh;

              component Constant1_29{
                port out Number out1;



              }
              component Constant2_7{
                port out Number out1;



              }
              component Constant3_5{
                port out Number out1;



              }
              component Constant4_3{
                port out Number out1;



              }
              component Constant5_2{
                port out Number out1;



              }
              component LogOp_2{
                port in B in1;
                port in B in2;
                port out B out1;



              }
              component LookUpTable_3{
                port in Number in1;
                port out Number out1;



              }
              component LookUpTable1_3{
                port in Number in1;
                port out Number out1;



              }
              component MinMax1{
                port in Number in1;
                port in Number in2;
                port out Number out1;



              }
              component MinMax2{
                port out Q brakeForce_pc;
                port in Number in1;
                port in Number in2;
                port in Number in3;
                port in Number in4;
                port in Number in5;



              }
              component Mul_3{
                port in Q acceleration_pc;
                port in Number in1;
                port in Number in3;
                port out Number out1;



              }
              component RelOp_9{
                port in Number in1;
                port in Number in2;
                port out B out1;



              }
              component RelOp1_6{
                port in Number in1;
                port in Number in2;
                port out B out1;



              }
              component Saturation_1{
                port in Number in1;
                port out Number out1;



              }
              component Saturation1_2{
                port in Number in1;
                port out Number out1;



              }
              component SwitchBlock_35{
                port out Q acceleration_pc;
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;



              }
              component SwitchBlock1_18{
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;
                port out Number out1;



              }
              component SwitchBlock2_12{
                port out Q acceleration_pc;
                port in B condition;
                port in Number elseIn;
                port in Number ifIn;



              }
              component VERSION_INFO_48{

                component Copyright_48{



                }

                instance Copyright_48 copyright_48;

              }
              component Condition_45{
                port in Number in1;
                port out B out1;



              }
              component Condition1_22{
                port in B in1;
                port out B out1;



              }
              component Condition2_12{
                port in Number in1;
                port out B out1;



              }

              instance Constant1_29 constant1_29;
              instance Constant2_7 constant2_7;
              instance Constant3_5 constant3_5;
              instance Constant4_3 constant4_3;
              instance Constant5_2 constant5_2;
              instance LogOp_2 logOp_2;
              instance LookUpTable_3 lookUpTable_3;
              instance LookUpTable1_3 lookUpTable1_3;
              instance MinMax1 minMax1;
              instance MinMax2 minMax2;
              instance Mul_3 mul_3;
              instance RelOp_9 relOp_9;
              instance RelOp1_6 relOp1_6;
              instance Saturation_1 saturation_1;
              instance Saturation1_2 saturation1_2;
              instance SwitchBlock_35 switchBlock_35;
              instance SwitchBlock1_18 switchBlock1_18;
              instance SwitchBlock2_12 switchBlock2_12;
              instance VERSION_INFO_48 vERSION_INFO_48;
              instance Condition_45 condition_45;
              instance Condition1_22 condition1_22;
              instance Condition2_12 condition2_12;

              connect switchBlock2_12.acceleration_pc -> acceleration_pc;
              connect minMax2.brakeForce_pc -> brakeForce_pc;
              connect condition2_12.out1 -> switchBlock1_18.condition;
              connect condition_45.out1 -> switchBlock2_12.condition;
              connect condition1_22.out1 -> switchBlock_35.condition;
              connect minMax2.brakeForce_pc -> condition_45.in1;
              connect logOp_2.out1 -> condition1_22.in1;
              connect minMax1.out1 -> condition2_12.in1;
              connect constant5_2.out1 -> mul_3.in3;
              connect mul_3.out1 -> switchBlock2_12.elseIn;
              connect decelerator_pc -> mul_3.in1;
              connect constant3_5.out1 -> switchBlock2_12.ifIn;
              connect switchBlock_35.acceleration_pc -> mul_3.acceleration_pc;
              connect brakeForce_Distronic_pc -> minMax2.in4;
              connect brakeForce_Emergency_pc -> minMax2.in5;
              connect constant4_3.out1 -> switchBlock1_18.ifIn;
              connect minMax1.out1 -> switchBlock_35.elseIn;
              connect switchBlock1_18.out1 -> minMax2.in1;
              connect brakeForce_pedal_pc -> minMax2.in3;
              connect lookUpTable1_3.out1 -> switchBlock1_18.elseIn;
              connect brakeForceBoosted_pc -> minMax2.in2;
              connect saturation1_2.out1 -> lookUpTable1_3.in1;
              connect saturation_1.out1 -> lookUpTable_3.in1;
              connect constant2_7.out1 -> relOp1_6.in2;
              connect acceleration_pedal_pc -> minMax1.in1;
              connect vMax_kmh -> relOp_9.in2;
              connect vMax_kmh -> relOp1_6.in1;
              connect v_Vehicle_kmh -> relOp_9.in1;
              connect lookUpTable_3.out1 -> minMax1.in2;
              connect v_CC_delta_kmh -> saturation_1.in1;
              connect v_CC_delta_kmh -> saturation1_2.in1;
              connect relOp_9.out1 -> logOp_2.in1;
              connect relOp1_6.out1 -> logOp_2.in2;
              connect constant1_29.out1 -> switchBlock_35.ifIn;
            }
            component UnitDelay_8{
              port in Number valueIn;
              port out Number valueOut;



            }
            component UnitDelay1_6{
              port in Number valueIn;
              port out Number valueOut;



            }

            instance BrakeAssistant brakeAssistant;
            instance Distancewarner distancewarner;
            instance Distronic distronic;
            instance EmergencyBrake emergencyBrake;
            instance FAS_Input fAS_Input;
            instance FollowToStop followToStop;
            instance Limiter limiter;
            instance LogOp_1 logOp_1;
            instance Tempomat tempomat;
            instance VERSION_INFO_47 vERSION_INFO_47;
            instance VelocityControl velocityControl;
            instance UnitDelay_8 unitDelay_8;
            instance UnitDelay1_6 unitDelay1_6;

            connect velocityControl.acceleration_pc -> acceleration_pc;
            connect logOp_1.acusti_warn_bOut1 -> acusti_warn_b;
            connect velocityControl.brakeForce_pc -> brakeForce_pc;
            connect tempomat.cC_active_b -> cC_active_b;
            connect unitDelay_8.valueOut -> cCSetValue_kmh;
            connect limiter.limiter_active_b -> limiter_active_b;
            connect unitDelay1_6.valueOut -> limiterSetValue_kmh;
            connect distancewarner.opti_warn_b -> opti_warn_b;
            connect tempomat.cC_active_b -> distronic.cC_active_b;
            connect distronic.brakeForce_Distronic_pc -> velocityControl.brakeForce_Distronic_pc;
            connect distronic.decelerator_pc -> velocityControl.decelerator_pc;
            connect followToStop.fTS_Abstand_soll_m -> distronic.fTS_Abstand_soll_m;
            connect followToStop.fTS_active_b -> tempomat.fTS_active_b;
            connect followToStop.fTS_active_b -> distronic.fTS_active_b;
            connect emergencyBrake.brakeForce_Emergency_pc -> velocityControl.brakeForce_Emergency_pc;
            connect emergencyBrake.acusti_warn_b -> logOp_1.acusti_warn_bIn2;
            connect fAS_Input.v_Vehicle_kmh2 -> followToStop.v_Vehicle_kmh;
            connect fAS_Input.v_Obj_rel_kmh4 -> followToStop.v_Obj_rel_kmh;
            connect fAS_Input.v_Vehicle_ms2 -> emergencyBrake.v_Vehicle_ms;
            connect fAS_Input.v_Obj_rel_ms -> emergencyBrake.v_Obj_rel_ms;
            connect fAS_Input.distance_Object_m2 -> emergencyBrake.distance_Object_m;
            connect fAS_Input.v_Obj_rel_kmh -> distronic.v_Obj_rel_kmh;
            connect fAS_Input.distance_stat -> distronic.distance_stat;
            connect fAS_Input.v_Vehicle_ms1 -> distronic.v_Vehicle_ms;
            connect fAS_Input.distance_Object_m1 -> distronic.distance_Object_m;
            connect distancewarner.acusti_warn_b -> logOp_1.acusti_warn_b;
            connect fAS_Input.distance_Object_m -> distancewarner.distance_Object_m;
            connect fAS_Input.v_Vehicle_ms -> distancewarner.v_Vehicle_ms;
            connect fAS_Input.v_Sign_kmh1 -> limiter.v_Sign_kmh;
            connect fAS_Input.sign_b1 -> limiter.sign_b;
            connect fAS_Input.brakeForce_pedal_pc1 -> velocityControl.brakeForce_pedal_pc;
            connect fAS_Input.brakeForce_pedal_pc2 -> brakeAssistant.brakeForce_pedal_pc;
            connect fAS_Input.limiter_b2 -> tempomat.limiter_b;
            connect limiter.vMax_kmh -> velocityControl.vMax_kmh;
            connect tempomat.v_CC_delta_kmh -> velocityControl.v_CC_delta_kmh;
            connect fAS_Input.acceleration_pedal_pc2 -> limiter.acceleration_pedal_pc;
            connect fAS_Input.acceleration_pedal_pc1 -> velocityControl.acceleration_pedal_pc;
            connect fAS_Input.v_Vehicle_kmh3 -> velocityControl.v_Vehicle_kmh;
            connect fAS_Input.leverUp_stat1 -> limiter.leverUp_stat;
            connect fAS_Input.v_Vehicle_kmh4 -> limiter.v_Vehicle_kmh;
            connect fAS_Input.limiter_b1 -> limiter.limiter_b;
            connect fAS_Input.leverDown_stat1 -> limiter.leverDown_stat;
            connect fAS_Input.cruiseControl_b1 -> tempomat.cruiseControl_b;
            connect fAS_Input.v_Vehicle_kmh5 -> tempomat.v_Vehicle_kmh;
            connect fAS_Input.leverDown_stat2 -> tempomat.leverDown_Stat;
            connect fAS_Input.leverUp_stat2 -> tempomat.leverUp_Stat;
            connect fAS_Input.brakeForce_pedal_pc3 -> tempomat.brakeForce_pedal_pc;
            connect fAS_Input.parkingBrake_b1 -> tempomat.parkingBrake_b;
            connect unitDelay_8.valueOut -> tempomat.in1;
            connect tempomat.out1 -> limiter.in1;
            connect tempomat.out2 -> limiter.in2;
            connect limiter.out1 -> unitDelay_8.valueIn;
            connect unitDelay1_6.valueOut -> limiter.in3;
            connect limiter.out2 -> unitDelay1_6.valueIn;
            connect parkingBrake_b -> fAS_Input.parkingBrake_b;
            connect brakeForce_pedal_pc -> fAS_Input.brakeForce_pedal_pc;
            connect acceleration_pedal_pc -> fAS_Input.acceleration_pedal_pc;
            connect cruiseControl_b -> fAS_Input.cruiseControl_b;
            connect limiter_b -> fAS_Input.limiter_b;
            connect leverUp_stat -> fAS_Input.leverUp_stat;
            connect leverDown_stat -> fAS_Input.leverDown_stat;
            connect v_Vehicle_kmh -> fAS_Input.v_Vehicle_kmh;
            connect v_Vehicle_kmh1 -> fAS_Input.v_Vehicle_kmh1;
            connect v_Sign_kmh -> fAS_Input.v_Sign_kmh;
            connect sign_b -> fAS_Input.sign_b;
            connect distance_stat -> fAS_Input.distance_stat1;
            connect distance_stat1 -> fAS_Input.distance_stat2;
            connect v_Obj_rel_kmh -> fAS_Input.v_Obj_rel_kmh1;
            connect v_Obj_rel_kmh1 -> fAS_Input.v_Obj_rel_kmh2;
            connect v_Obj_rel_kmh2 -> fAS_Input.v_Obj_rel_kmh3;
            connect distance_Object_m -> fAS_Input.distance_Object_m3;
            connect distance_Object_m1 -> fAS_Input.distance_Object_m4;
            connect distance_Object_m2 -> fAS_Input.distance_Object_m5;
            connect distance_Object_m3 -> fAS_Input.distance_Object_m6;
            connect brakeAssistant.brakeForceBoosted_pc -> velocityControl.brakeForceBoosted_pc;
          }
          component DEMO_FAS_Input{
            port in Q _Acceleration_pedal_pc;
            port out Q acceleration_pedal_pc;
            port out Q brakeForce_pedal_pc;
            port in Q brakeForce_pedal_pcIn2;
            port out B cruiseControl_b;
            port in B cruiseControl_bIn4;
            port out Q distance_Object_m;
            port out Q distance_Object_m1;
            port out Q distance_Object_m2;
            port out Q distance_Object_m3;
            port in Q distance_Object_mIn13;
            port out Q distance_stat;
            port out Q distance_stat1;
            port in Q distance_statIn11;
            port out Q leverDown_stat;
            port in Q leverDown_statIn7;
            port out Q leverUp_stat;
            port in Q leverUp_statIn6;
            port out B limiter_b;
            port in B limiter_bIn5;
            port out B parkingBrake_b;
            port in B parkingBrake_bIn1;
            port out B sign_b;
            port in B sign_bIn10;
            port out Q v_Obj_rel_kmh;
            port out Q v_Obj_rel_kmh1;
            port out Q v_Obj_rel_kmh2;
            port in Q v_Obj_rel_kmhIn12;
            port out Q v_Sign_kmh;
            port in Q v_Sign_kmhIn9;
            port in Number v_Vehicle_b;
            port out Q v_Vehicle_kmh;
            port out Q v_Vehicle_kmh1;



            connect _Acceleration_pedal_pc -> acceleration_pedal_pc;
            connect brakeForce_pedal_pcIn2 -> brakeForce_pedal_pc;
            connect cruiseControl_bIn4 -> cruiseControl_b;
            connect distance_Object_mIn13 -> distance_Object_m;
            connect distance_Object_mIn13 -> distance_Object_m1;
            connect distance_Object_mIn13 -> distance_Object_m2;
            connect distance_Object_mIn13 -> distance_Object_m3;
            connect distance_statIn11 -> distance_stat;
            connect distance_statIn11 -> distance_stat1;
            connect leverDown_statIn7 -> leverDown_stat;
            connect leverUp_statIn6 -> leverUp_stat;
            connect limiter_bIn5 -> limiter_b;
            connect parkingBrake_bIn1 -> parkingBrake_b;
            connect sign_bIn10 -> sign_b;
            connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh;
            connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh1;
            connect v_Obj_rel_kmhIn12 -> v_Obj_rel_kmh2;
            connect v_Sign_kmhIn9 -> v_Sign_kmh;
            connect v_Vehicle_b -> v_Vehicle_kmh;
            connect v_Vehicle_b -> v_Vehicle_kmh1;
          }
          component DEMO_FAS_Output{
            port in Q acceleration_pc;
            port out Q acceleration_pcOut2;
            port in B acusti_warn_b;
            port out B acusti_warn_bOut8;
            port in Q brakeForce_pc;
            port out Q brakeForce_pcOut3;
            port in B cC_active_b;
            port out B cC_active_bOut1;
            port in Q cCSetValue_kmh;
            port out Q cCSetValue_kmhOut4;
            port in B limiter_active_b;
            port out B limiter_active_bOut6;
            port in Q limiterSetValue_kmh;
            port out Q limiterSetValue_kmhOut5;
            port in B opti_warn_b;
            port out B opti_warn_bOut7;



            connect acceleration_pc -> acceleration_pcOut2;
            connect acusti_warn_b -> acusti_warn_bOut8;
            connect brakeForce_pc -> brakeForce_pcOut3;
            connect cC_active_b -> cC_active_bOut1;
            connect cCSetValue_kmh -> cCSetValue_kmhOut4;
            connect limiter_active_b -> limiter_active_bOut6;
            connect limiterSetValue_kmh -> limiterSetValue_kmhOut5;
            connect opti_warn_b -> opti_warn_bOut7;
          }

          instance DEMO_FAS_Funktion dEMO_FAS_Funktion;
          instance DEMO_FAS_Input dEMO_FAS_Input;
          instance DEMO_FAS_Output dEMO_FAS_Output;

          connect dEMO_FAS_Output.acceleration_pcOut2 -> _Acceleration_pc;
          connect dEMO_FAS_Output.acusti_warn_bOut8 -> _Acusti_warn_b;
          connect dEMO_FAS_Output.brakeForce_pcOut3 -> _BrakeForce_pc;
          connect dEMO_FAS_Output.cC_active_bOut1 -> _CC_active_b;
          connect dEMO_FAS_Output.cCSetValue_kmhOut4 -> _CCSetValue_kmh;
          connect dEMO_FAS_Output.limiter_active_bOut6 -> _Limiter_active_b;
          connect dEMO_FAS_Output.limiterSetValue_kmhOut5 -> _LimiterSetValue_kmh;
          connect dEMO_FAS_Output.opti_warn_bOut7 -> _Opti_warn_b;
          connect dEMO_FAS_Input.parkingBrake_b -> dEMO_FAS_Funktion.parkingBrake_b;
          connect dEMO_FAS_Input.brakeForce_pedal_pc -> dEMO_FAS_Funktion.brakeForce_pedal_pc;
          connect dEMO_FAS_Input.acceleration_pedal_pc -> dEMO_FAS_Funktion.acceleration_pedal_pc;
          connect dEMO_FAS_Input.cruiseControl_b -> dEMO_FAS_Funktion.cruiseControl_b;
          connect dEMO_FAS_Input.limiter_b -> dEMO_FAS_Funktion.limiter_b;
          connect dEMO_FAS_Input.leverUp_stat -> dEMO_FAS_Funktion.leverUp_stat;
          connect dEMO_FAS_Input.leverDown_stat -> dEMO_FAS_Funktion.leverDown_stat;
          connect dEMO_FAS_Input.v_Vehicle_kmh -> dEMO_FAS_Funktion.v_Vehicle_kmh;
          connect dEMO_FAS_Input.v_Vehicle_kmh1 -> dEMO_FAS_Funktion.v_Vehicle_kmh1;
          connect dEMO_FAS_Input.v_Sign_kmh -> dEMO_FAS_Funktion.v_Sign_kmh;
          connect dEMO_FAS_Input.sign_b -> dEMO_FAS_Funktion.sign_b;
          connect dEMO_FAS_Input.distance_stat -> dEMO_FAS_Funktion.distance_stat;
          connect dEMO_FAS_Input.distance_stat1 -> dEMO_FAS_Funktion.distance_stat1;
          connect dEMO_FAS_Input.v_Obj_rel_kmh -> dEMO_FAS_Funktion.v_Obj_rel_kmh;
          connect dEMO_FAS_Input.v_Obj_rel_kmh1 -> dEMO_FAS_Funktion.v_Obj_rel_kmh1;
          connect dEMO_FAS_Input.v_Obj_rel_kmh2 -> dEMO_FAS_Funktion.v_Obj_rel_kmh2;
          connect dEMO_FAS_Input.distance_Object_m -> dEMO_FAS_Funktion.distance_Object_m;
          connect dEMO_FAS_Input.distance_Object_m1 -> dEMO_FAS_Funktion.distance_Object_m1;
          connect dEMO_FAS_Input.distance_Object_m2 -> dEMO_FAS_Funktion.distance_Object_m2;
          connect dEMO_FAS_Input.distance_Object_m3 -> dEMO_FAS_Funktion.distance_Object_m3;
          connect dEMO_FAS_Funktion.cC_active_b -> dEMO_FAS_Output.cC_active_b;
          connect dEMO_FAS_Funktion.acceleration_pc -> dEMO_FAS_Output.acceleration_pc;
          connect dEMO_FAS_Funktion.brakeForce_pc -> dEMO_FAS_Output.brakeForce_pc;
          connect dEMO_FAS_Funktion.cCSetValue_kmh -> dEMO_FAS_Output.cCSetValue_kmh;
          connect dEMO_FAS_Funktion.limiterSetValue_kmh -> dEMO_FAS_Output.limiterSetValue_kmh;
          connect dEMO_FAS_Funktion.limiter_active_b -> dEMO_FAS_Output.limiter_active_b;
          connect dEMO_FAS_Funktion.opti_warn_b -> dEMO_FAS_Output.opti_warn_b;
          connect dEMO_FAS_Funktion.acusti_warn_b -> dEMO_FAS_Output.acusti_warn_b;
          connect _Distance_stat -> dEMO_FAS_Input.distance_statIn11;
          connect _Distance_Object_m -> dEMO_FAS_Input.distance_Object_mIn13;
          connect _V_Obj_rel_kmh -> dEMO_FAS_Input.v_Obj_rel_kmhIn12;
          connect _Sign_b -> dEMO_FAS_Input.sign_bIn10;
          connect _V_Sign_kmh -> dEMO_FAS_Input.v_Sign_kmhIn9;
          connect _BrakeForce_pedal_pc -> dEMO_FAS_Input.brakeForce_pedal_pcIn2;
          connect _ParkingBrake_b -> dEMO_FAS_Input.parkingBrake_bIn1;
          connect _CruiseControl_b -> dEMO_FAS_Input.cruiseControl_bIn4;
          connect _Acceleration_pedal_pc -> dEMO_FAS_Input._Acceleration_pedal_pc;
          connect _Limiter_b -> dEMO_FAS_Input.limiter_bIn5;
          connect _LeverUp_stat -> dEMO_FAS_Input.leverUp_statIn6;
          connect _LeverDown_stat -> dEMO_FAS_Input.leverDown_statIn7;
          connect _V_Vehicle_kmh -> dEMO_FAS_Input.v_Vehicle_b;
        }

        instance DEMO_FAS_3 dEMO_FAS_3;

        connect dEMO_FAS_3._Acceleration_pc -> _Acceleration_pc;
        connect dEMO_FAS_3._Acusti_warn_b -> _Acusti_warn_b;
        connect dEMO_FAS_3._BrakeForce_pc -> _BrakeForce_pc;
        connect dEMO_FAS_3._CC_active_b -> _CC_active_b;
        connect dEMO_FAS_3._CCSetValue_kmh -> _CCSetValue_kmh;
        connect dEMO_FAS_3._Limiter_active_b -> _Limiter_active_b;
        connect dEMO_FAS_3._LimiterSetValue_kmh -> _LimiterSetValue_kmh;
        connect dEMO_FAS_3._Opti_warn_b -> _Opti_warn_b;
        connect _Distance_Object_m -> dEMO_FAS_3._Distance_Object_m;
        connect _V_Obj_rel_kmh -> dEMO_FAS_3._V_Obj_rel_kmh;
        connect _Distance_stat -> dEMO_FAS_3._Distance_stat;
        connect _Sign_b -> dEMO_FAS_3._Sign_b;
        connect _V_Sign_kmh -> dEMO_FAS_3._V_Sign_kmh;
        connect _V_Vehicle_kmh -> dEMO_FAS_3._V_Vehicle_kmh;
        connect _LeverDown_stat -> dEMO_FAS_3._LeverDown_stat;
        connect _LeverUp_stat -> dEMO_FAS_3._LeverUp_stat;
        connect _Limiter_b -> dEMO_FAS_3._Limiter_b;
        connect _CruiseControl_b -> dEMO_FAS_3._CruiseControl_b;
        connect _Acceleration_pedal_pc -> dEMO_FAS_3._Acceleration_pedal_pc;
        connect _BrakeForce_pedal_pc -> dEMO_FAS_3._BrakeForce_pedal_pc;
        connect _ParkingBrake_b -> dEMO_FAS_3._ParkingBrake_b;
      }

      instance Subsystem subsystem;

      connect subsystem._Acceleration_pc -> _Acceleration_pc;
      connect subsystem._Acusti_warn_b -> _Acusti_warn_b;
      connect subsystem._BrakeForce_pc -> _BrakeForce_pc;
      connect subsystem._CC_active_b -> _CC_active_b;
      connect subsystem._CCSetValue_kmh -> _CCSetValue_kmh;
      connect subsystem._Limiter_active_b -> _Limiter_active_b;
      connect subsystem._LimiterSetValue_kmh -> _LimiterSetValue_kmh;
      connect subsystem._Opti_warn_b -> _Opti_warn_b;
      connect _Distance_Object_m -> subsystem._Distance_Object_m;
      connect _V_Obj_rel_kmh -> subsystem._V_Obj_rel_kmh;
      connect _Distance_stat -> subsystem._Distance_stat;
      connect _Sign_b -> subsystem._Sign_b;
      connect _V_Sign_kmh -> subsystem._V_Sign_kmh;
      connect _V_Vehicle_kmh -> subsystem._V_Vehicle_kmh;
      connect _LeverDown_stat -> subsystem._LeverDown_stat;
      connect _LeverUp_stat -> subsystem._LeverUp_stat;
      connect _Limiter_b -> subsystem._Limiter_b;
      connect _CruiseControl_b -> subsystem._CruiseControl_b;
      connect _Acceleration_pedal_pc -> subsystem._Acceleration_pedal_pc;
      connect _BrakeForce_pedal_pc -> subsystem._BrakeForce_pedal_pc;
      connect _ParkingBrake_b -> subsystem._ParkingBrake_b;
    }

    instance DEMO_FAS_2 dEMO_FAS_2;

    connect dEMO_FAS_2._Acceleration_pc -> acceleration_pc;
    connect dEMO_FAS_2._Acusti_warn_b -> acusti_warn_b;
    connect dEMO_FAS_2._BrakeForce_pc -> brakeForce_pc;
    connect dEMO_FAS_2._CC_active_b -> cC_active_b;
    connect dEMO_FAS_2._CCSetValue_kmh -> cCSetValue_kmh;
    connect dEMO_FAS_2._Limiter_active_b -> limiter_active_b;
    connect dEMO_FAS_2._LimiterSetValue_kmh -> limiterSetValue_kmh;
    connect dEMO_FAS_2._Opti_warn_b -> opti_warn_b;
    connect distance_stat -> dEMO_FAS_2._Distance_stat;
    connect v_Vehicle_kmh -> dEMO_FAS_2._V_Vehicle_kmh;
    connect parkingBrake_b -> dEMO_FAS_2._ParkingBrake_b;
    connect leverUp_stat -> dEMO_FAS_2._LeverUp_stat;
    connect leverDown_stat -> dEMO_FAS_2._LeverDown_stat;
    connect brakeForce_pedal_pc -> dEMO_FAS_2._BrakeForce_pedal_pc;
    connect limiter_b -> dEMO_FAS_2._Limiter_b;
    connect cruiseControl_b -> dEMO_FAS_2._CruiseControl_b;
    connect acceleration_pedal_pc -> dEMO_FAS_2._Acceleration_pedal_pc;
    connect v_Sign_kmh -> dEMO_FAS_2._V_Sign_kmh;
    connect sign_b -> dEMO_FAS_2._Sign_b;
    connect v_Obj_rel_kmh -> dEMO_FAS_2._V_Obj_rel_kmh;
  }
  component SimToRealTime{

    component Constant_114{
      port out Number out1;



    }
    component Constant1_30{
      port out Number out1;



    }
    component Terminator_5{
      port in Number in1;



    }
    component Terminator1_1{
      port in Number in1;



    }
    component Terminator2{
      port in Number in1;



    }
    component Terminator3{
      port in Number in1;



    }
    component Terminator4{
      port in Number in1;



    }
    component Terminator5{
      port in Number in1;



    }
    component VAPS_TimeConfiguration{
      port out Number factor_SimTime;
      port in Number maxSpeed;
      port out Number timeConfig_Consumer;
      port out Number timeConfig_Producer;
      port in Number timeConfig;
      port out Number tsRTimeEff;
      port out Number tsRTime;
      port out Number tsSim;

      component Constant1_31{
        port out Number out1;



      }
      component Constant10_1{
        port out Number out1;



      }
      component Constant4_4{
        port out Number out1;



      }
      component RealTimeTimerAdapter{
        port in Number in1;
        port out Number out1;

        component Constant1_32{
          port out Number out1;



        }
        component Constant10_2{
          port out Number out1;



        }
        component Constant11_1{
          port out Number out1;



        }
        component Constant12_1{
          port out Number out1;



        }
        component Constant13_1{
          port out Number out1;



        }
        component Constant15{
          port out Number out1;



        }
        component Div1_3{
          port in Number in1;
          port in Number in2;
          port out Number out1;



        }
        component LogOp1_1{
          port in B in1;
          port in B in2;
          port out B out1;



        }
        component RelOp2_5{
          port in Number in1;
          port in Number in2;
          port out B out1;



        }
        component RelOp3_5{
          port in Number in1;
          port in Number in2;
          port out B out1;



        }
        component RelOp4_3{
          port in Number in1;
          port in Number in2;
          port out B out1;



        }
        component Sum_15{
          port in Number in1;
          port in Number in2;
          port out Number out1;



        }
        component SwitchBlock2_13{
          port in B condition;
          port in Number elseIn;
          port in Number ifIn;
          port out Number out1;



        }
        component SwitchBlock3_13{
          port in B condition;
          port in Number elseIn;
          port in Number ifIn;
          port out Number out1;



        }
        component Condition_46{
          port in B in1;
          port out B out1;



        }
        component Condition1_23{
          port in B in1;
          port out B out1;



        }

        instance Constant1_32 constant1_32;
        instance Constant10_2 constant10_2;
        instance Constant11_1 constant11_1;
        instance Constant12_1 constant12_1;
        instance Constant13_1 constant13_1;
        instance Constant15 constant15;
        instance Div1_3 div1_3;
        instance LogOp1_1 logOp1_1;
        instance RelOp2_5 relOp2_5;
        instance RelOp3_5 relOp3_5;
        instance RelOp4_3 relOp4_3;
        instance Sum_15 sum_15;
        instance SwitchBlock2_13 switchBlock2_13;
        instance SwitchBlock3_13 switchBlock3_13;
        instance Condition_46 condition_46;
        instance Condition1_23 condition1_23;

        connect switchBlock2_13.out1 -> out1;
        connect condition1_23.out1 -> switchBlock2_13.condition;
        connect condition_46.out1 -> switchBlock3_13.condition;
        connect logOp1_1.out1 -> condition_46.in1;
        connect relOp2_5.out1 -> condition1_23.in1;
        connect in1 -> relOp2_5.in1;
        connect in1 -> switchBlock2_13.ifIn;
        connect in1 -> relOp3_5.in1;
        connect in1 -> relOp4_3.in1;
        connect in1 -> div1_3.in1;
        connect constant10_2.out1 -> relOp2_5.in2;
        connect constant11_1.out1 -> relOp3_5.in2;
        connect switchBlock3_13.out1 -> switchBlock2_13.elseIn;
        connect constant12_1.out1 -> relOp4_3.in2;
        connect relOp3_5.out1 -> logOp1_1.in1;
        connect relOp4_3.out1 -> logOp1_1.in2;
        connect constant13_1.out1 -> switchBlock3_13.ifIn;
        connect sum_15.out1 -> switchBlock3_13.elseIn;
        connect constant1_32.out1 -> div1_3.in2;
        connect constant15.out1 -> sum_15.in1;
        connect div1_3.out1 -> sum_15.in2;
      }
      component RealTimeTimerAdapter_Value{
        port in Number in1;
        port out Number out1;

        component Constant11_2{
          port out Number out1;



        }
        component Constant12_2{
          port out Number out1;



        }
        component Constant13_2{
          port out Number out1;



        }
        component LogOp1_2{
          port in B in1;
          port in B in2;
          port out B out1;



        }
        component RelOp3_6{
          port in Number in1;
          port in Number in2;
          port out B out1;



        }
        component RelOp4_4{
          port in Number in1;
          port in Number in2;
          port out B out1;



        }
        component SwitchBlock3_14{
          port in B condition;
          port in Number elseIn;
          port in Number ifIn;
          port out Number out1;



        }
        component Condition_47{
          port in B in1;
          port out B out1;



        }

        instance Constant11_2 constant11_2;
        instance Constant12_2 constant12_2;
        instance Constant13_2 constant13_2;
        instance LogOp1_2 logOp1_2;
        instance RelOp3_6 relOp3_6;
        instance RelOp4_4 relOp4_4;
        instance SwitchBlock3_14 switchBlock3_14;
        instance Condition_47 condition_47;

        connect switchBlock3_14.out1 -> out1;
        connect condition_47.out1 -> switchBlock3_14.condition;
        connect logOp1_2.out1 -> condition_47.in1;
        connect constant13_2.out1 -> switchBlock3_14.ifIn;
        connect relOp4_4.out1 -> logOp1_2.in2;
        connect relOp3_6.out1 -> logOp1_2.in1;
        connect constant12_2.out1 -> relOp4_4.in2;
        connect constant11_2.out1 -> relOp3_6.in2;
        connect in1 -> switchBlock3_14.elseIn;
        connect in1 -> relOp4_4.in1;
        connect in1 -> relOp3_6.in1;
      }
      component RelOp4_5{
        port in Number in1;
        port in Number in2;
        port out B out1;



      }
      component SwitchBlock1_19{
        port in B condition;
        port in Number elseIn;
        port in Number ifIn;
        port out Number out1;



      }
      component SwitchBlock2_14{
        port in B condition;
        port in Number elseIn;
        port in Number ifIn;
        port out Number out1;



      }
      component SysInit1{
        port out Number y;

        component Memory_Init_4{
          port in Number in1;
          port out Number out1;



        }
        component Zero_Init_4{
          port out Number out1;



        }

        instance Memory_Init_4 memory_Init_4;
        instance Zero_Init_4 zero_Init_4;

        connect memory_Init_4.out1 -> y;
        connect zero_Init_4.out1 -> memory_Init_4.in1;
      }
      component VAPSRealTimeTimer{
        port in Number timeFactor;
        port out Number tsRTimeEffective;
        port out Number tsRTime;
        port out Number tsSim;

        component Level2MfileSFunction{
          port in Number in1;
          port out Number tsRTimeEffective;
          port out Number tsRTime;
          port out Number tsSim;



        }

        instance Level2MfileSFunction level2MfileSFunction;

        connect level2MfileSFunction.tsRTimeEffective -> tsRTimeEffective;
        connect level2MfileSFunction.tsRTime -> tsRTime;
        connect level2MfileSFunction.tsSim -> tsSim;
        connect timeFactor -> level2MfileSFunction.in1;
      }
      component Condition_48{
        port in B in1;
        port out B out1;



      }
      component Condition1_24{
        port in Number in1;
        port out B out1;



      }

      instance Constant1_31 constant1_31;
      instance Constant10_1 constant10_1;
      instance Constant4_4 constant4_4;
      instance RealTimeTimerAdapter realTimeTimerAdapter;
      instance RealTimeTimerAdapter_Value realTimeTimerAdapter_Value;
      instance RelOp4_5 relOp4_5;
      instance SwitchBlock1_19 switchBlock1_19;
      instance SwitchBlock2_14 switchBlock2_14;
      instance SysInit1 sysInit1;
      instance VAPSRealTimeTimer vAPSRealTimeTimer;
      instance Condition_48 condition_48;
      instance Condition1_24 condition1_24;

      connect realTimeTimerAdapter.out1 -> factor_SimTime;
      connect realTimeTimerAdapter_Value.out1 -> timeConfig_Consumer;
      connect realTimeTimerAdapter_Value.out1 -> timeConfig_Producer;
      connect vAPSRealTimeTimer.tsRTimeEffective -> tsRTimeEff;
      connect vAPSRealTimeTimer.tsRTime -> tsRTime;
      connect vAPSRealTimeTimer.tsSim -> tsSim;
      connect condition_48.out1 -> switchBlock1_19.condition;
      connect condition1_24.out1 -> switchBlock2_14.condition;
      connect relOp4_5.out1 -> condition_48.in1;
      connect sysInit1.y -> condition1_24.in1;
      connect constant1_31.out1 -> switchBlock1_19.ifIn;
      connect maxSpeed -> relOp4_5.in1;
      connect switchBlock1_19.out1 -> vAPSRealTimeTimer.timeFactor;
      connect constant10_1.out1 -> relOp4_5.in2;
      connect realTimeTimerAdapter.out1 -> switchBlock1_19.elseIn;
      connect timeConfig -> switchBlock2_14.elseIn;
      connect constant4_4.out1 -> switchBlock2_14.ifIn;
      connect switchBlock2_14.out1 -> realTimeTimerAdapter_Value.in1;
      connect switchBlock2_14.out1 -> realTimeTimerAdapter.in1;
    }

    instance Constant_114 constant_114;
    instance Constant1_30 constant1_30;
    instance Terminator_5 terminator_5;
    instance Terminator1_1 terminator1_1;
    instance Terminator2 terminator2;
    instance Terminator3 terminator3;
    instance Terminator4 terminator4;
    instance Terminator5 terminator5;
    instance VAPS_TimeConfiguration vAPS_TimeConfiguration;

    connect vAPS_TimeConfiguration.timeConfig_Producer -> terminator2.in1;
    connect vAPS_TimeConfiguration.tsSim -> terminator3.in1;
    connect vAPS_TimeConfiguration.tsRTime -> terminator4.in1;
    connect vAPS_TimeConfiguration.tsRTimeEff -> terminator5.in1;
    connect vAPS_TimeConfiguration.timeConfig_Consumer -> terminator1_1.in1;
    connect vAPS_TimeConfiguration.factor_SimTime -> terminator_5.in1;
    connect constant1_30.out1 -> vAPS_TimeConfiguration.maxSpeed;
    connect constant_114.out1 -> vAPS_TimeConfiguration.timeConfig;
  }
  component Umgebung{
    port in Q acceleration_pc;
    port out Q acceleration_pedal_pc;
    port in B acusti_warn_b;
    port in Q brakeForce_pc;
    port out Q brakeForce_pedal_pc;
    port in B cC_active_b;
    port in Q cCSetValue_kmh;
    port out B cruiseControl_b;
    port out Q distance_stat;
    port out Q leverDown_stat;
    port out Q leverUp_stat;
    port in B limiter_active_b;
    port out B limiter_b;
    port in Q limiterSetValue_kmh;
    port in B opti_warn_b;
    port out B parkingBrake_b;
    port out B sign_b;
    port out Q v_Obj_rel_kmh;
    port out Q v_Sign_kmh;
    port out Q v_Vehicle_kmh;

    component Acusti_warn_b{
      port in B acusti_warn_b;



    }
    component CC_active_b{
      port in B cC_active_b;



    }
    component Limiter_active_b{
      port in B limiter_active_b;



    }
    component Opti_warn_b{
      port in B opti_warn_b;



    }
    component V_Vehicle_kmh{
      port in Q v_Vehicle_kmh;



    }
    component CCSetValue{
      port in Q cCSetValue_kmh;



    }
    component Constant_115{
      port out Number out1;



    }
    component Constant1_33{
      port out Number out1;



    }
    component Constant10_3{
      port out Number out1;



    }
    component Constant11_3{
      port out Number out1;



    }
    component Constant12_3{
      port out Number out1;



    }
    component Constant2_8{
      port out Number out1;



    }
    component Constant3_6{
      port out Number out1;



    }
    component Constant4_5{
      port out Number out1;



    }
    component Constant5_3{
      port out Number out1;



    }
    component Constant6_2{
      port out Number out1;



    }
    component Constant7_2{
      port out Number out1;



    }
    component Constant8{
      port out Number out1;



    }
    component Constant9{
      port out Number out1;



    }
    component DataTypeConversion{
      port in Number distance_stat;
      port out Q distance_statOut1;



    }
    component Distance_Object_m{
      port in Q distance_Object_m;



    }
    component FalseBlock_4{
      port out Number y;

      component Zero_6{
        port out Number out1;



      }

      instance Zero_6 zero_6;

      connect zero_6.out1 -> y;
    }
    component FalseBlock1_2{
      port out Number y;

      component Zero_7{
        port out Number out1;



      }

      instance Zero_7 zero_7;

      connect zero_7.out1 -> y;
    }
    component FalseBlock2_2{
      port out Number y;

      component Zero_8{
        port out Number out1;



      }

      instance Zero_8 zero_8;

      connect zero_8.out1 -> y;
    }
    component FalseBlock5{
      port out Number y;

      component Zero_9{
        port out Number out1;



      }

      instance Zero_9 zero_9;

      connect zero_9.out1 -> y;
    }
    component Lever_Level{
      port in Number in1;
      port in Number in2;
      port out Number out1;



    }
    component LimiterSetValue{
      port in Q limiterSetValue_kmh;



    }
    component ManualSwitch{
      port in Number in1;
      port in Number in2;
      port out B parkingBrake_b;



    }
    component ManualSwitch1{
      port in Number in1;
      port in Number in2;
      port out B sign_b;



    }
    component ManualSwitch2{
      port out B cruiseControl_b;
      port in Number in1;
      port in Number in2;



    }
    component ManualSwitch5{
      port in Number in1;
      port in Number in2;
      port out B limiter_b;



    }
    component ManualSwitch6{
      port in Number distance_Object_Start_m;
      port in Number in2;
      port out Number out1;



    }
    component ManualSwitch7{
      port in Number in1;
      port in Number in2;
      port out Number out1;



    }
    component ManualSwitch8{
      port in Number in1;
      port in Number in2;
      port out Number out1;



    }
    component Mul_4{
      port in Number in1;
      port in Number in2;
      port out Q leverUp_stat;



    }
    component Mul1_4{
      port in Number in1;
      port in Number in2;
      port out Q leverDown_stat;



    }
    component Object{
      port out Q distance_Object_m;
      port in Number distance_Object_Start_m;
      port out Q v_Obj_rel_kmh;
      port in Number v_Object_kmh;
      port in Q v_Vehicle_kmh;

      component Accumulator_REL{
        port out B b_max;
        port out B b_min;
        port in B e;
        port in Number iV;
        port in Number mN;
        port in Number mX;
        port in B r;
        port in Number u;
        port out Number y;

        component Limit{
          port out B b_max;
          port out B b_min;
          port in Number mN;
          port in Number mX;
          port in Number u;
          port out Number y;

          component LogOp_A_5{
            port in B in1;
            port in B in2;
            port out B out1;



          }
          component LogOp_N_8{
            port in B in1;
            port out B out1;



          }
          component RelOp_MN{
            port in Number in1;
            port in Number in2;
            port out B out1;



          }
          component RelOp_MX{
            port in Number in1;
            port in Number in2;
            port out B out1;



          }
          component Switch_MN{
            port in B condition;
            port in Number elseIn;
            port in Number ifIn;
            port out Number out1;



          }
          component Switch_MX{
            port in B condition;
            port in Number elseIn;
            port in Number ifIn;
            port out Number out1;



          }
          component Condition_49{
            port in B in1;
            port out B out1;



          }
          component Condition1_25{
            port in B in1;
            port out B out1;



          }

          instance LogOp_A_5 logOp_A_5;
          instance LogOp_N_8 logOp_N_8;
          instance RelOp_MN relOp_MN;
          instance RelOp_MX relOp_MX;
          instance Switch_MN switch_MN;
          instance Switch_MX switch_MX;
          instance Condition_49 condition_49;
          instance Condition1_25 condition1_25;

          connect relOp_MX.out1 -> b_max;
          connect logOp_A_5.out1 -> b_min;
          connect switch_MX.out1 -> y;
          connect condition_49.out1 -> switch_MX.condition;
          connect condition1_25.out1 -> switch_MN.condition;
          connect relOp_MX.out1 -> condition_49.in1;
          connect relOp_MN.out1 -> condition1_25.in1;
          connect relOp_MX.out1 -> logOp_N_8.in1;
          connect mX -> switch_MX.ifIn;
          connect mX -> relOp_MX.in2;
          connect mN -> relOp_MN.in2;
          connect mN -> switch_MN.ifIn;
          connect switch_MN.out1 -> switch_MX.elseIn;
          connect logOp_N_8.out1 -> logOp_A_5.in1;
          connect relOp_MN.out1 -> logOp_A_5.in2;
          connect u -> switch_MN.elseIn;
          connect u -> relOp_MX.in1;
          connect u -> relOp_MN.in1;
        }
        component Memory_Y{
          port in Number in1;
          port out Number out1;



        }
        component Sum_yu{
          port in Number in1;
          port in Number in2;
          port out Number out1;



        }
        component Switch_E{
          port in B condition;
          port in Number elseIn;
          port in Number ifIn;
          port out Number out1;



        }
        component Switch_R_9{
          port in B condition;
          port in Number elseIn;
          port in Number ifIn;
          port out Number out1;



        }
        component Condition_50{
          port in B in1;
          port out B out1;



        }
        component Condition1_26{
          port in B in1;
          port out B out1;



        }

        instance Limit limit;
        instance Memory_Y memory_Y;
        instance Sum_yu sum_yu;
        instance Switch_E switch_E;
        instance Switch_R_9 switch_R_9;
        instance Condition_50 condition_50;
        instance Condition1_26 condition1_26;

        connect limit.b_max -> b_max;
        connect limit.b_min -> b_min;
        connect limit.y -> y;
        connect condition1_26.out1 -> switch_E.condition;
        connect condition_50.out1 -> switch_R_9.condition;
        connect r -> condition_50.in1;
        connect e -> condition1_26.in1;
        connect switch_R_9.out1 -> limit.u;
        connect mX -> limit.mX;
        connect mN -> limit.mN;
        connect limit.y -> memory_Y.in1;
        connect memory_Y.out1 -> switch_E.elseIn;
        connect memory_Y.out1 -> sum_yu.in2;
        connect iV -> switch_R_9.ifIn;
        connect switch_E.out1 -> switch_R_9.elseIn;
        connect sum_yu.out1 -> switch_E.ifIn;
        connect u -> sum_yu.in1;
      }
      component Add{
        port in Number in1;
        port in Number in2;
        port out Q v_Obj_rel_kmh;



      }
      component Constant_116{
        port out Number out1;



      }
      component Constant1_34{
        port out Number out1;



      }
      component Constant2_9{
        port out Number out1;



      }
      component Gain_3{
        port out Number out1;
        port in Q v_Obj_rel_kmh;



      }
      component LogicalOperator_22{
        port in B in1;
        port out B out1;



      }
      component RelOp_10{
        port in Number in1;
        port in Number in2;
        port out B out1;



      }
      component Terminator_6{
        port in B in1;



      }
      component Terminator1_2{
        port in B in1;



      }

      instance Accumulator_REL accumulator_REL;
      instance Add add;
      instance Constant_116 constant_116;
      instance Constant1_34 constant1_34;
      instance Constant2_9 constant2_9;
      instance Gain_3 gain_3;
      instance LogicalOperator_22 logicalOperator_22;
      instance RelOp_10 relOp_10;
      instance Terminator_6 terminator_6;
      instance Terminator1_2 terminator1_2;

      connect accumulator_REL.y -> distance_Object_m;
      connect add.v_Obj_rel_kmh -> v_Obj_rel_kmh;
      connect accumulator_REL.b_min -> terminator1_2.in1;
      connect accumulator_REL.b_max -> terminator_6.in1;
      connect logicalOperator_22.out1 -> accumulator_REL.e;
      connect constant2_9.out1 -> accumulator_REL.mN;
      connect constant1_34.out1 -> accumulator_REL.mX;
      connect relOp_10.out1 -> accumulator_REL.r;
      connect relOp_10.out1 -> logicalOperator_22.in1;
      connect distance_Object_Start_m -> accumulator_REL.iV;
      connect distance_Object_Start_m -> relOp_10.in1;
      connect constant_116.out1 -> relOp_10.in2;
      connect gain_3.out1 -> accumulator_REL.u;
      connect add.v_Obj_rel_kmh -> gain_3.v_Obj_rel_kmh;
      connect v_Vehicle_kmh -> add.in1;
      connect v_Object_kmh -> add.in2;
    }
    component SliderGain_1{
      port in Number u;
      port out Number y;

      component SliderGain_2{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_2 sliderGain_2;

      connect sliderGain_2.out1 -> y;
      connect u -> sliderGain_2.in1;
    }
    component SliderGain1{
      port in Number u;
      port out Number y;

      component SliderGain_3{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_3 sliderGain_3;

      connect sliderGain_3.out1 -> y;
      connect u -> sliderGain_3.in1;
    }
    component SliderGain2{
      port in Number u;
      port out Number y;

      component SliderGain_4{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_4 sliderGain_4;

      connect sliderGain_4.out1 -> y;
      connect u -> sliderGain_4.in1;
    }
    component SliderGain3{
      port in Number u;
      port out Number y;

      component SliderGain_5{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_5 sliderGain_5;

      connect sliderGain_5.out1 -> y;
      connect u -> sliderGain_5.in1;
    }
    component SliderGain4{
      port in Number u;
      port out Number y;

      component SliderGain_6{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_6 sliderGain_6;

      connect sliderGain_6.out1 -> y;
      connect u -> sliderGain_6.in1;
    }
    component SliderGain5{
      port in Number u;
      port out Number y;

      component SliderGain_7{
        port in Number in1;
        port out Number out1;



      }

      instance SliderGain_7 sliderGain_7;

      connect sliderGain_7.out1 -> y;
      connect u -> sliderGain_7.in1;
    }
    component TrueBlock_2{
      port out Number y;

      component One_2{
        port out Number out1;



      }

      instance One_2 one_2;

      connect one_2.out1 -> y;
    }
    component TrueBlock1{
      port out Number y;

      component One_3{
        port out Number out1;



      }

      instance One_3 one_3;

      connect one_3.out1 -> y;
    }
    component TrueBlock2{
      port out Number y;

      component One_4{
        port out Number out1;



      }

      instance One_4 one_4;

      connect one_4.out1 -> y;
    }
    component TrueBlock5{
      port out Number y;

      component One_5{
        port out Number out1;



      }

      instance One_5 one_5;

      connect one_5.out1 -> y;
    }
    component Vehicle{
      port in Q acceleration_pc;
      port in Q brakeForce_pc;
      port out Q v_Vehicle_kmh;

      component Constant_117{
        port out Number out1;



      }
      component Constant1_35{
        port out Number out1;



      }
      component DiscreteTransferFcnwithinitialstates{
        port in Number in1;
        port out Number out1;

        component DiscreteStateSpace{
          port in Number in1;
          port out Number out1;



        }

        instance DiscreteStateSpace discreteStateSpace;

        connect discreteStateSpace.out1 -> out1;
        connect in1 -> discreteStateSpace.in1;
      }
      component Gain_4{
        port in Number in1;
        port out Number out1;



      }
      component RelationalOperator{
        port in Number in1;
        port in Number in2;
        port out B out1;



      }
      component Saturation_2{
        port in Number in1;
        port out Q v_Vehicle_kmh;



      }
      component Sum1_4{
        port in Number in2;
        port in Number in3;
        port out Number out1;
        port in Q v_Vehicle_kmh;



      }
      component SwitchBlock_36{
        port in B condition;
        port in Number elseIn;
        port in Number ifIn;
        port out Number out1;



      }
      component SwitchBlock1_20{
        port in B condition;
        port in Number elseIn;
        port in Number ifIn;
        port out Number out1;



      }
      component UniformRandomNumber{
        port out Number out1;



      }
      component UnitDelay_9{
        port out Number out1;
        port in Q v_Vehicle_kmh;



      }
      component Widerstand{
        port in Number in1;
        port out Number out1;



      }
      component Condition_51{
        port in Number in1;
        port out B out1;



      }
      component Condition1_27{
        port in B in1;
        port out B out1;



      }

      instance Constant_117 constant_117;
      instance Constant1_35 constant1_35;
      instance DiscreteTransferFcnwithinitialstates discreteTransferFcnwithinitialstates;
      instance Gain_4 gain_4;
      instance RelationalOperator relationalOperator;
      instance Saturation_2 saturation_2;
      instance Sum1_4 sum1_4;
      instance SwitchBlock_36 switchBlock_36;
      instance SwitchBlock1_20 switchBlock1_20;
      instance UniformRandomNumber uniformRandomNumber;
      instance UnitDelay_9 unitDelay_9;
      instance Widerstand widerstand;
      instance Condition_51 condition_51;
      instance Condition1_27 condition1_27;

      connect saturation_2.v_Vehicle_kmh -> v_Vehicle_kmh;
      connect condition_51.out1 -> switchBlock_36.condition;
      connect brakeForce_pc -> switchBlock1_20.ifIn;
      connect condition1_27.out1 -> switchBlock1_20.condition;
      connect acceleration_pc -> switchBlock_36.elseIn;
      connect switchBlock1_20.out1 -> condition_51.in1;
      connect relationalOperator.out1 -> condition1_27.in1;
      connect constant1_35.out1 -> switchBlock1_20.elseIn;
      connect switchBlock1_20.out1 -> gain_4.in1;
      connect constant_117.out1 -> relationalOperator.in1;
      connect uniformRandomNumber.out1 -> sum1_4.in3;
      connect unitDelay_9.out1 -> widerstand.in1;
      connect unitDelay_9.out1 -> relationalOperator.in2;
      connect widerstand.out1 -> sum1_4.in2;
      connect discreteTransferFcnwithinitialstates.out1 -> sum1_4.v_Vehicle_kmh;
      connect sum1_4.out1 -> saturation_2.in1;
      connect switchBlock_36.out1 -> discreteTransferFcnwithinitialstates.in1;
      connect gain_4.out1 -> switchBlock_36.ifIn;
      connect saturation_2.v_Vehicle_kmh -> unitDelay_9.v_Vehicle_kmh;
    }

    instance Acusti_warn_b acusti_warn_b;
    instance CC_active_b cC_active_b;
    instance Limiter_active_b limiter_active_b;
    instance Opti_warn_b opti_warn_b;
    instance V_Vehicle_kmh v_Vehicle_kmh;
    instance CCSetValue cCSetValue;
    instance Constant_115 constant_115;
    instance Constant1_33 constant1_33;
    instance Constant10_3 constant10_3;
    instance Constant11_3 constant11_3;
    instance Constant12_3 constant12_3;
    instance Constant2_8 constant2_8;
    instance Constant3_6 constant3_6;
    instance Constant4_5 constant4_5;
    instance Constant5_3 constant5_3;
    instance Constant6_2 constant6_2;
    instance Constant7_2 constant7_2;
    instance Constant8 constant8;
    instance Constant9 constant9;
    instance DataTypeConversion dataTypeConversion;
    instance Distance_Object_m distance_Object_m;
    instance FalseBlock_4 falseBlock_4;
    instance FalseBlock1_2 falseBlock1_2;
    instance FalseBlock2_2 falseBlock2_2;
    instance FalseBlock5 falseBlock5;
    instance Lever_Level lever_Level;
    instance LimiterSetValue limiterSetValue;
    instance ManualSwitch manualSwitch;
    instance ManualSwitch1 manualSwitch1;
    instance ManualSwitch2 manualSwitch2;
    instance ManualSwitch5 manualSwitch5;
    instance ManualSwitch6 manualSwitch6;
    instance ManualSwitch7 manualSwitch7;
    instance ManualSwitch8 manualSwitch8;
    instance Mul_4 mul_4;
    instance Mul1_4 mul1_4;
    instance Object object;
    instance SliderGain_1 sliderGain_1;
    instance SliderGain1 sliderGain1;
    instance SliderGain2 sliderGain2;
    instance SliderGain3 sliderGain3;
    instance SliderGain4 sliderGain4;
    instance SliderGain5 sliderGain5;
    instance TrueBlock_2 trueBlock_2;
    instance TrueBlock1 trueBlock1;
    instance TrueBlock2 trueBlock2;
    instance TrueBlock5 trueBlock5;
    instance Vehicle vehicle;

    connect sliderGain_1.y -> acceleration_pedal_pc;
    connect sliderGain1.y -> brakeForce_pedal_pc;
    connect manualSwitch2.cruiseControl_b -> cruiseControl_b;
    connect dataTypeConversion.distance_statOut1 -> distance_stat;
    connect mul1_4.leverDown_stat -> leverDown_stat;
    connect mul_4.leverUp_stat -> leverUp_stat;
    connect manualSwitch5.limiter_b -> limiter_b;
    connect manualSwitch.parkingBrake_b -> parkingBrake_b;
    connect manualSwitch1.sign_b -> sign_b;
    connect object.v_Obj_rel_kmh -> v_Obj_rel_kmh;
    connect sliderGain2.y -> v_Sign_kmh;
    connect vehicle.v_Vehicle_kmh -> v_Vehicle_kmh;
    connect acusti_warn_b -> acusti_warn_b.acusti_warn_b;
    connect opti_warn_b -> opti_warn_b.opti_warn_b;
    connect limiter_active_b -> limiter_active_b.limiter_active_b;
    connect limiterSetValue_kmh -> limiterSetValue.limiterSetValue_kmh;
    connect cCSetValue_kmh -> cCSetValue.cCSetValue_kmh;
    connect cC_active_b -> cC_active_b.cC_active_b;
    connect brakeForce_pc -> vehicle.brakeForce_pc;
    connect acceleration_pc -> vehicle.acceleration_pc;
    connect constant12_3.out1 -> sliderGain5.u;
    connect sliderGain5.y -> dataTypeConversion.distance_stat;
    connect manualSwitch8.out1 -> mul1_4.in1;
    connect lever_Level.out1 -> mul1_4.in2;
    connect lever_Level.out1 -> mul_4.in2;
    connect constant11_3.out1 -> lever_Level.in2;
    connect constant10_3.out1 -> lever_Level.in1;
    connect manualSwitch7.out1 -> mul_4.in1;
    connect constant9.out1 -> manualSwitch8.in2;
    connect constant8.out1 -> manualSwitch7.in2;
    connect constant7_2.out1 -> manualSwitch8.in1;
    connect constant6_2.out1 -> manualSwitch7.in1;
    connect object.distance_Object_m -> distance_Object_m.distance_Object_m;
    connect manualSwitch6.out1 -> object.distance_Object_Start_m;
    connect constant5_3.out1 -> manualSwitch6.in2;
    connect sliderGain4.y -> manualSwitch6.distance_Object_Start_m;
    connect constant4_5.out1 -> sliderGain4.u;
    connect sliderGain3.y -> object.v_Object_kmh;
    connect constant3_6.out1 -> sliderGain3.u;
    connect constant2_8.out1 -> sliderGain2.u;
    connect falseBlock1_2.y -> manualSwitch1.in2;
    connect trueBlock1.y -> manualSwitch1.in1;
    connect constant1_33.out1 -> sliderGain1.u;
    connect constant_115.out1 -> sliderGain_1.u;
    connect vehicle.v_Vehicle_kmh -> v_Vehicle_kmh.v_Vehicle_kmh;
    connect vehicle.v_Vehicle_kmh -> object.v_Vehicle_kmh;
    connect falseBlock5.y -> manualSwitch5.in2;
    connect trueBlock5.y -> manualSwitch5.in1;
    connect falseBlock2_2.y -> manualSwitch2.in2;
    connect trueBlock2.y -> manualSwitch2.in1;
    connect falseBlock_4.y -> manualSwitch.in2;
    connect trueBlock_2.y -> manualSwitch.in1;
  }
  component Memory1_16{
    port in B in1;
    port out B out1;



  }
  component Memory2_16{
    port in Number in1;
    port out Number out1;



  }
  component Memory3{
    port in Number in1;
    port out Number out1;



  }
  component Memory4{
    port in B in1;
    port out B out1;



  }
  component Memory5{
    port in B in1;
    port out B out1;



  }
  component Memory6{
    port in B in1;
    port out B out1;



  }
  component Memory7{
    port in Number in1;
    port out Number out1;



  }
  component Memory8{
    port in Number in1;
    port out Number out1;



  }

  instance DEMO_FAS_1 dEMO_FAS_1;
  instance SimToRealTime simToRealTime;
  instance Umgebung umgebung;
  instance Memory1_16 memory1_16;
  instance Memory2_16 memory2_16;
  instance Memory3 memory3;
  instance Memory4 memory4;
  instance Memory5 memory5;
  instance Memory6 memory6;
  instance Memory7 memory7;
  instance Memory8 memory8;

  connect memory1_16.out1 -> umgebung.cC_active_b;
  connect memory2_16.out1 -> umgebung.cCSetValue_kmh;
  connect memory3.out1 -> umgebung.limiterSetValue_kmh;
  connect memory4.out1 -> umgebung.limiter_active_b;
  connect memory5.out1 -> umgebung.opti_warn_b;
  connect memory6.out1 -> umgebung.acusti_warn_b;
  connect memory7.out1 -> umgebung.brakeForce_pc;
  connect memory8.out1 -> umgebung.acceleration_pc;
  connect dEMO_FAS_1.cC_active_b -> memory1_16.in1;
  connect dEMO_FAS_1.cCSetValue_kmh -> memory2_16.in1;
  connect dEMO_FAS_1.limiterSetValue_kmh -> memory3.in1;
  connect dEMO_FAS_1.limiter_active_b -> memory4.in1;
  connect dEMO_FAS_1.opti_warn_b -> memory5.in1;
  connect dEMO_FAS_1.acusti_warn_b -> memory6.in1;
  connect dEMO_FAS_1.brakeForce_pc -> memory7.in1;
  connect dEMO_FAS_1.acceleration_pc -> memory8.in1;
  connect umgebung.parkingBrake_b -> dEMO_FAS_1.parkingBrake_b;
  connect umgebung.brakeForce_pedal_pc -> dEMO_FAS_1.brakeForce_pedal_pc;
  connect umgebung.acceleration_pedal_pc -> dEMO_FAS_1.acceleration_pedal_pc;
  connect umgebung.cruiseControl_b -> dEMO_FAS_1.cruiseControl_b;
  connect umgebung.limiter_b -> dEMO_FAS_1.limiter_b;
  connect umgebung.leverUp_stat -> dEMO_FAS_1.leverUp_stat;
  connect umgebung.leverDown_stat -> dEMO_FAS_1.leverDown_stat;
  connect umgebung.v_Vehicle_kmh -> dEMO_FAS_1.v_Vehicle_kmh;
  connect umgebung.v_Sign_kmh -> dEMO_FAS_1.v_Sign_kmh;
  connect umgebung.sign_b -> dEMO_FAS_1.sign_b;
  connect umgebung.distance_stat -> dEMO_FAS_1.distance_stat;
  connect umgebung.v_Obj_rel_kmh -> dEMO_FAS_1.v_Obj_rel_kmh;
}
