/* (c) https://github.com/MontiCore/monticore */
package tagDef.caseStudy;

import tagDef.CnCExt;
import tagDef.NFPExt;

ocl rule4_WCET_MultiCore {
    context Cmp cmp inv:
            let
                selectedPaths = directSubComponentPaths(cmp);
                aggregatedValues = List{sum(selectedVals, "s") | path in selectedPaths , selectedVals =
                                                                List{max(e.compWCET, 0 s) | e in path}
                                 };
            in
                forall a in aggregatedValues: (a < min(cmp.compWCET, +oo s));
}
