<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- OUR OWN PROJECT -->
    <!-- Packaging pom because there are no source files in this project -->
    <artifactId>simulation</artifactId>
    <groupId>montisim</groupId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- MODULES -->
    <modules>
        <module>environment</module>
        <module>network</module>
        <module>sensors</module>
        <module>simulator</module>
        <module>util</module>
        <module>vehicle</module>
    </modules>

    <!-- PROJECT DEPENDENCIES -->
    <dependencies>

        <!-- JUnit for testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <!-- Apache Commons Math3 as math library -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.0</version>
        </dependency>

        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>ij</artifactId>
            <version>1.51j</version>
        </dependency>

        <!-- Commons for exchange of interfaces -->
        <dependency>
            <groupId>montisim</groupId>
            <artifactId>commons</artifactId>
            <version>1.0.1</version>
        </dependency>

    </dependencies>

    <!-- PROJECT PLUGINS AND PROPERTIES -->
    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>${wagon.provider.version}</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/external-dependencies</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <server>github</server>
                    <message>Maven artifacts for ${project.version} ${project.artifactId}</message>
                    <noJekyll>true</noJekyll>
                    <outputDirectory>${project.build.directory}/external-dependencies</outputDirectory>
                    <branch>refs/heads/master</branch>
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <repositoryName>external-dependencies</repositoryName>
                    <repositoryOwner>MontiSim</repositoryOwner>
                    <merge>true</merge>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7.2</version>
                <configuration>
                    <!-- Set root directory to ensure same execution context in subprojects (e.g. for Log in test mode) -->
                    <workingDirectory>${project.basedir}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.3.0</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <format>xml</format>
                    <maxmem>256m</maxmem>
                    <!-- aggregated reports for multi-module projects -->
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>

        <!-- Set root directory to ensure same execution context in subprojects (e.g. for Log in test mode) -->
        <main.basedir>${project.basedir}</main.basedir>

        <wagon.provider.version>2.6</wagon.provider.version>

        <!-- Specify Java 8 as version to avoid compile warnings -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- Set file encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <wagon.provider.version>2.6</wagon.provider.version>
    </properties>

    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/external-dependencies</url>
        </repository>
        <snapshotRepository>
            <id>internal.repo</id>
            <url>file://${project.build.directory}/external-dependencies</url>
        </snapshotRepository>
    </distributionManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <format>xml</format>
                    <instrumentation>
                        <excludes>
                            <exclude>target/**</exclude>
                        </excludes>
                    </instrumentation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
