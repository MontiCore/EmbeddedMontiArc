version: '{build}'
skip_tags: true
clone_depth: 10
clone_folder: C:\EMAStudioBuilder
platform:
  - x64
install:
  - ps: |
      Add-Type -AssemblyName System.IO.Compression.FileSystem
      
      # download new dependencies if dependencies.txt has changed
      if(![System.IO.File]::Exists('C:\dependencies')){
        New-Item -ItemType directory -Path C:\dependencies\build
        Set-Location -Path C:\dependencies 
        
        "Dependencies have changed. Downloading again."
        
        $dir = "C:\dependencies\"       
        foreach($line in Get-Content C:\EMAStudioBuilder\dependencies.txt) {
        
            # if line begins with * extract directory
            if($line -match '^\*\s.+'){
               $dir = "C:\dependencies\" + $line.Remove(0,2)
               New-Item -ItemType Directory -Force -Path $dir
            }
            
            # if line beginns with ** extract link
            if($line -match '^\*\*.+'){
                $link = $line.Remove(0,3)
        
                # if it is a zip download and extract
                if($link -match '[a-zA-Z0-9\-\.]+\.zip'){
                  $filename = $matches[0]
                  "Downloading " + $filename + " from: " + $link
                  appveyor DownloadFile $link -FileName $filename
                  "Extracting " + $filename + " to " + $dir
                  [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\dependencies\build" + $filename, $dir)
                }
            }
        }
        
      } else {
        "Loading dependencies from cache."
      }
      
  - ps: |
      # copy project items
      Copy-Item -Recurse â€“Verbose -Force "C:\EMAStudioBuilder\EmbeddedMontiArcStudio" -Destination "C:\dependencies\build\EmbeddedMontiArcStudio" 
      Copy-Item â€“Verbose -Force "C:\EMAStudioBuilder\ide.bat" -Destination "C:\dependencies\build\ide.bat" 
 
build: off    
cache:
  - dependencies -> dependencies.txt
