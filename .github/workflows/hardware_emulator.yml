name: hardware_emulator
on:
  push:
    paths:
      - 'simulators/hardware_emulator/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID : 23385
  CI_API_V4_URL : https://git.rwth-aachen.de/api/v4
  GITLABTOKEN : ${{ secrets.GITLABTOKEN }}
  cibuild : ${{ secrets.SE_NEXUS_PASSWORD }}
  GIT_SUBMODULE_STRATEGY : recursive
jobs:
  build_phase:
    needs: [build_hardware_emulator]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage build"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage build"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  test_phase:
    needs: [build_phase, ]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage test"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage test"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}

  build_hardware_emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd simulators/hardware_emulator
            chmod +x ./scripts/unix/build_emulator.sh
            ./scripts/unix/build_emulator.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build_hardware_emulator
          retention-days: 7
          path: |
            simulators/hardware_emulator/src/main/resources/linux/hardware_emulator_lib.so

  linux_maven_master:
    needs: [build_hardware_emulator, test_phase]
    if: ${{ !cancelled() && needs.test_phase.result == 'success' &&  github.ref_name == 'master' && !contains(needs.*.result, 'failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_hardware_emulator
          path: |
            simulators/hardware_emulator/simulators/hardware_emulator/src/main/resources/linux/hardware_emulator_lib.so
      - name: Start Docker Container
        run: |
          docker pull maven:3-jdk-8
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild maven:3-jdk-8 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd simulators/hardware_emulator
            scripts/unix/before_script.sh
            scripts/unix/awt_locate.sh
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B  clean deploy --settings settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  linux_maven_branch:
    needs: [build_hardware_emulator, test_phase]
    if: ${{ !cancelled() && needs.test_phase.result == 'success'      && github.ref_name != 'master' && !contains(needs.*.result, 'failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_hardware_emulator
          path: |
            simulators/hardware_emulator/simulators/hardware_emulator/src/main/resources/linux/hardware_emulator_lib.so
      - name: Start Docker Container
        run: |
          docker pull maven:3-jdk-8
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild maven:3-jdk-8 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd simulators/hardware_emulator
            scripts/unix/before_script.sh
            scripts/unix/awt_locate.sh
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B  clean install --settings settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

