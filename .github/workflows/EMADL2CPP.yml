name: EMADL2CPP
on:
  push:
    paths:
      - 'generators/EMADL2CPP/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID : 17712
  CI_API_V4_URL : https://git.rwth-aachen.de/api/v4
  GITLABTOKEN : ${{ secrets.GITLABTOKEN }}
  cibuild : ${{ secrets.SE_NEXUS_PASSWORD }}
jobs:
  FileChanges:
    runs-on: ubuntu-latest
    outputs:
      runmodularityTest: ${{steps.modularityTest.outputs.run}}
      runbuildDockerMXNet150: ${{steps.buildDockerMXNet150.outputs.run}}
      runbuildDockerMXNet170: ${{steps.buildDockerMXNet170.outputs.run}}
      runbuildDockerMXNet170onnx: ${{steps.buildDockerMXNet170onnx.outputs.run}}
      runbuildDockerTensorflowONNX: ${{steps.buildDockerTensorflowONNX.outputs.run}}
      runbuildDockerMXNet170DGL: ${{steps.buildDockerMXNet170DGL.outputs.run}}
      runbuildDockerDGLQD: ${{steps.buildDockerDGLQD.outputs.run}}
      runbuildDockerPyTorch: ${{steps.buildDockerPyTorch.outputs.run}}
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for file changes
        run: |
          CHANGES=$(git diff --name-only HEAD^ HEAD)
          echo "$CHANGES"
          echo "$CHANGES" > diff.txt
      - name: Check modularityTest
        id: modularityTest
        run: |
          exc=true
          for path in $(cat diff.txt); do
            if [[ $path == *.gitlab-ci.yml* ]]; then
              echo "Matching path found: $path"
              echo "DONT RUN"
              exc=false
              break
            fi
            if [[ $path == *README.md* ]]; then
              echo "Matching path found: $path"
              echo "DONT RUN"
              exc=false
              break
            fi
          done
          echo "Final file status except check: $exc"
          echo "run=$exc" >> $GITHUB_OUTPUT
      - name: Check buildDockerMXNet150
        id: buildDockerMXNet150
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/mxnet150* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerMXNet170
        id: buildDockerMXNet170
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/mxnet170* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerMXNet170onnx
        id: buildDockerMXNet170onnx
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/mxnet170* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerTensorflowONNX
        id: buildDockerTensorflowONNX
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/tensorflow* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerMXNet170DGL
        id: buildDockerMXNet170DGL
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/mxnet170* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerDGLQD
        id: buildDockerDGLQD
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/dglqd* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
      - name: Check buildDockerPyTorch
        id: buildDockerPyTorch
        run: |
          only=false
          for path in $(cat diff.txt); do
            if [[ $path == *src/test/resources/docker/pytorch* ]]; then
              echo "Matching path found: $path"
              echo "RUN"
              only=true
              break
            fi
          done
          echo "Final file status only check: $only"
          echo "run=$only" >> $GITHUB_OUTPUT
  docker_phase:
    needs: [buildDockerTensorflowONNX, buildDockerMXNet150, buildDockerMXNet170DGL, buildDockerPyTorch, buildDockerMXNet170, buildDockerMXNet170onnx, buildDockerDGLQD]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage docker"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage docker"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  linux_phase:
    needs: [docker_phase, modularityTest, integrationTensorflowJobLinux, integrationGluonJobLinux, integrationMXNetJobLinux, UnitTestJobLinux, artifact-extraction, integrationCaffe2JobLinux, integrationPythonWrapperTest, integrationPyTorchJobLinux]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage linux"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage linux"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  deploy_phase:
    needs: [linux_phase, git_masterJobLinux]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage deploy"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage deploy"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}

  git_masterJobLinux:
    needs: linux_phase
    if: ${{ !cancelled() && needs.linux_phase.result == 'success' &&  github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          docker pull maven:3-jdk-8
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild maven:3-jdk-8 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B  -U clean deploy --settings settings.xml -DskipTests
        run: docker exec build-container bash -c "$SCRIPT"

  integrationMXNetJobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/mxnet150:v0.0.5
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/mxnet150:v0.0.5 tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B  -U clean install --settings settings.xml -Dtest=IntegrationMXNetTest
        run: docker exec build-container bash -c "$SCRIPT"

  integrationCaffe2JobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/integrationtests/caffe2:v0.0.5
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/integrationtests/caffe2:v0.0.5 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B  -U clean install --settings settings.xml -Dtest=IntegrationCaffe2Test
        run: docker exec build-container bash -c "$SCRIPT"

  integrationGluonJobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            ln /usr/bin/python3 /usr/bin/python -f
            python -m pip install -U pip
            python -m pip install scikit-image
            python -m pip install opencv-python
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U clean install --settings settings.xml -Dtest=IntegrationGluonTest
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integrationGluonJobLinux
          retention-days: 7
          path: |
            generators/EMADL2CPP/target

  integrationTensorflowJobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/integrationtests/tensorflow:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/integrationtests/tensorflow:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U clean install --settings settings.xml -Dtest=IntegrationTensorflowTest
        run: docker exec build-container bash -c "$SCRIPT"

  integrationPyTorchJobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/pytorch:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/pytorch:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U clean install --settings settings.xml -Dtest="MontiAnnaGeneratorTest#testPyTorchBackendArtefactsGenerationWithEMADLGenerator,ConfigurationTest,PersistentLoggingDataTest,TrackingTest"
        run: docker exec build-container bash -c "$SCRIPT"

  integrationPythonWrapperTest:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2pythonwrapper/tests/mvn-swig:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2pythonwrapper/tests/mvn-swig:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U  clean install --settings settings.xml -Dtest=IntegrationPythonWrapperTest
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integrationPythonWrapperTest
          retention-days: 7
          path: |
            generators/EMADL2CPP/target

  modularityTest:
    needs: [docker_phase, FileChanges]
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' && needs.FileChanges.outputs.runmodularityTest == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            export TZ=Europe/Berlin && apt update && DEBIAN_FRONTEND=noninteractive apt install -y tzdata
            apt update && apt install libopencv-dev python3-opencv libopenblas-dev liblapack-dev -y
            ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
            dpkg-reconfigure --frontend noninteractive tzdata
            ln /usr/bin/python3 /usr/bin/python -f
            python -m pip install -U pip
            python -m pip install scikit-image
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U clean install --settings settings.xml -Dtest=ModularBasicTest
        run: docker exec build-container bash -c "$SCRIPT"

  UnitTestJobLinux:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/mnist-infogan/gans_mxnet:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/mnist-infogan/gans_mxnet:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMADL2CPP
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B -U clean install --settings settings.xml -Dtest="GenerationTest,SymtabTest*"
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: UnitTestJobLinux
          retention-days: 7
          path: |
            generators/EMADL2CPP/target

  buildDockerMXNet150:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerMXNet150 == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/mxnet150

  buildDockerMXNet170:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerMXNet170 == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/mxnet170

  buildDockerMXNet170onnx:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerMXNet170onnx == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/mxnet170

  buildDockerTensorflowONNX:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerTensorflowONNX == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/tensorflow
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")
            docker build -t ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/tensorflow-onnx:latest -f Dockerfile-onnx .
            docker push ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/tensorflow-onnx:latest

  buildDockerMXNet170DGL:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerMXNet170DGL == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/mxnet170
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")
            docker build -t ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/mxnet170-dgl:v0.0.1 -f Dockerfile-dgl .
            docker push ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/mxnet170-dgl:v0.0.1

  buildDockerDGLQD:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerDGLQD == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/dglqd
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")
            docker build -t ghcr.io/$LOWERCASE_OWNER/emam2mqtt/:latest -f Dockerfile .
            docker push ghcr.io/$LOWERCASE_OWNER/emam2mqtt/:latest

  buildDockerPyTorch:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runbuildDockerPyTorch == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            cd src/test/resources/docker/pytorch
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")
            docker build -t ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/pytorch:latest -f Dockerfile .
            docker push ghcr.io/$LOWERCASE_OWNER/emadl2cpp/dockerimages/pytorch:latest

  artifact-extraction:
    needs: docker_phase
    if: ${{ !cancelled() && needs.docker_phase.result == 'success' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            apt-get update -qq && apt-get install -y -qq openjdk-11-jre-headless python3 python3-pip git
            cd extractor
            pip3 install -r requirements.txt
            python3 extract.py ${{ secrets.GITLABTOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: artifact-extraction
          retention-days: 7
          path: |
            generators/EMADL2CPP/extractor/output

  pages:
    needs: [artifact-extraction, deploy_phase]
    if: ${{ !cancelled() && needs.deploy_phase.result == 'success' &&  github.ref_name == 'master' && needs.artifact-extraction.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifact-extraction
          path: |
            generators/EMADL2CPP/generators/EMADL2CPP/extractor/output
      - name: Script
        shell: bash
        run: |
            cd generators/EMADL2CPP
            mkdir .public
            cp -r extractor/output/html/* .public
            mv .public public
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: pages
          retention-days: 7
          path: |
            generators/EMADL2CPP/public

