name: CooperativeIntersection
on:
  push:
    paths:
      - 'applications/CooperativeIntersection/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID: 26302
  CI_API_V4_URL: https://git.rwth-aachen.de/api/v4
  GITLABTOKEN: ${{ secrets.GITLABTOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  generate_phase:
    needs: [ gen ]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Finished stage generate"
        if: ${{!contains(needs.*.result, 'failure')}}
      - run: |
          echo "Failed stage generate"
          exit 1
        if: ${{contains(needs.*.result, 'failure')}}

  gen:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          docker pull maven:3-jdk-8
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} maven:3-jdk-8 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/CooperativeIntersection
            chmod 700 generate.sh
            ./generate.sh
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: gen
          retention-days: 7
          path: |
            applications/CooperativeIntersection/target/

  comp:
    needs: [ gen, generate_phase ]
    if: ${{ !cancelled() && needs.generate_phase.result == 'success' && needs.gen.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: gen
          path: |
            applications/CooperativeIntersection/target/
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/cooperativeintersection/emam-coincar:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} ghcr.io/monticore/cooperativeintersection/emam-coincar:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/CooperativeIntersection
            chmod 700 compile.sh
            ./compile.sh
        run: docker exec build-container bash -c "$SCRIPT"

