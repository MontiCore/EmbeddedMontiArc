name: BallTracking
on:
  push:
    paths:
      - 'applications/BallTracking/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID : 40218
  CI_API_V4_URL : https://git.rwth-aachen.de/api/v4
  GITLABTOKEN : ${{ secrets.GITLABTOKEN }}
  cibuild : ${{ secrets.SE_NEXUS_PASSWORD }}
jobs:
  FileChanges:
    runs-on: ubuntu-latest
    outputs:
      runTestJobLinux: ${{steps.TestJobLinux.outputs.run}}
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for file changes
        run: |
          CHANGES=$(git diff --name-only HEAD^ HEAD)
          echo "$CHANGES"
          echo "$CHANGES" > diff.txt
      - name: Check TestJobLinux
        id: TestJobLinux
        run: |
          exc=true
          for path in $(cat diff.txt); do
            if [[ $path == *README.md* ]]; then
              echo "Matching path found: $path"
              echo "DONT RUN"
              exc=false
              break
            fi
            if [[ $path == *.gitignore* ]]; then
              echo "Matching path found: $path"
              echo "DONT RUN"
              exc=false
              break
            fi
          done
          echo "Final file status except check: $exc"
          echo "run=$exc" >> $GITHUB_OUTPUT

  TestJobLinux:
    needs: FileChanges
    if: ${{ !cancelled() && needs.FileChanges.outputs.runTestJobLinux == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/mnist-infogan/gans_mxnet:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/mnist-infogan/gans_mxnet:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/BallTracking
            git clone https://git.rwth-aachen.de/monticore/EmbeddedMontiArc/generators/EMADL2CPP.git
            cd EMADL2CPP
            mvn clean install -s settings.xml -DskipTests
            cd ..
            rm -rf target
            find ./EMADL2CPP/target -name "*SNAPSHOT-jar-with-dependencies.jar" -exec java -jar {} -m src/main/emam/ -r ba.ballTracking -o target -flag-generate-cmake \;
            rm -rf build
            mkdir build && cd build
            echo "Building BallTracking.."
            cmake ..
            make
        run: docker exec build-container bash -c "$SCRIPT"

