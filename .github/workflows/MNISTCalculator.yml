name: MNISTCalculator
on:
  push:
    paths:
      - 'applications/MNISTCalculator/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID : 25225
  CI_API_V4_URL : https://git.rwth-aachen.de/api/v4
  GITLABTOKEN : ${{ secrets.GITLABTOKEN }}
  cibuild : ${{ secrets.SE_NEXUS_PASSWORD }}
jobs:
  prebuild_phase:
    needs: [DeployMnistCalcArtifact]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage prebuild"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage prebuild"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  test_phase:
    needs: [prebuild_phase, TestTENSORFLOW, TestGluonONNX, TrainHexadecimal_MnistCalculator, DeployDecompositionResNetArtifact, TrainHexadecimal_MnistCalculatorTL, TrainTensorflowONNX, TrainOperator_MnistCalculator, TestEMADLMavenPlugin, TestMavenStreamtestPlugin, TestMnistWithAdaNet, TestMNISTwithCustomLayer, TrainOperator_MnistCalculatorTL]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage test"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage test"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  testmodular_phase:
    needs: [test_phase, TestModularModels, TestTransfer, TestDecompositionResNet, TestDecomposition]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage testmodular"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage testmodular"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}

  TestTENSORFLOW:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/mnistcalculator/tensorflow:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/mnistcalculator/tensorflow:latest tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd tensorflow
            chmod +x build.sh
            ./build.sh
            RES=$(./build/src/cpp/DigitCalculator resources/images/1.png resources/images/2.png resources/images/3.png resources/images/4.png resources/images/5.png resources/images/6.png)
            if [[ $RES != *"SUM: 579"* ]]; then echo "Wrong result:" $RES; exit 1; fi;
        run: docker exec build-container bash -c "$SCRIPT"

  TestMavenStreamtestPlugin:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            cd mnist-calculator
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 streamtest:streamtest-build -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  TestEMADLMavenPlugin:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd emadl-maven-plugin
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:train -s settings.xml -U
            mkdir output
            python3 calculator.py
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: TestEMADLMavenPlugin
          retention-days: 1 week
          path: |
            applications/MNISTCalculator/emadl-maven-plugin/output/*

  TestModularModels:
    needs: test_phase
    if: ${{ !cancelled() && needs.test_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            apt update && apt install -y libomp-dev
            cd mnist-modular/Streamtest
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml -U
            mkdir output
            python3 calculator.py
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: TestModularModels
          retention-days: 7
          path: |
            applications/MNISTCalculator/mnist-modular/Streamtest/output/*

  TestDecomposition:
    needs: test_phase
    if: ${{ !cancelled() && needs.test_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            export TZ=Europe/Berlin && apt update && DEBIAN_FRONTEND=noninteractive apt install -y tzdata
            apt update && apt install -y libomp-dev libopencv-dev python3-opencv
            ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
            dpkg-reconfigure --frontend noninteractive tzdata
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            ln /usr/bin/python3 /usr/bin/python -f
            cd mnist-modular/Streamtest
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve -s settings.xml -U
            cd ../Decomposition
            ./runDecomposition.sh
            STATUS=$?
            if [[ $STATUS -eq 1 ]]; then echo "Error during decomposition." $RES; exit 1; fi;
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: TestDecomposition
          retention-days: 7
          path: |
            applications/MNISTCalculator/mnist-modular/Streamtest/output/*

  TestDecompositionResNet:
    needs: [TestEMADLMavenPlugin, test_phase]
    if: ${{ !cancelled() && needs.test_phase.result == 'success' && needs.TestEMADLMavenPlugin.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: TestEMADLMavenPlugin
          path: |
            applications/MNISTCalculator/applications/MNISTCalculator/emadl-maven-plugin/output/*
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            export TZ=Europe/Berlin
            apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata libomp-dev libopencv-dev python3-opencv
            ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
            dpkg-reconfigure --frontend noninteractive tzdata
            python3 -m pip install --upgrade pip
            python3 -m pip install scikit-image opencv-python
            ln -fs /usr/bin/python3 /usr/bin/python
            cd mnist-modular/DecompositionResNet
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml -U
        run: docker exec build-container bash -c "$SCRIPT"

  TestTransfer:
    needs: test_phase
    if: ${{ !cancelled() && needs.test_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            export TZ=Europe/Berlin
            apt update && DEBIAN_FRONTEND=noninteractive apt install -y tzdata libomp-dev libopencv-dev python3-opencv
            ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
            dpkg-reconfigure --frontend noninteractive tzdata
            python3 -m pip install -U pip scikit-image opencv-python
            ln -fs /usr/bin/python3 /usr/bin/python
            cd transfer
            chmod +x runTransfer.sh
            ./runTransfer.sh
        run: docker exec build-container bash -c "$SCRIPT"

  TestMnistWithAdaNet:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
            cd AdaNet
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  TestMNISTwithCustomLayer:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170:v0.0.1 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            shopt -s expand_aliases
            echo 'alias python='\''/usr/bin/python3'\''' >> ~/.bashrc
            . ~/.bashrc
            cat ~/.bashrc
            echo $PYTHONPATH
            python --version
            python3 --version
            which python
            which python3
            alias python=/usr/bin/python3
            python --version
            python3 --version
            which python
            type -a python
            mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
            cd mnist-custom-layer
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  TrainTensorflowONNX:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/tensorflow-onnx:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/tensorflow-onnx:latest tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd onnx/tensorflow-pretrained
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Upload artifacts
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: TrainTensorflowONNX
          retention-days: 1 day
          path: |
            applications/MNISTCalculator/onnx/tensorflow-pretrained/model/

  TestGluonONNX:
    needs: [TrainTensorflowONNX, prebuild_phase]
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success'      && github.ref_name != 'modular_testing' && needs.TrainTensorflowONNX.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: TrainTensorflowONNX
          path: |
            applications/MNISTCalculator/applications/MNISTCalculator/onnx/tensorflow-pretrained/model/
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170-onnx:v0.0.1
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/dockerimages/mxnet170-onnx:v0.0.1 tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            cd onnx/tensorflow-pretrained
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            ls model/cNNCalculator.Network/
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:install-pretrained -e -s ./settings.xml
            cd ../gluon-load
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:train -s settings.xml
            chmod +x build.sh
            ./build.sh
            RES=$(./build/src/cpp/DigitCalculator resources/images/1.png resources/images/2.png resources/images/3.png resources/images/4.png resources/images/5.png resources/images/6.png)
            if [[ $RES != *"SUM: 579"* ]]; then echo "Wrong result:" $RES; exit 1; fi;
        run: docker exec build-container bash -c "$SCRIPT"

  DeployMnistCalcArtifact:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          docker pull maven:3.6-jdk-8
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild maven:3.6-jdk-8 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd "emadl-maven_hexadecimal_calculator/trained_mnist_calc"
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 deploy -s ci_settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  DeployDecompositionResNetArtifact:
    needs: [TestEMADLMavenPlugin, prebuild_phase]
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success' && needs.TestEMADLMavenPlugin.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: TestEMADLMavenPlugin
          path: |
            applications/MNISTCalculator/applications/MNISTCalculator/emadl-maven-plugin/output/*
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            export TZ=Europe/Berlin
            apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata libomp-dev libopencv-dev python3-opencv
            ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
            dpkg-reconfigure --frontend noninteractive tzdata
            python3 -m pip install --upgrade pip
            python3 -m pip install scikit-image opencv-python
            ln -fs /usr/bin/python3 /usr/bin/python
            cd mnist-modular/DecompositionResNetExport
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve -s settings.xml -U -f pom_build.xml
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:train -s settings.xml -U -f pom_build.xml
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 deploy -s settings.xml -U -f pom_deploy.xml
        run: docker exec build-container bash -c "$SCRIPT"

  TrainHexadecimal_MnistCalculator:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd)/:/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        continue-on-error: true
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator/
            cd "emadl-maven_hexadecimal_calculator"
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            echo "$PWD"
            cd src/main/emadl/calculator
            ls
            cd ../../../..
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml -U
        run: docker exec build-container bash -c "$SCRIPT"

  TrainHexadecimal_MnistCalculatorTL:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd "emadl-maven_hexadecimal_calculator_transfer_learning"
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            echo "$PWD"
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve  -s settings.xml -U
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 clean verify -s settings.xml -U
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:train -s settings.xml -U
            mkdir output
            python3 calculator.py
        run: docker exec build-container bash -c "$SCRIPT"

  TrainOperator_MnistCalculator:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd "emadl-maven_operator_calculator"
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            echo "$PWD"
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve emadl:train -s settings.xml -U
            mkdir output
            python3 calculator.py
        run: docker exec build-container bash -c "$SCRIPT"

  TrainOperator_MnistCalculatorTL:
    needs: prebuild_phase
    if: ${{ !cancelled() && needs.prebuild_phase.result == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emadl2cpp/mxnet/190:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/MNISTCalculator
            cd "emadl-maven_operator_calculator_transfer_learning"
            python3 -m pip install -U pip
            python3 -m pip install scikit-image
            python3 -m pip install opencv-python
            echo "$PWD"
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 dependency:resolve  -s settings.xml -U
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 clean verify -s settings.xml -U
            mvn -Dmaven.wagon.http.retryHandler.count=50 -Dmaven.wagon.http.connectionTimeout=600000000 -Dmaven.wagon.http.readTimeout=6000000000 emadl:train -s settings.xml -U
            mkdir output
            python3 calculator.py
        run: docker exec build-container bash -c "$SCRIPT"

