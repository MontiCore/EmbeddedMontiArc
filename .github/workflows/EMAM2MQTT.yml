name: EMAM2MQTT
on:
  push:
    paths:
      - 'generators/EMAM2MQTT/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID : 29942
  CI_API_V4_URL : https://git.rwth-aachen.de/api/v4
  GITLABTOKEN : ${{ secrets.GITLABTOKEN }}
  cibuild : ${{ secrets.SE_NEXUS_PASSWORD }}
jobs:
  project_phase:
    needs: [BranchJobProject]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage project"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage project"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}
  adapter_phase:
    needs: [project_phase, BranchJobAdapter]
    if: ${{ !cancelled()}}
    runs-on: ubuntu-latest
    steps:
        - run: |
            echo "Finished stage adapter"
          if: ${{!contains(needs.*.result, 'failure')}}
        - run: |
            echo "Failed stage adapter"
            exit 1
          if: ${{contains(needs.*.result, 'failure')}}

  BranchJobDeploy:
    needs: adapter_phase
    if: ${{ !cancelled() && needs.adapter_phase.result == 'success' &&  github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emam2mqtt:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emam2mqtt:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMAM2MQTT
            mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -B clean deploy --settings settings.xml
            cat target/site/jacoco/index.html
        run: docker exec build-container bash -c "$SCRIPT"

  BranchJobProject:
    if: ${{ github.ref_name != 'master' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emam2mqtt:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emam2mqtt:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            apt-get update
            apt-get install -y maven
            cd /workspace
            cd generators/EMAM2MQTT
            mvn clean install -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"

  BranchJobAdapter:
    needs: project_phase
    if: ${{ !cancelled() && needs.project_phase.result == 'success'      && github.ref_name != 'master' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/emam2mqtt:latest
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLABTOKEN }} -e cibuild=$cibuild ghcr.io/monticore/emam2mqtt:latest tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd generators/EMAM2MQTT
            cd mqtt_adapter
            cmake .
            make
        run: docker exec build-container bash -c "$SCRIPT"

