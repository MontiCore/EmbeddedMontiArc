name: CoopMontiSimAutopilot
on:
  push:
    paths:
      - 'applications/reinforcement_learning/CoopMontiSimAutopilot/**'
  workflow_dispatch:
  pull_request:
env:
  CI_PROJECT_ID: 63620
  CI_API_V4_URL: https://git.rwth-aachen.de/api/v4
  GITLABTOKEN: ${{ secrets.GITLAB_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:

  TestBuild:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Start Docker Container
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker pull ghcr.io/monticore/coopmontisimautopilot:v0.0.2
          docker run --name build-container -d -v $(pwd):/workspace --network=host  -e CI_PROJECT_ID=$CI_PROJECT_ID -e CI_API_V4_URL=$CI_API_V4_URL -e GITLABTOKEN=${{ secrets.GITLAB_TOKEN }} ghcr.io/monticore/coopmontisimautopilot:v0.0.2 tail -f /dev/null
      - name: Script
        env:
          SCRIPT: |
            cd /workspace
            cd applications/reinforcement_learning/CoopMontiSimAutopilot
            apt-get update
            apt-get install -y maven
            . /opt/ros/noetic/setup.sh
            pip install numpy==1.19.1
            mkdir dev
            cd dev
            cp -r ../../../../simulators/basic-simulator .
            cp -r ../../../../simulators/simulation .
            cd simulation
            cd ROSInterface
            ./install.sh
            cp target/libROSInterface.so ../../basic-simulator/install/
            cd ../../basic-simulator
            mvn clean install -s settings.xml -DskipTests
            cd ../..
            cp -r ../../../../../generators/EMAM2Middleware .
            cd EMAM2Middleware
            mvn clean install -s settings.xml -DskipTests
            cd target
            cp -v *-jar-with-dependencies.jar ../../Autopilot/bin/
            cd ../../
            cd experiments
            cd basic
            ./install.sh
            ./ci_run_training.sh
            cd ..
            cd drive_forward
            ./install.sh
            cd ..
            cd angle/baseline-angle-representation
            ./install.sh
            cd ../../
            cd angle/angle-representation
            ./install.sh
            cd ../../
            cd centering/baseline-centering
            ./install.sh
            cd ../../
            cd centering/centering
            ./install.sh
            cd ../../
            cd intersection
            ./install.sh
            cd ..
            cd platooning
            ./install.sh
            cd ..
        run: docker exec build-container bash -c "set -e; $SCRIPT"