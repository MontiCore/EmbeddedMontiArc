import java.util.*;import java.lang.*;import de.monticore.lang.embeddedmontiview.embeddedmontiview._symboltable.*;import de.monticore.lang.embeddedmontiarc.embeddedmontiarc._symboltable.*;import static de.monticore.lang.ocl.nfp.NFPHelper.*;import de.monticore.lang.ocl.nfp.*;import de.monticore.symboltable.*;import de.monticore.symboltable.types.*;import de.monticore.symboltable.types.references.*;import org.jscience.physics.amount.Amount;import javax.measure.unit.*;import javax.measure.quantity.*;import java.util.*;import java.lang.*;import de.monticore.lang.ocl.nfp.EMANFPWitness;import de.monticore.lang.ocl.codegen.OCLEMAHelper;import de.monticore.lang.embeddedmontiarc.embeddedmontiarc._symboltable.*;import de.monticore.lang.embeddedmontiarc.embeddedmontiarc._symboltable.ComponentSymbol;import de.monticore.lang.embeddedmontiview.embeddedmontiview._symboltable.*;public class rule1 {static HashMap<String,EMANFPWitness> positiveWitness = new HashMap<>();static HashMap<String,EMANFPWitness> negativeWitness = new HashMap<>();public static HashMap<String,EMANFPWitness> getWitnessMap() {        HashMap<String, EMANFPWitness> witnesses = new HashMap<>();        witnesses.putAll(positiveWitness);        witnesses.putAll(negativeWitness);        return witnesses;}@SuppressWarnings("unchecked")public static boolean _ocl(ExpandedComponentInstanceSymbol cmp) {boolean _oclResult = true;try {boolean _oclLetIn0 = false;{ComponentSymbol selectedVals = cmp.getComponentType().getReferencedSymbol();Amount aggregatedValue = max(cmp.getTags(nfp.PowerTagSchema.PowerCmpInstSymbol.KIND), Amount.valueOf(Long.valueOf(0), Unit.valueOf("W")));_oclLetIn0 = (aggregatedValue).isLessThan((Amount)min(selectedVals.getTags(nfp.PowerTagSchema.PowerCmpSymbol.KIND), Amount.valueOf(Long.valueOf(9223372036854775807L), Unit.valueOf("W"))));if (_oclLetIn0) {positiveWitness.put(cmp.getName(), new EMANFPWitness(selectedVals,  aggregatedValue, true));} else {negativeWitness.put(cmp.getName(), new EMANFPWitness(selectedVals,  aggregatedValue, false));}}_oclResult &= (_oclLetIn0);} catch (Exception _oclResultLiftingException) {_oclResult = false;}return _oclResult;}public static boolean check(GlobalScope modelSymTab, GlobalScope viewSymTab) {boolean _oclResult = true;try {for (ExpandedComponentInstanceSymbol cmp : OCLEMAHelper.<ExpandedComponentInstanceSymbol>getAllSymbolInstances(modelSymTab, viewSymTab, ExpandedComponentInstanceSymbol.KIND)) {_oclResult &= _ocl(cmp);}} catch (Exception _oclResultLiftingException) {_oclResult = false;}if(_oclResult) {negativeWitness.clear();}return _oclResult;}}