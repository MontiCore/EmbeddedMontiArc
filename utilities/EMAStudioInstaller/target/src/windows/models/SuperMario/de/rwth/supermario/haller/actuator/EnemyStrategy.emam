package de.rwth.supermario.haller.actuator;

import de.rwth.supermario.haller.tools.OrRelation_5;
import de.rwth.supermario.haller.environment.Enemy;
import de.rwth.supermario.haller.environment.EnemyWatcher;

component EnemyStrategy {
    ports
        in Z enemyDistsX[5],
        in Z enemyDistsY[5],
        in Z enemyVelX[5],
        in Z enemyVelY[5],
        
        in Z^{1,2} marioPosition,
        out Z jumpAdvice,
        out Z directionAdvice;

    //Every EnemyWatcher watches a single Enemy
    instance EnemyWatcher enemyWatchers[5];
    connect enemyDistsX[:] ->enemyWatchers[:].EnemyDistX;
    connect enemyDistsY[:] ->enemyWatchers[:].EnemyDistY;
    connect enemyVelX[:] ->enemyWatchers[:].EnemyVelocityX;
    connect enemyVelY[:] ->enemyWatchers[:].EnemyVelocityY;
    
    //The output of all Watchers is combined via an or-relation.
    instance OrRelation_5 orR;
    connect enemyWatchers[:].inJumpRange -> orR.input[:];
    
    //The result is forwarded
    connect orR.output -> jumpAdvice;
    
    
}