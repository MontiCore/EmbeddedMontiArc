stages:
  - test
  - build
  - deploy
variables:
  TEST: test

image: ubuntu:latest

variable_job:
  stage: test
  script:
    - echo "Running tests..."
    - echo "$TEST"

artifact_job:
  stage: test
  script:
    - echo "Building artifacts..."
    - echo "Artifact content" > artifact.txt
  artifacts:
    paths:
      - artifact.txt

artifact_advanced_job:
  stage: test
  script:
    - echo "Building artifacts..."
    - echo "Artifact content" > artifact.txt
  artifacts:
    paths:
      - artifact.txt
    expire_in: 10 days
    when: always

image_native_job:
  stage: test
  script:
    - echo "Deploying image..."
  image: docker:latest

image_manual_migrated_job:
  stage: test
  script:
    - echo "Deploying private image..."
  image: ghcr.io/davidblm/repoa/embedded_montiarc:latest

image_manual_not_migrated_job:
  stage: test
  script:
    - echo "Deploying private image..."
  image: registry.gitlab.com/monticore/EmbeddedMontiArc/applications/repoA/embedded_montiarc2:latest

only_branch_job:
  stage: test
  script:
    - echo "This job runs only on the 'main' branch"
  only:
    - main

except_branch_job:
  stage: test
  script:
    - echo "This job runs on all branches except 'main'"
  except:
    - main

only_files_job:
  stage: test
  script:
    - echo "This job runs only if files in the 'src/' directory are changed"
  only:
    changes:
      - src/**/*

except_files_job:
  stage: test
  script:
    - echo "This job runs on all changes except files in the 'docs/' directory"
  except:
    changes:
      - docs/**/*

only_except_files_job:
  stage: test
  script:
    - echo "This job runs only if files in the 'src/' directory are changed, but not if files in the 'docs/' directory are changed"
  only:
    changes:
      - src/**/*
  except:
    changes:
      - docs/**/*

need_job:
  stage: test
  script:
    - echo "This job needs the 'artifact_job' to complete successfully before it runs and should download it"
  needs:
    - artifact_job
pages:
  stage: deploy
  script:
    - echo "Deploying pages..."
    - mkdir public
    - echo "This is a test page" > public/index.html
  artifacts:
    paths:
      - public

trigger_job:
  stage: deploy
  script:
    - echo "Triggering another repository..."
  trigger:
    project: 'monticore/embeddedmontiarc/another-repo'
    branch: main

docker_not_migrated_job:
  stage: build
  script:
    - echo "Building Docker image..."
    - docker login registry.git.rwth-aachen.de -u someUserName -p abc
    - docker build -t registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170-dgl:v0.0.1 -f Dockerfile-dgl .
    - docker push registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170-dgl:v0.0.1

docker_migrated_job:
  stage: build
  script:
    - echo "Building Docker image..."
    - docker login registry.git.rwth-aachen.de -u someUserName -p abc
    - docker build -t registry.gitlab.com/monticore/EmbeddedMontiArc/applications/repoA/embedded_montiarc:latest -f Dockerfile .
    - docker push registry.gitlab.com/monticore/EmbeddedMontiArc/applications/repoA/embedded_montiarc:latest

maven_job:
  stage: build
  script:
    - echo "Building Maven project..."
    - mvn clean install -s settings.xml

report_job:
  stage: test
  script:
    - echo "Generating test report..."
    - mkdir reports
    - echo "Test report content" > reports/test-report.txt
  artifacts:
    reports:
      - junit:reports/test-report.xml

rules_job:
  stage: test
  script:
    - echo "This job runs based on rules"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

    - if: '$CI_COMMIT_BRANCH != "develop"'
      changes:
        - src/

allow_failure_job:
  stage: test
  script:
    - echo "This job allows failure"
  allow_failure: true

dependencies_job:
  stage: test
  script:
    - echo "This job depends on the 'artifact_job' and should download its artifacts"
  dependencies:
    - need_job
