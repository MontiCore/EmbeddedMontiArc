package de.rwth.pacman.heithoff1.decision;

import de.rwth.pacman.common.ConstantBoolean;
import de.rwth.pacman.common.Round;
import de.rwth.pacman.common.Equals;
import de.rwth.pacman.common.And;
import de.rwth.pacman.common.TrashNumber;
import de.rwth.pacman.common.SwitchBoolean;
import de.rwth.pacman.heithoff1.common.OutgoingPaths;

// check which directions are not blocked

component PossibleWays {
    ports
      in Q(-1m: 19m) pacManX,
      in Q(0m: 22m) pacManY,
      in Z^{22,19} map,
      
      out Boolean topPossible,
      out Boolean bottomPossible,
      out Boolean leftPossible,
      out Boolean rightPossible;

    // is PM on one full tile
    instance Round pacX, pacY;
    instance Equals isOnFullTileX, isOnFullTileY;

    connect pacManX   -> pacX.in1;
    connect pacManY   -> pacY.in1;
    connect pacX.out1 -> isOnFullTileX.in1;
    connect pacY.out1 -> isOnFullTileY.in1;
    connect pacManX   -> isOnFullTileX.in2;
    connect pacManY   -> isOnFullTileY.in2;
      
    // Check the outgoing Paths
    instance OutgoingPaths outgoingPaths;

    connect map       -> outgoingPaths.map;
    connect pacX.out1 -> outgoingPaths.pacManX;
    connect pacY.out1 -> outgoingPaths.pacManY;
    
    // Set to false if not on full tile
    instance SwitchBoolean setTop, setBottom, setLeft, setRight;
    instance ConstantBoolean<0> constantFalse;

    connect isOnFullTileX.out1 -> setLeft.cond, setRight.cond;
    connect isOnFullTileY.out1 -> setTop.cond, setBottom.cond;
    connect outgoingPaths.isLeftFree   -> setLeft.in1;
    connect outgoingPaths.isRightFree  -> setRight.in1;
    connect outgoingPaths.isTopFree    -> setTop.in1;
    connect outgoingPaths.isBottomFree -> setBottom.in1;
    connect constantFalse.out1 -> setLeft.in3, setRight.in3, setTop.in3, setBottom.in3;

    connect setLeft.out1   -> leftPossible;
    connect setRight.out1  -> rightPossible;
    connect setTop.out1    -> topPossible;
    connect setBottom.out1 -> bottomPossible;
    
    // Trash
    instance TrashNumber trash;
    
    connect outgoingPaths.outgoingPaths -> trash.in1;
}