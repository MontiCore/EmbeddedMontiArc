package de.rwth.pacman.heithoff1.normalizePositions;

import de.rwth.pacman.common.SplitArray;
import de.rwth.pacman.common.JoinArray;
import de.rwth.pacman.common.Constant;
import de.rwth.pacman.common.Sum;

component NormalizeGhosts {
    ports
      in Q(-1m: 19m)^{1,4} ghostX,
      in Q(0m: 22m)^{1,4} ghostY,
      out Q(-1m: 19m)^{1,4} newGhostX,
      out Q(0m: 22m)^{1,4} newGhostY;

    instance SplitArray<4> splitX;
    instance SplitArray<4> splitY;
    instance Increment incX1;
    instance Increment incX2;
    instance Increment incX3;
    instance Increment incX4;
    instance Increment incY1;
    instance Increment incY2;
    instance Increment incY3;
    instance Increment incY4;
    instance JoinArray<4> joinX;
    instance JoinArray<4> joinY;
    
    connect ghostX -> splitX.in1;
    connect ghostY -> splitY.in1;

    connect splitX.out1[1] -> incX1.in1;
    connect splitX.out1[2] -> incX2.in1;
    connect splitX.out1[3] -> incX3.in1;
    connect splitX.out1[4] -> incX4.in1;
    connect splitY.out1[1] -> incY1.in1;
    connect splitY.out1[2] -> incY2.in1;
    connect splitY.out1[3] -> incY3.in1;
    connect splitY.out1[4] -> incY4.in1;

    connect incX1.out1 -> joinX.in1[1];
    connect incX2.out1 -> joinX.in1[2];
    connect incX3.out1 -> joinX.in1[3];
    connect incX4.out1 -> joinX.in1[4];
    connect incY1.out1 -> joinY.in1[1];
    connect incY2.out1 -> joinY.in1[2];
    connect incY3.out1 -> joinY.in1[3];
    connect incY4.out1 -> joinY.in1[4];

    connect joinX.out1 -> newGhostX;
    connect joinY.out1 -> newGhostY;
}